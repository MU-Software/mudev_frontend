{"ast":null,"code":"import FrostAPI from \"./network/api\";\n// (new FrostAPI()).signUp('musoftware', 'musoftware@daum.net', 'unexpected8090!', 'MU').then((api: FrostAPI) => {\n//     console.log(api.userID);\n// }).catch((reason: FrostError) => {\n//     console.log(reason);\n//     console.log(reason.debugMessage);\n// });\n// (new FrostAPI()).signOut();\nvar frostApi = new FrostAPI();\n\nif (!frostApi.isSignedIn()) {\n  new FrostAPI().signIn('musoftware', 'unexpected8090!').then(api => {\n    console.log(api.userID);\n  }).catch(reason => {\n    console.log(reason);\n    console.log(reason.debugMessage);\n  });\n} else {\n  console.log(frostApi.userID);\n  console.log(frostApi.roles);\n}\n\nconst TEST_VAR = '1';\nconst TEST_VAR2 = 123;\nconst TEST_VAR3 = 123;\nexport { TEST_VAR, TEST_VAR2, TEST_VAR3 };","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/test.ts"],"names":["FrostAPI","frostApi","isSignedIn","signIn","then","api","console","log","userID","catch","reason","debugMessage","roles","TEST_VAR","TEST_VAR2","TEST_VAR3"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,IAAID,QAAJ,EAAf;;AACA,IAAI,CAACC,QAAQ,CAACC,UAAT,EAAL,EAA4B;AACvB,MAAIF,QAAJ,EAAD,CAAiBG,MAAjB,CAAwB,YAAxB,EAAsC,iBAAtC,EAAyDC,IAAzD,CAA+DC,GAAD,IAAmB;AAC7EC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACH,GAFD,EAEGC,KAFH,CAEUC,MAAD,IAAwB;AAC7BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,YAAnB;AACH,GALD;AAMH,CAPD,MAOO;AACHL,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,MAArB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACW,KAArB;AACH;;AAED,MAAMC,QAAQ,GAAG,GAAjB;AACA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,SAAS,GAAG,GAAlB;AAEA,SAASF,QAAT,EAAmBC,SAAnB,EAA6BC,SAA7B","sourcesContent":["import FrostAPI from \"./network/api\";\r\nimport { FrostError } from \"./common/error\";\r\n\r\n// (new FrostAPI()).signUp('musoftware', 'musoftware@daum.net', 'unexpected8090!', 'MU').then((api: FrostAPI) => {\r\n//     console.log(api.userID);\r\n// }).catch((reason: FrostError) => {\r\n//     console.log(reason);\r\n//     console.log(reason.debugMessage);\r\n// });\r\n// (new FrostAPI()).signOut();\r\nvar frostApi = new FrostAPI();\r\nif (!frostApi.isSignedIn()) {\r\n    (new FrostAPI()).signIn('musoftware', 'unexpected8090!').then((api: FrostAPI) => {\r\n        console.log(api.userID);\r\n    }).catch((reason: FrostError) => {\r\n        console.log(reason);\r\n        console.log(reason.debugMessage);\r\n    });\r\n} else {\r\n    console.log(frostApi.userID);\r\n    console.log(frostApi.roles);\r\n}\r\n\r\nconst TEST_VAR = '1';\r\nconst TEST_VAR2 = 123;\r\nconst TEST_VAR3 = 123;\r\n\r\nexport { TEST_VAR, TEST_VAR2,TEST_VAR3 };\r\n"]},"metadata":{},"sourceType":"module"}