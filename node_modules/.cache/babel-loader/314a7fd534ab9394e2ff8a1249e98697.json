{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\account\\\\signin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signInActionCreatorAsync } from 'src/redux/modules/account/action_creator';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\nimport { CustomFormText } from './element/CustomFormText';\nimport './account.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountSignIn = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [signInFormData, setSignInFormData] = useState({\n    idTextFieldValue: '',\n    pwTextFieldValue: '',\n    idNotUsableReason: null,\n    passwordNotUsableReason: null,\n    signInFailedReason: null,\n    isProcessing: false\n  });\n\n  const trySignIn = () => {\n    setSignInFormData({ ...signInFormData,\n      isProcessing: true\n    });\n    console.log(signInFormData.idTextFieldValue);\n    console.log(signInFormData.pwTextFieldValue); // dispatch(signInActionCreatorAsync());\n    // Run below if success\n    // navigate(-1);\n\n    setTimeout(() => setSignInFormData({ ...signInFormData,\n      isProcessing: false\n    }), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"accountMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"accountAside\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC544\\uC774\\uB514 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ID / Email\",\n            disable: signInFormData.isProcessing,\n            value: signInFormData.idTextFieldValue,\n            onChange: event => setSignInFormData({ ...signInFormData,\n              idTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signInFormData.idNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            disable: signInFormData.isProcessing,\n            value: signInFormData.pwTextFieldValue,\n            onChange: event => setSignInFormData({ ...signInFormData,\n              pwTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signInFormData.passwordNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n          className: \"accountAsideFormGroup\",\n          children: signInFormData.signInFailedReason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accountSubmitBtnContainer\",\n          children: [/*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n            variant: \"primary\",\n            size: false,\n            style: {\n              margin: undefined\n            },\n            onClick: () => trySignIn(),\n            showSpinner: signInFormData.isProcessing,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            disable: signInFormData.isProcessing,\n            onClick: () => navigate('/account/signup'),\n            children: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"signInGoToResetPassword\",\n          href: \"#\",\n          onClick: () => navigate('/account/reset-password'),\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC5B4\\uBC84\\uB9AC\\uC168\\uB098\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AccountSignIn, \"w/Z1lo640c+7O1gi6U1qgyncJu0=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = AccountSignIn;\nexport { AccountSignIn };\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSignIn\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/account/signin.jsx"],"names":["React","Component","useState","useNavigate","useSelector","useDispatch","signInActionCreatorAsync","Button","Form","PHSpinnerButton","CustomFormText","AccountSignIn","navigate","dispatch","signInFormData","setSignInFormData","idTextFieldValue","pwTextFieldValue","idNotUsableReason","passwordNotUsableReason","signInFailedReason","isProcessing","trySignIn","console","log","setTimeout","event","target","value","margin","undefined"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { signInActionCreatorAsync } from 'src/redux/modules/account/action_creator';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { CustomFormText } from './element/CustomFormText';\r\nimport './account.css';\r\n\r\nconst AccountSignIn = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [signInFormData, setSignInFormData] = useState({\r\n    idTextFieldValue: '',\r\n    pwTextFieldValue: '',\r\n\r\n    idNotUsableReason: null,\r\n    passwordNotUsableReason: null,\r\n    signInFailedReason: null,\r\n    isProcessing: false,\r\n  });\r\n  const trySignIn = () => {\r\n    setSignInFormData({\r\n      ...signInFormData,\r\n      isProcessing: true,\r\n    });\r\n\r\n    console.log(signInFormData.idTextFieldValue);\r\n    console.log(signInFormData.pwTextFieldValue);\r\n    // dispatch(signInActionCreatorAsync());\r\n\r\n    // Run below if success\r\n    // navigate(-1);\r\n    setTimeout(\r\n      ()=> setSignInFormData({\r\n        ...signInFormData,\r\n        isProcessing: false,\r\n      }), 5000\r\n    );\r\n  };\r\n\r\n  return <section className='accountMain'>\r\n    <header>\r\n      <h2>로그인</h2>\r\n    </header>\r\n    <aside className='accountAside'>\r\n      <Form>\r\n        <Form.Group className='accountAsideFormGroup' controlId='formBasicEmail'>\r\n          <Form.Label>아이디 또는 이메일</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='ID / Email'\r\n            disable={signInFormData.isProcessing}\r\n            value={signInFormData.idTextFieldValue}\r\n            onChange={\r\n              (event) => setSignInFormData({\r\n                ...signInFormData,\r\n                idTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <CustomFormText>{signInFormData.idNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formBasicPassword'>\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='비밀번호'\r\n            disable={signInFormData.isProcessing}\r\n            value={signInFormData.pwTextFieldValue}\r\n            onChange={\r\n              (event) => setSignInFormData({\r\n                ...signInFormData,\r\n                pwTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <CustomFormText>{signInFormData.passwordNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <CustomFormText className='accountAsideFormGroup'>{signInFormData.signInFailedReason}</CustomFormText>\r\n\r\n        <div className='accountSubmitBtnContainer'>\r\n          <PHSpinnerButton\r\n            variant='primary'\r\n            size={false}\r\n            style={{ margin: undefined }}\r\n            onClick={() => trySignIn()}\r\n            showSpinner={signInFormData.isProcessing}>\r\n            로그인\r\n          </PHSpinnerButton>\r\n\r\n          <Button\r\n            variant='outline-light'\r\n            disable={signInFormData.isProcessing}\r\n            onClick={() => navigate('/account/signup')}>\r\n            계정 만들기\r\n          </Button>\r\n        </div><br />\r\n        <a className='signInGoToResetPassword' href='#' onClick={() => navigate('/account/reset-password')}>\r\n          비밀번호를 잊어버리셨나요?\r\n        </a>\r\n      </Form>\r\n    </aside>\r\n  </section>;\r\n}\r\n\r\nexport { AccountSignIn };\r\n"]},"metadata":{},"sourceType":"module"}