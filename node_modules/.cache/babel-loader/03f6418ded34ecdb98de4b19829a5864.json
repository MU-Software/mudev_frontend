{"ast":null,"code":"// export class AccountInfo {\n//     isSignedIn: boolean = false;\n//     uuid: number = -1;\n//     id: string = '';\n//     nick: string = '';\n//     email: string = '';\n//     errShowMsg?: string;\n//     private frostErrorObj?: FrostError;\n//     private responseObj?: APIResult;\n//     constructor(inObj: Record<string, unknown>) {\n//         if (!inObj.uuid) return;\n//         this.isSignedIn = true;\n//         this.uuid = inObj.uuid;\n//         this.id = inObj.id;\n//         this.nick = inObj.nick;\n//         this.email = inObj.email;\n//     }\n// }\nexport class AccountInfo {\n  constructor(accountInfoObj = {}) {\n    this.isSignedIn = false;\n    this.uuid = -1;\n    this.id = '';\n    this.nick = '';\n    this.email = '';\n    this.errShowMsg = void 0;\n    this.frostErrorObj = void 0;\n    Object.assign(this, accountInfoObj);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/redux/modules/account/model.ts"],"names":["AccountInfo","constructor","accountInfoObj","isSignedIn","uuid","id","nick","email","errShowMsg","frostErrorObj","Object","assign"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,WAAN,CAAkB;AAUdC,EAAAA,WAAW,CAACC,cAAoC,GAAG,EAAxC,EAA4C;AAAA,SAT9DC,UAS8D,GATxC,KASwC;AAAA,SAR9DC,IAQ8D,GAR/C,CAAC,CAQ8C;AAAA,SAP9DC,EAO8D,GAPjD,EAOiD;AAAA,SAN9DC,IAM8D,GAN/C,EAM+C;AAAA,SAL9DC,KAK8D,GAL9C,EAK8C;AAAA,SAH9DC,UAG8D;AAAA,SAF9DC,aAE8D;AAC1DC,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBT,cAApB;AACH;;AAZoB","sourcesContent":["import { FrostError } from \"src/common/error\";\r\nimport { APIResult } from \"src/network/api_response\";\r\n\r\n// export class AccountInfo {\r\n//     isSignedIn: boolean = false;\r\n//     uuid: number = -1;\r\n//     id: string = '';\r\n//     nick: string = '';\r\n//     email: string = '';\r\n\r\n//     errShowMsg?: string;\r\n//     private frostErrorObj?: FrostError;\r\n//     private responseObj?: APIResult;\r\n\r\n//     constructor(inObj: Record<string, unknown>) {\r\n//         if (!inObj.uuid) return;\r\n\r\n//         this.isSignedIn = true;\r\n\r\n//         this.uuid = inObj.uuid;\r\n//         this.id = inObj.id;\r\n//         this.nick = inObj.nick;\r\n//         this.email = inObj.email;\r\n//     }\r\n// }\r\n\r\nexport class AccountInfo {\r\n    isSignedIn: boolean = false;\r\n    uuid: number = -1;\r\n    id: string = '';\r\n    nick: string = '';\r\n    email: string = '';\r\n\r\n    errShowMsg?: string;\r\n    frostErrorObj?: FrostError;\r\n\r\n    public constructor(accountInfoObj: Partial<AccountInfo> = {}) {\r\n        Object.assign(this, accountInfoObj);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}