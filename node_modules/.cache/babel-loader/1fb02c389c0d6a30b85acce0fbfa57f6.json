{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Documents\\\\GitHub\\\\mudev_frontend\\\\src\\\\ui\\\\common\\\\element\\\\muAlertMsgBox.tsx\";\nimport React from 'react';\nimport { Modal, Button } from \"react-bootstrap\";\nimport './muAlertMsgBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PHAlertMessageBox = props => {\n  var _props$variant;\n\n  const closeModalFunc = () => props.setModalShowState(false);\n\n  let msgBoxBody = props.body;\n  if ((typeof props.body === 'string' || props.body instanceof String) && props.body.includes('\\n')) msgBoxBody = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.body.split('\\n').map(value => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: `muAlertMsgBoxModal${(_props$variant = props.variant) !== null && _props$variant !== void 0 ? _props$variant : ''}`,\n    show: props.modalShowState,\n    onHide: closeModalFunc,\n    backdrop: \"static\",\n    keyboard: false,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: props.showCloseBtn,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            margin: 0\n          },\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: msgBoxBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [props.onCancelBtnClick && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: props.onCancelBtnClick,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: props.variant === 'error' ? 'danger' : props.variant === 'warning' ? 'warning' : 'primary',\n        onClick: props.onAcceptBtnClick,\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_c = PHAlertMessageBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"PHAlertMessageBox\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/src/ui/common/element/muAlertMsgBox.tsx"],"names":["React","Modal","Button","PHAlertMessageBox","props","closeModalFunc","setModalShowState","msgBoxBody","body","String","includes","split","map","value","variant","modalShowState","showCloseBtn","margin","title","onCancelBtnClick","onAcceptBtnClick"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAEA,SAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;AAOA,OAAO,qBAAP;;;AAEA,OAAO,MAAMC,iBAA2B,GAAIC,KAAD,IASrC;AAAA;;AACF,QAAMC,cAAc,GAAG,MAAMD,KAAK,CAACE,iBAAN,CAAwB,KAAxB,CAA7B;;AAEA,MAAIC,UAAU,GAAGH,KAAK,CAACI,IAAvB;AACA,MAAI,CAAC,OAAQJ,KAAK,CAACI,IAAd,KAAwB,QAAxB,IAAoCJ,KAAK,CAACI,IAAN,YAAsBC,MAA3D,KAAsEL,KAAK,CAACI,IAAN,CAAWE,QAAX,CAAoB,IAApB,CAA1E,EACIH,UAAU,gBAAG;AAAA,cAAMH,KAAK,CAACI,IAAN,CAAWG,KAAX,CAAiB,IAAjB,EAAuBC,GAAvB,CAA4BC,KAAD,iBAAW;AAAA,iBAAGA,KAAH,eAAS;AAAA;AAAA;AAAA;AAAA,cAAT;AAAA,oBAAtC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAb;AAEJ,sBAAO,QAAC,KAAD;AACH,IAAA,SAAS,EAAG,qBAAD,kBAAqBT,KAAK,CAACU,OAA3B,2DAAsC,EAAG,EADjD;AAEH,IAAA,IAAI,EAAEV,KAAK,CAACW,cAFT;AAGH,IAAA,MAAM,EAAEV,cAHL;AAIH,IAAA,QAAQ,EAAC,QAJN;AAKH,IAAA,QAAQ,EAAE,KALP;AAMH,IAAA,QAAQ,MANL;AAAA,4BAOH,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,EAAED,KAAK,CAACY,YAAjC;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAA,+BAAa;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAX;AAAA,oBAA4Bb,KAAK,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPG,eAUH,QAAC,KAAD,CAAO,IAAP;AAAA,gBAAaX;AAAb;AAAA;AAAA;AAAA;AAAA,YAVG,eAWH,QAAC,KAAD,CAAO,MAAP;AAAA,iBACKH,KAAK,CAACe,gBAAN,iBAA0B,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEf,KAAK,CAACe,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD/B,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAGf,KAAK,CAACU,OAAN,KAAkB,OAAnB,GAA8B,QAA9B,GAA0CV,KAAK,CAACU,OAAN,KAAkB,SAAnB,GAAgC,SAAhC,GAA4C,SADlG;AAEI,QAAA,OAAO,EAAEV,KAAK,CAACgB,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH,CAlCM;KAAMjB,iB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { FrostError } from 'src/common/error';\r\n\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { PlaylistConfig } from '../playco/model';\r\nimport { PlayCoAPI } from '../playco/api';\r\nimport './muAlertMsgBox.css';\r\n\r\nexport const PHAlertMessageBox: React.FC = (props: {\r\n    modalShowState: boolean;\r\n    setModalShowState: (boolean) => void;\r\n    onAcceptBtnClick: () => void;\r\n    onCancelBtnClick?: () => void;\r\n    title: string;\r\n    body: React.FC;\r\n    showCloseBtn?: boolean;\r\n    variant?: 'warning' | 'error';\r\n}) => {\r\n    const closeModalFunc = () => props.setModalShowState(false);\r\n\r\n    let msgBoxBody = props.body;\r\n    if ((typeof (props.body) === 'string' || props.body instanceof String) && props.body.includes('\\n'))\r\n        msgBoxBody = <div>{props.body.split('\\n').map((value) => <>{value}<br /></>)}</div>;\r\n\r\n    return <Modal\r\n        className={`muAlertMsgBoxModal${props.variant ?? ''}`}\r\n        show={props.modalShowState}\r\n        onHide={closeModalFunc}\r\n        backdrop='static'\r\n        keyboard={false}\r\n        centered >\r\n        <Modal.Header closeButton={props.showCloseBtn}>\r\n            <Modal.Title><h5 style={{ margin: 0, }}>{props.title}</h5></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{msgBoxBody}</Modal.Body>\r\n        <Modal.Footer>\r\n            {props.onCancelBtnClick && <Button variant='secondary' onClick={props.onCancelBtnClick}>취소</Button>}\r\n            <Button\r\n                variant={(props.variant === 'error') ? 'danger' : (props.variant === 'warning') ? 'warning' : 'primary'}\r\n                onClick={props.onAcceptBtnClick}>확인</Button>\r\n        </Modal.Footer>\r\n    </Modal>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}