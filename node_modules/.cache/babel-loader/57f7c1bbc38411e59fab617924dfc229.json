{"ast":null,"code":"import { Manager } from \"socket.io-client\";\nlet playCoSocketIOHandlerInstance;\nexport class PlayCoSocketIOHandler {\n  constructor() {\n    this.socketIoMgr = void 0;\n    this.socketIo = void 0;\n    this.eventHandler = {\n      connect: () => {//\n      },\n      disconnect: () => {//\n      },\n      connectToPlayCo: () => {//\n      }\n    };\n    if (playCoSocketIOHandlerInstance) return playCoSocketIOHandlerInstance;\n    this.socketIoMgr = new Manager('https://hyperion.mudev.cc', {\n      reconnectionDelayMax: 10000,\n      path: '/api/dev/ws'\n    });\n    this.socketIo = this.socketIoMgr.socket('/playco_ws', {});\n    playCoSocketIOHandlerInstance = this;\n  }\n\n  connectToPlayCo() {\n    const reqData = {\n      eventName: 'onPlaycoConnect',\n      data: {\n        access_token: '',\n        csrf_token: ''\n      }\n    };\n  }\n\n  disconnect() {//\n  }\n\n  enterPlaylist() {\n    const reqData = {\n      eventName: 'onPlaylistEnter',\n      data: {\n        playlist_id: 0\n      }\n    };\n  }\n\n  leavePlaylist() {//\n  }\n\n  setPlaylistStatus() {\n    const reqData = {\n      eventName: 'onPlaylistSetStatus',\n      data: {\n        playlist_id: 0,\n        status: {}\n      }\n    };\n  }\n\n  onPlaylistUpdate() {//\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/playco/sio.ts"],"names":["Manager","playCoSocketIOHandlerInstance","PlayCoSocketIOHandler","constructor","socketIoMgr","socketIo","eventHandler","connect","disconnect","connectToPlayCo","reconnectionDelayMax","path","socket","reqData","eventName","data","access_token","csrf_token","enterPlaylist","playlist_id","leavePlaylist","setPlaylistStatus","status","onPlaylistUpdate"],"mappings":"AAAA,SAAaA,OAAb,QAA4B,kBAA5B;AAEA,IAAIC,6BAAJ;AACA,OAAO,MAAMC,qBAAN,CAA4B;AAiB/BC,EAAAA,WAAW,GAAG;AAAA,SAhBdC,WAgBc;AAAA,SAfdC,QAec;AAAA,SAbdC,YAac,GAb6B;AACvCC,MAAAA,OAAO,EAAE,MAAM,CACX;AACH,OAHsC;AAIvCC,MAAAA,UAAU,EAAE,MAAM,CACd;AACH,OANsC;AAQvCC,MAAAA,eAAe,EAAE,MAAM,CACnB;AACH;AAVsC,KAa7B;AACV,QAAIR,6BAAJ,EAAmC,OAAOA,6BAAP;AAEnC,SAAKG,WAAL,GAAmB,IAAIJ,OAAJ,CAAY,2BAAZ,EAAyC;AACxDU,MAAAA,oBAAoB,EAAE,KADkC;AAExDC,MAAAA,IAAI,EAAE;AAFkD,KAAzC,CAAnB;AAIA,SAAKN,QAAL,GAAgB,KAAKD,WAAL,CAAiBQ,MAAjB,CAAwB,YAAxB,EAAsC,EAAtC,CAAhB;AACAX,IAAAA,6BAA6B,GAAG,IAAhC;AACH;;AAEDQ,EAAAA,eAAe,GAAG;AACd,UAAMI,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,iBADC;AAEZC,MAAAA,IAAI,EAAE;AACFC,QAAAA,YAAY,EAAE,EADZ;AAEFC,QAAAA,UAAU,EAAE;AAFV;AAFM,KAAhB;AAOH;;AAEDT,EAAAA,UAAU,GAAG,CACT;AACH;;AAEDU,EAAAA,aAAa,GAAG;AACZ,UAAML,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,iBADC;AAEZC,MAAAA,IAAI,EAAE;AACFI,QAAAA,WAAW,EAAE;AADX;AAFM,KAAhB;AAOH;;AAEDC,EAAAA,aAAa,GAAG,CACZ;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMR,OAAO,GAAG;AACZC,MAAAA,SAAS,EAAE,qBADC;AAEZC,MAAAA,IAAI,EAAE;AACFI,QAAAA,WAAW,EAAE,CADX;AAEFG,QAAAA,MAAM,EAAE;AAFN;AAFM,KAAhB;AAOH;;AAEDC,EAAAA,gBAAgB,GAAG,CACf;AACH;;AApE8B","sourcesContent":["import { io, Manager } from \"socket.io-client\";\r\n\r\nlet playCoSocketIOHandlerInstance: PlayCoSocketIOHandler;\r\nexport class PlayCoSocketIOHandler {\r\n    socketIoMgr: io.Manager\r\n    socketIo: io\r\n\r\n    eventHandler: Record<string, () => any > = {\r\n        connect: () => {\r\n            //\r\n        },\r\n        disconnect: () => {\r\n            //\r\n        },\r\n\r\n        connectToPlayCo: () => {\r\n            //\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        if (playCoSocketIOHandlerInstance) return playCoSocketIOHandlerInstance;\r\n\r\n        this.socketIoMgr = new Manager('https://hyperion.mudev.cc', {\r\n            reconnectionDelayMax: 10000,\r\n            path: '/api/dev/ws',\r\n        });\r\n        this.socketIo = this.socketIoMgr.socket('/playco_ws', {})\r\n        playCoSocketIOHandlerInstance = this;\r\n    }\r\n\r\n    connectToPlayCo() {\r\n        const reqData = {\r\n            eventName: 'onPlaycoConnect',\r\n            data: {\r\n                access_token: '',\r\n                csrf_token: '',\r\n            },\r\n        };\r\n    }\r\n\r\n    disconnect() {\r\n        //\r\n    }\r\n\r\n    enterPlaylist() {\r\n        const reqData = {\r\n            eventName: 'onPlaylistEnter',\r\n            data: {\r\n                playlist_id: 0,\r\n\r\n            },\r\n        };\r\n    }\r\n\r\n    leavePlaylist() {\r\n        //\r\n    }\r\n\r\n    setPlaylistStatus() {\r\n        const reqData = {\r\n            eventName: 'onPlaylistSetStatus',\r\n            data: {\r\n                playlist_id: 0,\r\n                status: {}\r\n            }\r\n        }\r\n    }\r\n\r\n    onPlaylistUpdate() {\r\n        //\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}