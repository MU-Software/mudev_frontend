{"ast":null,"code":"// Project GLOW (mudev.cc frontend)\n// (c) MUsoftware, 2021, MIT\n'use strict';\n\nvar _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Sidebar } from './ui/util/sidebar';\nimport { GlowHome } from '@ui/page/home/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContent\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          className: \"mainContent\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            className: \"nav-link\",\n            element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/projects\",\n            className: \"nav-link\",\n            element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/containers\",\n            className: \"nav-link\",\n            element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App; // import FrostAPI from './network/api';\n// const frostAPI = new FrostAPI();\n// Topbar hooker & initializer\n// const topbarUserNameIndicator = document.getElementById('dropdown07XL');\n// const topbarSignoutBtn = document.getElementById('topbarSignoutBtn');\n// topbarSignoutBtn.addEventListener('click', () => frostAPI.signout(), false);\n// const topbarHierarchyIndicator = document.getElementById('topbarHierarchyIndicator');\n// const hierarchyIndicatorContent = (roles) => {\n//   var newElement = document.createElement('li');\n//   newElement.className = 'nav-item'\n//   var newElementChild = document.createElement('a');\n//   newElementChild.className = 'nav-link';\n//   // newElementChild.href = '#';\n//   for(const role of roles) {\n//     if (role.type === 'professor' && role.chairman)\n//       newElementChild.innerText = '학부장';\n//     else if (role.type === 'professor')\n//       newElementChild.innerText = '교수';\n//     else if (role.type === 'student')\n//       newElementChild.innerText = '학부생';\n//     else\n//       newElementChild.innerText = '손님';\n//   }\n//   newElement.appendChild(newElementChild);\n//   return newElement\n// };\n// frostAPI.refreshAuthentications().then(\n//   (_) => {\n//     let userID = frostAPI.userID;\n//     if (userID !== undefined || userID !== null) {\n//       topbarUserNameIndicator.innerText = userID + '님 환영합니다 ';\n//     } else { topbarUserNameIndicator.innerText = '사용자 옵션 '; }\n//     // var roles = frostAPI.roles;\n//     // let hierarchy = hierarchyIndicatorContent(roles);\n//     // topbarHierarchyIndicator.insertBefore(hierarchy, topbarHierarchyIndicator.firstChild);\n//   }\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/App.js"],"names":["React","Routes","Route","BrowserRouter","Sidebar","GlowHome","App"],"mappings":"AAAA;AACA;AACA;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,kBAA7C;AAEA,OAAO,WAAP;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,SAASC,GAAT,GAAe;AACb,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACL,QAAC,aAAD;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAC,UAAhC;AAA2C,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,WAAlB;AAA8B,YAAA,SAAS,EAAC,UAAxC;AAAmD,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,aAAlB;AAAgC,YAAA,SAAS,EAAC,UAA1C;AAAqD,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD;;KAbQA,G;AAeT,eAAeA,GAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// Project GLOW (mudev.cc frontend)\n// (c) MUsoftware, 2021, MIT\n'use strict';\n\nimport React from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport { Sidebar } from './ui/util/sidebar';\nimport { GlowHome } from '@ui/page/home/home';\n\nfunction App() {\n  return <div className=\"App\">\n    <BrowserRouter>\n      <Sidebar />\n      <div className='mainContent'>\n        <Routes className='mainContent'>\n          <Route exact path=\"/\" className=\"nav-link\" element={<GlowHome />} />\n          <Route exact path=\"/projects\" className=\"nav-link\" element={<GlowHome />} />\n          <Route exact path=\"/containers\" className=\"nav-link\" element={<GlowHome />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  </div>\n}\n\nexport default App;\n\n\n// import FrostAPI from './network/api';\n// const frostAPI = new FrostAPI();\n\n// Topbar hooker & initializer\n// const topbarUserNameIndicator = document.getElementById('dropdown07XL');\n// const topbarSignoutBtn = document.getElementById('topbarSignoutBtn');\n// topbarSignoutBtn.addEventListener('click', () => frostAPI.signout(), false);\n\n// const topbarHierarchyIndicator = document.getElementById('topbarHierarchyIndicator');\n// const hierarchyIndicatorContent = (roles) => {\n//   var newElement = document.createElement('li');\n//   newElement.className = 'nav-item'\n//   var newElementChild = document.createElement('a');\n//   newElementChild.className = 'nav-link';\n//   // newElementChild.href = '#';\n\n//   for(const role of roles) {\n//     if (role.type === 'professor' && role.chairman)\n//       newElementChild.innerText = '학부장';\n//     else if (role.type === 'professor')\n//       newElementChild.innerText = '교수';\n//     else if (role.type === 'student')\n//       newElementChild.innerText = '학부생';\n//     else\n//       newElementChild.innerText = '손님';\n//   }\n//   newElement.appendChild(newElementChild);\n//   return newElement\n// };\n\n\n// frostAPI.refreshAuthentications().then(\n//   (_) => {\n//     let userID = frostAPI.userID;\n//     if (userID !== undefined || userID !== null) {\n//       topbarUserNameIndicator.innerText = userID + '님 환영합니다 ';\n//     } else { topbarUserNameIndicator.innerText = '사용자 옵션 '; }\n\n//     // var roles = frostAPI.roles;\n//     // let hierarchy = hierarchyIndicatorContent(roles);\n//     // topbarHierarchyIndicator.insertBefore(hierarchy, topbarHierarchyIndicator.firstChild);\n//   }\n// );\n"]},"metadata":{},"sourceType":"module"}