{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\main.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Icon from '@mdi/react';\nimport { mdiPlus, mdiCheckBold, mdiDeleteCircle, mdiRefresh } from '@mdi/js';\nimport { OverlayTrigger, Tooltip, Spinner, Button } from 'react-bootstrap';\nimport { PHButton } from 'src/ui/common/element/muButton';\nimport { ListRow } from '../../common/element/muListRow';\nimport { Divider } from '../../common/element/divider';\nimport './main.css';\nimport { refreshAccessTokenActionCreatorAsync } from 'src/redux/modules/account/action_creator';\nimport { PlaylistControlModal } from './element/playlistControlModal';\nimport { PlayCoAPI } from './playco/api';\nimport { PHFormText } from 'src/ui/common/element/muFormText'; // import { PlayCoPlaylistList } from './playlistList';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlayCoPlaylistList = props => {\n  _s();\n\n  const [playlistListState, setPlaylistListState] = useState({\n    playlistManualEnterTargetIdTextField: '',\n    playlistManualEnterFailedReason: ''\n  });\n  const navigate = useNavigate();\n\n  const showPlaylistCreateModalFunc = () => props.setPlaylistCreateModalShowState(true);\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"playCoListAside\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        title: \"ID of playlist to enter\",\n        placeholder: \"\\uCC38\\uC5EC\\uD560 \\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8 ID\",\n        className: \"playCoIdToEnterTextField\",\n        disabled: props.isPlaylistFetchingState,\n        value: playlistListState.playlistManualEnterTargetIdTextField,\n        onChange: evt => setPlaylistListState({ ...playlistListState,\n          playlistManualEnterTargetIdTextField: evt.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n        variant: \"success\",\n        width: \"100%\",\n        disabled: props.isPlaylistFetchingState,\n        onClick: () => props.enterPlaylistFunc(playlistListState.playlistManualEnterTargetIdTextField),\n        children: props.isPlaylistFetchingState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiCheckBold,\n            size: \"1.1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), \"\\xA0\\xA0\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uCC38\\uC5EC\\uD558\\uAE30\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n        showOnlyNeeded: true,\n        children: playlistListState.playlistManualEnterFailedReason\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {\n          marginLeft: 0,\n          marginRight: 0,\n          marginTop: '1rem',\n          marginBottom: '1rem',\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"playCoPlaylistListTitleContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playCoPlaylistListTitle\",\n            children: \"\\uB0B4 \\uC7AC\\uC0DD\\uBAA9\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"rounded-circle playCoPlaylistListRefreshButton\",\n            variant: \"info\",\n            style: {\n              padding: '0.05rem'\n            },\n            disabled: props.isPlaylistFetchingState,\n            onClick: props.refreshPlaylistFunc,\n            children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n              placement: \"bottom\",\n              overlay: tooltipProps => /*#__PURE__*/_jsxDEV(Tooltip, { ...tooltipProps,\n                children: \"\\uC0C8\\uB85C\\uACE0\\uCE68\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 42\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playCoPlaylistDetailListRefreshButtonIconContainer\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiRefresh,\n                  size: \"1.75rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playCoAsideSectionHeaderButtonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(PHButton, {\n          smaller: true,\n          variant: \"outline-info\",\n          disabled: props.isPlaylistFetchingState,\n          onClick: showPlaylistCreateModalFunc,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            path: mdiPlus,\n            size: \"1.1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), \"\\xA0\\xA0\\uC0C8 \\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PlaylistControlModal, {\n          createMode: true,\n          modalShowState: props.playlistCreateModalShowState,\n          setModalShowState: props.setPlaylistCreateModalShowState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), props.playlistList && props.playlistList.length != 0 ? props.playlistList.map((value, index, array) => {\n        var _value$items$length, _value$items, _value$items$length2, _value$listener;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ListRow, {\n            className: \"playCoListItem\",\n            style: {\n              marginLeft: '1rem',\n              marginRight: '1rem',\n              border: 'none',\n              borderRadius: 'none',\n              ...(value.blocked_at ? {\n                textDecoration: 'line-through red',\n                textDecorationThickness: '0.3rem'\n              } : {})\n            },\n            itemWidth: [90, 10],\n            onClick: () => navigate('/playco/detail'),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playCoListItemTextContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"playCoListTitleContainer\",\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playCoListAdditionalInfoContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: value.blocked_at ? value.why_blocked : ((_value$items$length = (_value$items = value.items) === null || _value$items === void 0 ? void 0 : _value$items.length) !== null && _value$items$length !== void 0 ? _value$items$length : value.item_count) ? `${(_value$items$length2 = value.items.length) !== null && _value$items$length2 !== void 0 ? _value$items$length2 : value.item_count}개` : '비어있는 재생목록'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: ((_value$listener = value.listener) === null || _value$listener === void 0 ? void 0 : _value$listener.length) ? `${value.listener.length}명이 참여 중이에요!` : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                style: {\n                  color: 'rgba(255, 255, 255, 1)'\n                },\n                onClick: e => {\n                  e.stopPropagation();\n                  props.deletePlaylistFunc(value.uuid);\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  path: mdiDeleteCircle,\n                  size: \"1.75rem\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), index === array.length - 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 55\n          }, this)]\n        }, `playco-playlist-main-listitem-${value.uuid}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 61\n        }, this);\n      }) : props.isPlaylistFetchingState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC774\\uC5D0\\uC694,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }, this), \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\uB9CC\\uB4DC\\uC2E0 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC774 \\uC5C6\\uC5B4\\uC694,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), \"\\\"\\uC0C8 \\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\\\" \\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694!\"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PlayCoPlaylistList, \"NJ9eOWm3ZN5KdLlKnIFcdOT2O2s=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PlayCoPlaylistList;\n\nconst PlayCoRequireSignedIn = () => {\n  _s2();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774 \\uAE30\\uB2A5\\uC740 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD574\\uC694,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 26\n        }, this), \"\\uB85C\\uADF8\\uC778\\uC744 \\uD574 \\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n      onClick: () => navigate('/account/signin'),\n      variant: \"success\",\n      size: \"medium\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(PlayCoRequireSignedIn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = PlayCoRequireSignedIn;\nexport const PlaycoMain = props => {\n  _s3();\n\n  var _accountInfo$isSigned, _accountInfo$isFetchi;\n\n  const accountInfo = useSelector(state => state.accountReducer);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [playCoMainState, setPlayCoMainState] = useState({\n    playlistCreateModalShowState: false,\n    playlists: [],\n    playlistFetchFailedReason: '',\n    didAccountInfoDispatched: false,\n    isSignedIn: (_accountInfo$isSigned = accountInfo === null || accountInfo === void 0 ? void 0 : accountInfo.isSignedIn) !== null && _accountInfo$isSigned !== void 0 ? _accountInfo$isSigned : false,\n    isAccountFetching: (_accountInfo$isFetchi = accountInfo === null || accountInfo === void 0 ? void 0 : accountInfo.isFetching) !== null && _accountInfo$isFetchi !== void 0 ? _accountInfo$isFetchi : false,\n    isPlaylistFetching: false\n  });\n\n  const fetchAndUpdatePlaylistListState = () => {\n    if (playCoMainState.isPlaylistFetching) // is currently fetching\n      return;\n    setPlayCoMainState(prevState => ({ ...prevState,\n      isPlaylistFetching: true\n    }));\n    PlayCoAPI.getAllPlaylists().then(result => setPlayCoMainState(prevState => ({ ...prevState,\n      isPlaylistFetching: false,\n      playlists: result,\n      playlistFetchFailedReason: ''\n    })), reason => setPlayCoMainState(prevState => ({ ...prevState,\n      isPlaylistFetching: false,\n      playlists: [],\n      playlistFetchFailedReason: reason.message\n    })));\n  };\n\n  const deletePlaylist = playlistId => {\n    setPlayCoMainState(prevState => ({ ...prevState,\n      playlists: [],\n      isPlaylistFetching: true\n    }));\n    PlayCoAPI.deletePlaylist(playlistId).then(result => fetchAndUpdatePlaylistListState(), reason => setPlayCoMainState({ ...playCoMainState,\n      playlistFetchFailedReason: reason.message\n    }));\n  };\n\n  const enterPlaylist = playlistId => {\n    console.log(playlistId);\n  };\n\n  const setPlaylistCreateModalState = newState => {\n    setPlayCoMainState(prevState => ({ ...prevState,\n      playlistCreateModalShowState: newState\n    }));\n\n    if (!newState) {\n      // We are closing modal now.\n      fetchAndUpdatePlaylistListState();\n    }\n  };\n\n  useEffect(() => {\n    dispatch(refreshAccessTokenActionCreatorAsync());\n  }, []);\n  useEffect(() => {\n    setPlayCoMainState(prevState => {\n      var _accountInfo$isSigned2, _accountInfo$isFetchi2;\n\n      return { ...prevState,\n        isSignedIn: (_accountInfo$isSigned2 = accountInfo === null || accountInfo === void 0 ? void 0 : accountInfo.isSignedIn) !== null && _accountInfo$isSigned2 !== void 0 ? _accountInfo$isSigned2 : false,\n        isAccountFetching: (_accountInfo$isFetchi2 = accountInfo === null || accountInfo === void 0 ? void 0 : accountInfo.isFetching) !== null && _accountInfo$isFetchi2 !== void 0 ? _accountInfo$isFetchi2 : false,\n        didAccountInfoDispatched: true\n      };\n    });\n\n    if (playCoMainState.didAccountInfoDispatched && accountInfo && !accountInfo.isFetching && accountInfo.isSignedIn) {\n      fetchAndUpdatePlaylistListState();\n    }\n  }, [accountInfo]);\n  const needToShowSpinner = playCoMainState.isAccountFetching;\n  const playCoBody = needToShowSpinner ? /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC774\\uC5D0\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 7\n  }, this) : !playCoMainState.isSignedIn ? /*#__PURE__*/_jsxDEV(PlayCoRequireSignedIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(PlayCoPlaylistList, {\n    playlistList: playCoMainState.playlists,\n    isPlaylistFetchingState: playCoMainState.isPlaylistFetching,\n    playlistCreateModalShowState: playCoMainState.playlistCreateModalShowState,\n    refreshPlaylistFunc: fetchAndUpdatePlaylistListState,\n    deletePlaylistFunc: deletePlaylist,\n    enterPlaylistFunc: enterPlaylist,\n    setPlaylistCreateModalShowState: setPlaylistCreateModalState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playCoMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"PlayCO\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"playCoTitleHeaderSup\",\n          children: \"Alpha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C, \\uBA40\\uB9AC\\uC11C, \\uB2E4 \\uAC19\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this), playCoBody]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 10\n  }, this);\n};\n\n_s3(PlaycoMain, \"C4ZYyH5wsNznQZKexT+BsynQn8A=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n\n_c3 = PlaycoMain;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PlayCoPlaylistList\");\n$RefreshReg$(_c2, \"PlayCoRequireSignedIn\");\n$RefreshReg$(_c3, \"PlaycoMain\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/main.tsx"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","Icon","mdiPlus","mdiCheckBold","mdiDeleteCircle","mdiRefresh","OverlayTrigger","Tooltip","Spinner","Button","PHButton","ListRow","Divider","refreshAccessTokenActionCreatorAsync","PlaylistControlModal","PlayCoAPI","PHFormText","PlayCoPlaylistList","props","playlistListState","setPlaylistListState","playlistManualEnterTargetIdTextField","playlistManualEnterFailedReason","navigate","showPlaylistCreateModalFunc","setPlaylistCreateModalShowState","isPlaylistFetchingState","evt","target","value","enterPlaylistFunc","marginLeft","marginRight","marginTop","marginBottom","width","padding","refreshPlaylistFunc","tooltipProps","playlistCreateModalShowState","playlistList","length","map","index","array","border","borderRadius","blocked_at","textDecoration","textDecorationThickness","name","why_blocked","items","item_count","listener","color","e","stopPropagation","deletePlaylistFunc","uuid","PlayCoRequireSignedIn","PlaycoMain","accountInfo","state","accountReducer","dispatch","playCoMainState","setPlayCoMainState","playlists","playlistFetchFailedReason","didAccountInfoDispatched","isSignedIn","isAccountFetching","isFetching","isPlaylistFetching","fetchAndUpdatePlaylistListState","prevState","getAllPlaylists","then","result","reason","message","deletePlaylist","playlistId","enterPlaylist","console","log","setPlaylistCreateModalState","newState","needToShowSpinner","playCoBody"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Icon from '@mdi/react';\r\nimport { mdiPlus, mdiCheckBold, mdiDeleteCircle, mdiRefresh } from '@mdi/js';\r\nimport { OverlayTrigger, Tooltip, Spinner, Button } from 'react-bootstrap';\r\n\r\nimport { PHButton } from 'src/ui/common/element/muButton';\r\nimport { ListRow } from '../../common/element/muListRow';\r\nimport { Divider } from '../../common/element/divider';\r\n\r\nimport './main.css';\r\n\r\nimport { refreshAccessTokenActionCreatorAsync } from 'src/redux/modules/account/action_creator';\r\nimport { PlaylistListener, PlaylistItem, Playlist } from './playco/model';\r\nimport { PlaylistControlModal } from './element/playlistControlModal';\r\nimport { PlayCoAPI } from './playco/api';\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\n\r\n// import { PlayCoPlaylistList } from './playlistList';\r\n\r\nconst PlayCoPlaylistList: React.FC = (props: {\r\n  playlistList: Playlist[],\r\n  isPlaylistFetchingState: boolean,\r\n  playlistCreateModalShowState: boolean,\r\n  deletePlaylistFunc: (number) => void,\r\n  refreshPlaylistFunc: () => void,\r\n  enterPlaylistFunc: (number) => void,\r\n  setPlaylistCreateModalShowState: (boolean) => void,\r\n}) => {\r\n  const [playlistListState, setPlaylistListState] = useState({\r\n    playlistManualEnterTargetIdTextField: '',\r\n    playlistManualEnterFailedReason: '',\r\n  });\r\n  const navigate = useNavigate();\r\n  const showPlaylistCreateModalFunc = () => props.setPlaylistCreateModalShowState(true);\r\n\r\n  return <aside className='playCoListAside'>\r\n    <div>\r\n      <input\r\n        title='ID of playlist to enter'\r\n        placeholder='참여할 플레이리스트 ID'\r\n        className='playCoIdToEnterTextField'\r\n        disabled={props.isPlaylistFetchingState}\r\n        value={playlistListState.playlistManualEnterTargetIdTextField}\r\n        onChange={(evt) => setPlaylistListState({\r\n          ...playlistListState,\r\n          playlistManualEnterTargetIdTextField: evt.target.value,\r\n        })} ></input>\r\n      <PHButton\r\n        variant='success'\r\n        width='100%'\r\n        disabled={props.isPlaylistFetchingState}\r\n        onClick={() => props.enterPlaylistFunc(playlistListState.playlistManualEnterTargetIdTextField)} >\r\n        {\r\n          (props.isPlaylistFetchingState)\r\n            ? <>잠시만 기다려주세요...</>\r\n            : <><Icon path={mdiCheckBold} size='1.1rem' />&nbsp;&nbsp;재생목록에 참여하기</>\r\n        }\r\n      </PHButton>\r\n      <PHFormText showOnlyNeeded>{playlistListState.playlistManualEnterFailedReason}</PHFormText>\r\n      <Divider\r\n        style={{\r\n          marginLeft: 0,\r\n          marginRight: 0,\r\n          marginTop: '1rem',\r\n          marginBottom: '1rem',\r\n          width: '100%',\r\n        }} />\r\n\r\n      <header>\r\n        <h5 className='playCoPlaylistListTitleContainer'>\r\n          <div className='playCoPlaylistListTitle'>\r\n            내 재생목록\r\n          </div>\r\n          <Button\r\n            className='rounded-circle playCoPlaylistListRefreshButton'\r\n            variant='info'\r\n            style={{ padding: '0.05rem' }}\r\n            disabled={props.isPlaylistFetchingState}\r\n            onClick={props.refreshPlaylistFunc} >\r\n            <OverlayTrigger\r\n              placement='bottom'\r\n              overlay={(tooltipProps) => <Tooltip {...tooltipProps}>새로고침</Tooltip>} >\r\n              <div className='playCoPlaylistDetailListRefreshButtonIconContainer'>\r\n                <Icon path={mdiRefresh} size='1.75rem' />\r\n              </div>\r\n            </OverlayTrigger>\r\n          </Button>\r\n        </h5>\r\n      </header>\r\n      <div className='playCoAsideSectionHeaderButtonContainer'>\r\n        <PHButton\r\n          smaller\r\n          variant='outline-info'\r\n          disabled={props.isPlaylistFetchingState}\r\n          onClick={showPlaylistCreateModalFunc} >\r\n          <Icon path={mdiPlus} size='1.1rem' />\r\n          &nbsp;&nbsp;새 재생목록 만들기\r\n        </PHButton>\r\n        <PlaylistControlModal\r\n          createMode\r\n          modalShowState={props.playlistCreateModalShowState}\r\n          setModalShowState={props.setPlaylistCreateModalShowState} />\r\n      </div>\r\n      {\r\n        (props.playlistList && props.playlistList.length != 0)\r\n          ? props.playlistList.map((value, index, array) => <div key={`playco-playlist-main-listitem-${value.uuid}`}>\r\n            <ListRow\r\n              className='playCoListItem'\r\n              style={{\r\n                marginLeft: '1rem',\r\n                marginRight: '1rem',\r\n                border: 'none',\r\n                borderRadius: 'none',\r\n                ...((value.blocked_at) ? {\r\n                  textDecoration: 'line-through red',\r\n                  textDecorationThickness: '0.3rem',\r\n                } : {})\r\n              }}\r\n              itemWidth={[90, 10]}\r\n              onClick={() => navigate('/playco/detail')}>\r\n              <div className='playCoListItemTextContainer'>\r\n                <h6 className='playCoListTitleContainer'>{value.name}</h6>\r\n                <div className='playCoListAdditionalInfoContainer'>\r\n                  <div>{\r\n                    (value.blocked_at)\r\n                      ? value.why_blocked\r\n                      : (value.items?.length ?? value.item_count)\r\n                        ? `${value.items.length ?? value.item_count}개`\r\n                        : '비어있는 재생목록'\r\n                  }</div>\r\n                  <div>{\r\n                    (value.listener?.length)\r\n                      ? `${value.listener.length}명이 참여 중이에요!` : ''\r\n                  }</div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <Button\r\n                  variant='link'\r\n                  style={{ color: 'rgba(255, 255, 255, 1)' }}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    props.deletePlaylistFunc(value.uuid);\r\n                  }} >\r\n                  <Icon path={mdiDeleteCircle} size='1.75rem' />\r\n                </Button>\r\n              </div>\r\n            </ListRow>\r\n            {(index === (array.length - 1)) ? <></> : <Divider />}\r\n          </div>)\r\n          : (props.isPlaylistFetchingState)\r\n            ? <>재생목록을 불러오는 중이에요,<br />잠시만 기다려주세요...</>\r\n            : <>\r\n              만드신 재생목록이 없어요,<br />\r\n              &quot;새 재생목록 만들기&quot; 버튼을 눌러주세요!\r\n            </>\r\n      }\r\n    </div>\r\n  </aside>;\r\n};\r\n\r\nconst PlayCoRequireSignedIn: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  return <aside>\r\n    <header>\r\n      <p>이 기능은 로그인이 필요해요,<br />로그인을 해 주세요.</p>\r\n    </header>\r\n    <PHButton\r\n      onClick={() => navigate('/account/signin')}\r\n      variant='success'\r\n      size='medium'>\r\n      로그인\r\n    </PHButton>\r\n  </aside>;\r\n}\r\n\r\nexport const PlaycoMain: React.FC = (props) => {\r\n  const accountInfo: AccountInfo = useSelector(state => state.accountReducer);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [playCoMainState, setPlayCoMainState] = useState({\r\n    playlistCreateModalShowState: false,\r\n\r\n    playlists: [],\r\n    playlistFetchFailedReason: '',\r\n    didAccountInfoDispatched: false,\r\n    isSignedIn: accountInfo?.isSignedIn ?? false,\r\n    isAccountFetching: accountInfo?.isFetching ?? false,\r\n    isPlaylistFetching: false,\r\n  });\r\n  const fetchAndUpdatePlaylistListState = () => {\r\n    if (playCoMainState.isPlaylistFetching) // is currently fetching\r\n      return;\r\n\r\n    setPlayCoMainState((prevState) => ({\r\n      ...prevState,\r\n      isPlaylistFetching: true,\r\n    }));\r\n    PlayCoAPI.getAllPlaylists().then(\r\n      (result) => setPlayCoMainState((prevState) => ({\r\n        ...prevState,\r\n        isPlaylistFetching: false,\r\n        playlists: result,\r\n        playlistFetchFailedReason: '',\r\n      })),\r\n      (reason: FrostError) => setPlayCoMainState((prevState) => ({\r\n        ...prevState,\r\n        isPlaylistFetching: false,\r\n        playlists: [],\r\n        playlistFetchFailedReason: reason.message,\r\n      })),\r\n    );\r\n  }\r\n  const deletePlaylist = (playlistId) => {\r\n    setPlayCoMainState((prevState) => ({\r\n      ...prevState,\r\n      playlists: [],\r\n      isPlaylistFetching: true,\r\n    }));\r\n\r\n    PlayCoAPI.deletePlaylist(playlistId).then(\r\n      (result) => fetchAndUpdatePlaylistListState(),\r\n      (reason: FrostError) => setPlayCoMainState({\r\n        ...playCoMainState,\r\n        playlistFetchFailedReason: reason.message,\r\n      })\r\n    );\r\n  }\r\n  const enterPlaylist = (playlistId) => {\r\n    console.log(playlistId);\r\n  }\r\n\r\n  const setPlaylistCreateModalState = (newState) => {\r\n    setPlayCoMainState((prevState) => ({\r\n      ...prevState,\r\n      playlistCreateModalShowState: newState,\r\n    }));\r\n\r\n    if (!newState) {\r\n      // We are closing modal now.\r\n      fetchAndUpdatePlaylistListState();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshAccessTokenActionCreatorAsync());\r\n  }, []);\r\n  useEffect(() => {\r\n    setPlayCoMainState((prevState) => ({\r\n      ...prevState,\r\n      isSignedIn: accountInfo?.isSignedIn ?? false,\r\n      isAccountFetching: accountInfo?.isFetching ?? false,\r\n      didAccountInfoDispatched: true,\r\n    }));\r\n    if (playCoMainState.didAccountInfoDispatched && accountInfo && !accountInfo.isFetching && accountInfo.isSignedIn) {\r\n      fetchAndUpdatePlaylistListState();\r\n    }\r\n  }, [accountInfo]);\r\n\r\n  const needToShowSpinner = playCoMainState.isAccountFetching;\r\n  const playCoBody = needToShowSpinner\r\n    ? <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"visually-hidden\">불러오는 중이에요...</span>\r\n    </Spinner>\r\n    : !playCoMainState.isSignedIn\r\n      ? <PlayCoRequireSignedIn />\r\n      : <PlayCoPlaylistList\r\n        playlistList={playCoMainState.playlists}\r\n        isPlaylistFetchingState={playCoMainState.isPlaylistFetching}\r\n        playlistCreateModalShowState={playCoMainState.playlistCreateModalShowState}\r\n        refreshPlaylistFunc={fetchAndUpdatePlaylistListState}\r\n        deletePlaylistFunc={deletePlaylist}\r\n        enterPlaylistFunc={enterPlaylist}\r\n        setPlaylistCreateModalShowState={setPlaylistCreateModalState} />;\r\n\r\n  return <section className='playCoMain'>\r\n    <header>\r\n      <h2>PlayCO<sup className='playCoTitleHeaderSup'>Alpha</sup></h2>\r\n      <p>플레이리스트를, 멀리서, 다 같이</p>\r\n    </header>\r\n    {playCoBody}\r\n  </section>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}