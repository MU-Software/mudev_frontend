{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\account\\\\modal\\\\nickIdChangeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport { PHFormText } from 'src/ui/common/element/muFormText';\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AccountNickIDChangeModal = props => {\n  _s();\n\n  var _props$initialModalSt, _props$initialModalSt2;\n\n  const navigate = useNavigate();\n  const [nickIdChangeModalState, setNickIdChangeModalState] = useState({\n    isProcessing: false,\n    nickTextFieldValue: (_props$initialModalSt = props.initialModalState.nick) !== null && _props$initialModalSt !== void 0 ? _props$initialModalSt : '',\n    nickNotUsableReason: '',\n    idTextFieldValue: (_props$initialModalSt2 = props.initialModalState.id) !== null && _props$initialModalSt2 !== void 0 ? _props$initialModalSt2 : '',\n    idNotUsableReason: '',\n    nickIdChangeFailedReason: ''\n  });\n  useEffect(() => {\n    var _props$initialModalSt3, _props$initialModalSt4, _props$initialModalSt5, _props$initialModalSt6;\n\n    return setNickIdChangeModalState({ ...nickIdChangeModalState,\n      nickTextFieldValue: (_props$initialModalSt3 = (_props$initialModalSt4 = props.initialModalState) === null || _props$initialModalSt4 === void 0 ? void 0 : _props$initialModalSt4.nick) !== null && _props$initialModalSt3 !== void 0 ? _props$initialModalSt3 : '',\n      nickNotUsableReason: '',\n      idTextFieldValue: (_props$initialModalSt5 = (_props$initialModalSt6 = props.initialModalState) === null || _props$initialModalSt6 === void 0 ? void 0 : _props$initialModalSt6.id) !== null && _props$initialModalSt5 !== void 0 ? _props$initialModalSt5 : '',\n      idNotUsableReason: '',\n      nickIdChangeFailedReason: ''\n    });\n  }, [props.initialModalState]);\n\n  const closeModalFunc = () => {\n    if (!playlistControlModalState.isProcessing) props.setModalShowState(false);\n  };\n\n  const handleInputChange = valueName => e => {\n    const newModalState = { ...nickIdChangeModalState,\n      [valueName]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    };\n    if (valueName === 'nickTextFieldValue') newModalState.nameNotUsableReason = '';else if (valueName === 'idTextFieldValue') newModalState.idNotUsableReason = '';\n    setNickIdChangeModalState(newModalState);\n  };\n\n  const whatChanged = () => {\n    return {\n      nick: nickIdChangeModalState.nickTextFieldValue !== props.initialModalState.nick,\n      id: nickIdChangeModalState.idTextFieldValue !== props.initialModalState.id\n    };\n  };\n\n  const tryAccountInfoChange = () => {\n    let isRequestable = true;\n    setNickIdChangeModalState(prevState => ({ ...prevState,\n      isProcessing: true\n    }));\n    const newModalState = { ...nickIdChangeModalState,\n      isProcessing: true\n    }; // trim all strings in states\n\n    for (const key in newModalState) if (typeof newModalState[key] === 'string') newModalState[key] = newModalState[key].trim();\n\n    if (!newModalState.nickTextFieldValue) {\n      newModalState.nickNotUsableReason = '별칭을 적어주세요!';\n      newModalState.isProcessing = false;\n      isRequestable = false;\n    } else if (!newModalState.idTextFieldValue) {\n      newModalState.idNotUsableReason = '아이디를 적어주세요!';\n      newModalState.isProcessing = false;\n      isRequestable = false;\n    }\n\n    setNickIdChangeModalState(newModalState);\n    const isChanged = whatChanged();\n\n    if (!isChanged.id && !isChanged.nick) {\n      // Stats are not modified, just close it.\n      closeModalFunc();\n    } else if (isRequestable) {// DO SERVER THING ON HERE\n    }\n  };\n\n  const resetToOriginal = () => {\n    var _props$initialModalSt7, _props$initialModalSt8;\n\n    setNickIdChangeModalState({ ...nickIdChangeModalState,\n      nickTextFieldValue: (_props$initialModalSt7 = props.initialModalState.nick) !== null && _props$initialModalSt7 !== void 0 ? _props$initialModalSt7 : '',\n      nickNotUsableReason: '',\n      idTextFieldValue: (_props$initialModalSt8 = props.initialModalState.id) !== null && _props$initialModalSt8 !== void 0 ? _props$initialModalSt8 : '',\n      idNotUsableReason: ''\n    });\n  };\n\n  const getSubmitBtnText = () => {\n    const result = whatChanged();\n\n    if (result.id && result.nick) {\n      return ['아이디 및 별칭 수정하기', true];\n    } else if (result.id) {\n      return ['아이디 수정하기', true];\n    } else if (result.nick) {\n      return ['별칭 수정하기', true];\n    } else {\n      return ['정보 수정하기', false];\n    }\n  };\n\n  const submitBtnStat = getSubmitBtnText();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.modalShowState,\n    onHide: closeModalFunc,\n    backdrop: \"static\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            margin: 0\n          },\n          children: \"\\uC544\\uC774\\uB514 \\uBC0F \\uBCC4\\uCE6D \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: evt => evt.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC0C8\\uB85C \\uC0AC\\uC6A9\\uD558\\uC2E4 \\uC544\\uC774\\uB514\\uB97C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",\n            disabled: nickIdChangeModalState.isProcessing,\n            value: nickIdChangeModalState.idTextFieldValue,\n            onChange: handleInputChange('idTextFieldValue')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n            children: nickIdChangeModalState.idNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBCC4\\uCE6D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC5EC\\uAE30\\uC5D0 \\uC0C8\\uB85C \\uC0AC\\uC6A9\\uD558\\uC2E4 \\uBCC4\\uCE6D\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",\n            disabled: nickIdChangeModalState.isProcessing,\n            value: nickIdChangeModalState.nickTextFieldValue,\n            onChange: handleInputChange('nickTextFieldValue')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n            children: nickIdChangeModalState.nickNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n          children: nickIdChangeModalState.nickIdChangeFailedReason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: resetToOriginal,\n        disabled: nickIdChangeModalState.isProcessing,\n        children: \"\\uB418\\uB3CC\\uB9AC\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: closeModalFunc,\n        disabled: nickIdChangeModalState.isProcessing,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n        variant: \"primary\",\n        size: false,\n        style: {\n          margin: undefined\n        },\n        onClick: tryAccountInfoChange,\n        disabled: !submitBtnStat[1],\n        showSpinner: nickIdChangeModalState.isProcessing,\n        children: submitBtnStat[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AccountNickIDChangeModal, \"Mu1GoFiEl6C/CMmHCLgz7AWBHGQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountNickIDChangeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountNickIDChangeModal\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/account/modal/nickIdChangeModal.tsx"],"names":["React","useState","useEffect","useNavigate","Form","Modal","Button","PHFormText","PHSpinnerButton","AccountNickIDChangeModal","props","navigate","nickIdChangeModalState","setNickIdChangeModalState","isProcessing","nickTextFieldValue","initialModalState","nick","nickNotUsableReason","idTextFieldValue","id","idNotUsableReason","nickIdChangeFailedReason","closeModalFunc","playlistControlModalState","setModalShowState","handleInputChange","valueName","e","newModalState","target","type","checked","value","nameNotUsableReason","whatChanged","tryAccountInfoChange","isRequestable","prevState","key","trim","isChanged","resetToOriginal","getSubmitBtnText","result","submitBtnStat","modalShowState","margin","evt","preventDefault","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, Modal, Button } from \"react-bootstrap\";\r\nimport { FrostError } from 'src/common/error';\r\n\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\n\r\nexport const AccountNickIDChangeModal: React.FC = (props: {\r\n    modalShowState: boolean;\r\n    setModalShowState: (boolean) => void;\r\n    initialModalState: AccountInfo;\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const [nickIdChangeModalState, setNickIdChangeModalState] = useState({\r\n        isProcessing: false,\r\n\r\n        nickTextFieldValue: props.initialModalState.nick ?? '',\r\n        nickNotUsableReason: '',\r\n        idTextFieldValue: props.initialModalState.id ?? '',\r\n        idNotUsableReason: '',\r\n        nickIdChangeFailedReason: '',\r\n    });\r\n    useEffect(() => setNickIdChangeModalState({\r\n        ...nickIdChangeModalState,\r\n        nickTextFieldValue: props.initialModalState?.nick ?? '',\r\n        nickNotUsableReason: '',\r\n        idTextFieldValue: props.initialModalState?.id ?? '',\r\n        idNotUsableReason: '',\r\n        nickIdChangeFailedReason: '',\r\n    }), [props.initialModalState]);\r\n\r\n    const closeModalFunc = () => {\r\n        if (!playlistControlModalState.isProcessing)\r\n            props.setModalShowState(false);\r\n    };\r\n    const handleInputChange = (valueName) => (e) => {\r\n        const newModalState = {\r\n            ...nickIdChangeModalState,\r\n            [valueName]: (e.target.type === 'checkbox') ? e.target.checked : e.target.value,\r\n        };\r\n        if (valueName === 'nickTextFieldValue')\r\n            newModalState.nameNotUsableReason = '';\r\n        else if (valueName === 'idTextFieldValue')\r\n            newModalState.idNotUsableReason = '';\r\n        setNickIdChangeModalState(newModalState);\r\n    };\r\n    const whatChanged = () => {\r\n        return {\r\n            nick: nickIdChangeModalState.nickTextFieldValue !== props.initialModalState.nick,\r\n            id: nickIdChangeModalState.idTextFieldValue !== props.initialModalState.id\r\n        };\r\n    };\r\n    const tryAccountInfoChange = () => {\r\n        let isRequestable = true;\r\n\r\n        setNickIdChangeModalState((prevState) => ({\r\n            ...prevState,\r\n            isProcessing: true,\r\n        }));\r\n\r\n        const newModalState = {\r\n            ...nickIdChangeModalState,\r\n            isProcessing: true,\r\n        };\r\n        // trim all strings in states\r\n        for (const key in newModalState)\r\n            if (typeof (newModalState[key]) === 'string')\r\n                newModalState[key] = newModalState[key].trim();\r\n\r\n        if (!newModalState.nickTextFieldValue) {\r\n            newModalState.nickNotUsableReason = '별칭을 적어주세요!';\r\n            newModalState.isProcessing = false;\r\n            isRequestable = false;\r\n        } else if (!newModalState.idTextFieldValue) {\r\n            newModalState.idNotUsableReason = '아이디를 적어주세요!';\r\n            newModalState.isProcessing = false;\r\n            isRequestable = false;\r\n        }\r\n        setNickIdChangeModalState(newModalState);\r\n\r\n        const isChanged = whatChanged();\r\n        if (!isChanged.id && !isChanged.nick) {\r\n            // Stats are not modified, just close it.\r\n            closeModalFunc();\r\n        } else if (isRequestable) {\r\n            // DO SERVER THING ON HERE\r\n        }\r\n    };\r\n    const resetToOriginal = () => {\r\n        setNickIdChangeModalState({\r\n            ...nickIdChangeModalState,\r\n            nickTextFieldValue: props.initialModalState.nick ?? '',\r\n            nickNotUsableReason: '',\r\n            idTextFieldValue: props.initialModalState.id ?? '',\r\n            idNotUsableReason: '',\r\n        });\r\n    };\r\n    const getSubmitBtnText = () => {\r\n        const result = whatChanged();\r\n        if (result.id && result.nick) {\r\n            return ['아이디 및 별칭 수정하기', true];\r\n        } else if (result.id) {\r\n            return ['아이디 수정하기', true];\r\n        } else if (result.nick) {\r\n            return ['별칭 수정하기', true];\r\n        } else {\r\n            return ['정보 수정하기', false];\r\n        }\r\n    };\r\n\r\n    const submitBtnStat = getSubmitBtnText();\r\n\r\n    return <Modal\r\n        show={props.modalShowState}\r\n        onHide={closeModalFunc}\r\n        backdrop='static'\r\n        centered >\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>\r\n                <h5 style={{ margin: 0, }}>\r\n                    아이디 및 별칭 변경\r\n                </h5>\r\n            </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form onSubmit={evt => evt.preventDefault()}>\r\n                <Form.Group>\r\n                    <Form.Label>아이디</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='여기에 새로 사용하실 아이디를 적어주세요.'\r\n                        disabled={nickIdChangeModalState.isProcessing}\r\n                        value={nickIdChangeModalState.idTextFieldValue}\r\n                        onChange={handleInputChange('idTextFieldValue')} />\r\n                    <PHFormText>{nickIdChangeModalState.idNotUsableReason}</PHFormText>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>별칭</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='여기에 새로 사용하실 별칭을 적어주세요.'\r\n                        disabled={nickIdChangeModalState.isProcessing}\r\n                        value={nickIdChangeModalState.nickTextFieldValue}\r\n                        onChange={handleInputChange('nickTextFieldValue')} />\r\n                    <PHFormText>{nickIdChangeModalState.nickNotUsableReason}</PHFormText>\r\n                </Form.Group>\r\n                <PHFormText>{nickIdChangeModalState.nickIdChangeFailedReason}</PHFormText>\r\n            </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button\r\n                variant='secondary'\r\n                onClick={resetToOriginal}\r\n                disabled={nickIdChangeModalState.isProcessing}>\r\n                되돌리기\r\n            </Button>\r\n\r\n            <Button\r\n                variant='secondary'\r\n                onClick={closeModalFunc}\r\n                disabled={nickIdChangeModalState.isProcessing}>\r\n                취소\r\n            </Button>\r\n\r\n            <PHSpinnerButton\r\n                variant='primary'\r\n                size={false}\r\n                style={{ margin: undefined }}\r\n                onClick={tryAccountInfoChange}\r\n                disabled={!submitBtnStat[1]}\r\n                showSpinner={nickIdChangeModalState.isProcessing}>\r\n                {submitBtnStat[0]}\r\n            </PHSpinnerButton>\r\n        </Modal.Footer>\r\n    </Modal>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}