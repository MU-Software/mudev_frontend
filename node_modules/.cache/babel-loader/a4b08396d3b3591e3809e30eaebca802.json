{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\home\\\\home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'; // import { SIDEBAR_ITEMS, setSidebarActive } from '@src/ui/util/sidebar';\n\nimport { CanvasTemplate } from '@ui/common/canvasTemplate';\nimport { PageTemplate } from '@ui/common/pageTemplate';\nimport { PHButton } from '@ui/common/element/page/muButton';\nimport { ListRowInputType, ListRowButtonType, ListRow } from '@ui/common/element/page/muListRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlowHome = () => {\n  _s();\n\n  // setSidebarActive(SIDEBAR_ITEMS.HOME);\n  const navigate = useNavigate();\n\n  const goToProjectList = () => navigate('/projects');\n\n  const goToContainerList = () => navigate('/containers');\n\n  const [demoData, setDemoData] = useState({\n    demoStr: '',\n    demoNumeric: 0,\n    demoChecked: true,\n    demoRadio: undefined\n  });\n\n  const onInputChange = valueName => e => {\n    if (e.target.type === 'reset') {\n      setDemoData({\n        demoStr: '',\n        demoNumeric: 0,\n        demoChecked: true,\n        demoRadio: undefined\n      });\n    }\n\n    if (valueName) {\n      let newDemoData = { ...demoData\n      }; // TODO: e.target.checked도 받을 수 있도록\n\n      if (e.target.type === 'checkbox') {\n        newDemoData[valueName] = e.target.checked;\n      } else {\n        newDemoData[valueName] = e.target.value;\n      }\n\n      console.log(newDemoData);\n      setDemoData(newDemoData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CanvasTemplate, {\n    title: '프로젝트 홈',\n    children: /*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: '현재 참여 중인 프로젝트',\n      actionButton: [/*#__PURE__*/_jsxDEV(PHButton, {\n        smaller: true,\n        onClick: goToProjectList,\n        children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GlowHome, \"ZaWIURNY0sKj/yuQxmPD5ZxcY3k=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GlowHome;\nexport { GlowHome };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlowHome\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/home/home.jsx"],"names":["React","useEffect","useState","useCallback","useNavigate","CanvasTemplate","PageTemplate","PHButton","ListRowInputType","ListRowButtonType","ListRow","GlowHome","navigate","goToProjectList","goToContainerList","demoData","setDemoData","demoStr","demoNumeric","demoChecked","demoRadio","undefined","onInputChange","valueName","e","target","type","newDemoData","checked","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,OAA9C,QAA6D,mCAA7D;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAMS,eAAe,GAAG,MAAMD,QAAQ,CAAC,WAAD,CAAtC;;AACA,QAAME,iBAAiB,GAAG,MAAMF,QAAQ,CAAC,aAAD,CAAxC;;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;AACvCe,IAAAA,OAAO,EAAE,EAD8B;AAEvCC,IAAAA,WAAW,EAAE,CAF0B;AAGvCC,IAAAA,WAAW,EAAE,IAH0B;AAIvCC,IAAAA,SAAS,EAAEC;AAJ4B,GAAD,CAAxC;;AAMA,QAAMC,aAAa,GAAIC,SAAD,IAAgBC,CAAD,IAAO;AAC1C,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,OAAtB,EAA+B;AAC7BV,MAAAA,WAAW,CAAC;AACVC,QAAAA,OAAO,EAAE,EADC;AAEVC,QAAAA,WAAW,EAAE,CAFH;AAGVC,QAAAA,WAAW,EAAE,IAHH;AAIVC,QAAAA,SAAS,EAAEC;AAJD,OAAD,CAAX;AAMD;;AAAC,QAAIE,SAAJ,EAAe;AACf,UAAII,WAAW,GAAG,EAAE,GAAGZ;AAAL,OAAlB,CADe,CAEf;;AACA,UAAIS,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAChCC,QAAAA,WAAW,CAACJ,SAAD,CAAX,GAAyBC,CAAC,CAACC,MAAF,CAASG,OAAlC;AACD,OAFD,MAEO;AACLD,QAAAA,WAAW,CAACJ,SAAD,CAAX,GAAyBC,CAAC,CAACC,MAAF,CAASI,KAAlC;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAX,MAAAA,WAAW,CAACW,WAAD,CAAX;AACD;AACF,GAnBD;;AAqBA,sBAAO,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,QAAvB;AAAA,2BACL,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,eAArB;AAAsC,MAAA,YAAY,EAAE,cAClD,QAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,OAAO,EAAEd,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADkD;AAApD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AA+DD,CAhGD;;GAAMF,Q;UAEaP,W;;;KAFbO,Q;AAkGN,SACEA,QADF","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// import { SIDEBAR_ITEMS, setSidebarActive } from '@src/ui/util/sidebar';\nimport { CanvasTemplate } from '@ui/common/canvasTemplate';\nimport { PageTemplate } from '@ui/common/pageTemplate';\nimport { PHButton } from '@ui/common/element/page/muButton';\nimport { ListRowInputType, ListRowButtonType, ListRow } from '@ui/common/element/page/muListRow';\n\nconst GlowHome = () => {\n  // setSidebarActive(SIDEBAR_ITEMS.HOME);\n  const navigate = useNavigate();\n  const goToProjectList = () => navigate('/projects');\n  const goToContainerList = () => navigate('/containers');\n\n  const [demoData, setDemoData] = useState({\n    demoStr: '',\n    demoNumeric: 0,\n    demoChecked: true,\n    demoRadio: undefined,\n  });\n  const onInputChange = (valueName) => (e) => {\n    if (e.target.type === 'reset') {\n      setDemoData({\n        demoStr: '',\n        demoNumeric: 0,\n        demoChecked: true,\n        demoRadio: undefined,\n      });\n    } if (valueName) {\n      let newDemoData = { ...demoData };\n      // TODO: e.target.checked도 받을 수 있도록\n      if (e.target.type === 'checkbox') {\n        newDemoData[valueName] = e.target.checked;\n      } else {\n        newDemoData[valueName] = e.target.value;\n      }\n      console.log(newDemoData);\n      setDemoData(newDemoData);\n    }\n  }\n\n  return <CanvasTemplate title={'프로젝트 홈'}>\n    <PageTemplate title={'현재 참여 중인 프로젝트'} actionButton={[\n      <PHButton smaller onClick={goToProjectList}>자세히 보기</PHButton>\n    ]}>\n      {/* <ListRow header>{['테스트1', <div>qweqwe</div>]}</ListRow>\n      <ListRow noLabel>{['테스트1', 213124]}</ListRow>\n      <ListRow label='1'>{['테스트1', null]}</ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트1',\n          ListRowInputType.n({ name: 'demoStr', placeholder: 'Place홀더', onChange: onInputChange, state: demoData }),\n          ListRowInputType.n({ name: 'demoChecked', type: 'checkbox', placeholder: 'Place홀더', onChange: onInputChange, state: demoData }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:value:1',\n          ListRowInputType.n({ name: 'demoRadio', type: 'radio', onChange: onInputChange, state: demoData, radioValue: 1 }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:value:2',\n          ListRowInputType.n({ name: 'demoRadio', type: 'radio', onChange: onInputChange, state: demoData, radioValue: 2 }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:number',\n          ListRowInputType.n({ name: 'demoNumeric', type: 'number', onChange: onInputChange, state: demoData, min: 5, max: 15, step: 2, }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'reset', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'lt', variant: 'secondary', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'sm', variant: 'success', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1' itemWidth={[10, 80, 10]}>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'extra-sm', variant: 'danger', onChange: onInputChange }),\n        ]}\n      </ListRow>\n    </PageTemplate>\n\n    <PageTemplate title={'접근 가능한 컨테이너'} actionButton={[\n      <PHButton smaller onClick={goToContainerList}>+ 자세히 보기</PHButton>\n    ]}> */}\n    </PageTemplate>\n  </CanvasTemplate>\n};\n\nexport {\n  GlowHome\n};\n"]},"metadata":{},"sourceType":"module"}