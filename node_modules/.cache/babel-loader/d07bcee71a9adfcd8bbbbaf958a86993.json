{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\common\\\\element\\\\page\\\\pageListItem3.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/** @type { React.CSSProperties } */\nconst CutTextStyle = {\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap'\n};\n/** @type { React.CSSProperties } */\n\nconst PLItemStyle = {\n  marginLeft: 2 + 'vw',\n  marginRight: 2 + 'vw',\n  padding: 8 + 'px',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-evenly',\n  borderTop: '1px solid #ddd'\n};\n/** @type { React.CSSProperties } */\n\nconst PLHeaderStyle = { ...PLItemStyle,\n  borderTop: null,\n  borderBottom: '1px solid #ddd'\n};\n/** @type { React.CSSProperties } */\n\nconst PLItemNameStyle = { ...CutTextStyle,\n  width: 33 + \"%\"\n};\n/** @type { React.CSSProperties } */\n\nconst PLItemValueStyle = { ...CutTextStyle,\n  width: 33 + \"%\"\n};\n\nconst PLHeader3 = props => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: PLItemStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: randomId + 'qwe',\n      style: { ...PLItemNameStyle,\n        fontWeight: \"bold\"\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: randomId,\n      id: randomId + 'qwe',\n      style: { ...PLItemValueStyle,\n        fontWeight: \"bold\"\n      },\n      children: props.value1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: randomId,\n      style: { ...PLItemValueStyle,\n        fontWeight: \"bold\"\n      },\n      children: props.value2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_c = PLHeader3;\n\nconst PLItem3 = props => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: PLItemStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: randomId + 'qwe',\n      style: PLItemNameStyle,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: randomId,\n      id: randomId + 'qwe',\n      style: PLItemValueStyle,\n      children: props.value1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: randomId,\n      style: PLItemValueStyle,\n      children: props.value2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = PLItem3;\n\nconst PLInput3 = props => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: PLItemStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: randomId,\n      style: PLItemNameStyle,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      htmlFor: randomId,\n      id: randomId + 'qwe',\n      value: props.state[props.value1Name],\n      onChange: props.onChange(props.value1Name),\n      style: PLItemValueStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: randomId,\n      value: props.state[props.value2Name],\n      onChange: props.onChange(props.value2Name),\n      style: PLItemValueStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = PLInput3;\nexport { PLHeader3, PLItem3, PLInput3 };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PLHeader3\");\n$RefreshReg$(_c2, \"PLItem3\");\n$RefreshReg$(_c3, \"PLInput3\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/common/element/page/pageListItem3.jsx"],"names":["CutTextStyle","textOverflow","overflow","whiteSpace","PLItemStyle","marginLeft","marginRight","padding","display","flexDirection","justifyContent","borderTop","PLHeaderStyle","borderBottom","PLItemNameStyle","width","PLItemValueStyle","PLHeader3","props","randomId","Math","random","toString","substr","fontWeight","name","value1","value2","PLItem3","PLInput3","state","value1Name","onChange","value2Name"],"mappings":"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","sourcesContent":["\n/** @type { React.CSSProperties } */\nconst CutTextStyle = {\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n}\n\n/** @type { React.CSSProperties } */\nconst PLItemStyle = {\n  marginLeft: 2 + 'vw',\n  marginRight: 2 + 'vw',\n  padding: 8 + 'px',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-evenly',\n  borderTop: '1px solid #ddd',\n}\n\n/** @type { React.CSSProperties } */\nconst PLHeaderStyle = {\n  ...PLItemStyle,\n  borderTop: null,\n  borderBottom: '1px solid #ddd',\n}\n\n/** @type { React.CSSProperties } */\nconst PLItemNameStyle = {\n  ...CutTextStyle,\n  width: 33 + \"%\",\n}\n\n/** @type { React.CSSProperties } */\nconst PLItemValueStyle = {\n  ...CutTextStyle,\n  width: 33 + \"%\",\n}\n\nconst PLHeader3 = (props) => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n\n  return <div style={PLItemStyle}>\n    <label htmlFor={randomId + 'qwe'} style={{\n      ...PLItemNameStyle,\n      fontWeight: \"bold\",\n    }}>\n      {props.name}\n    </label>\n    <label htmlFor={randomId} id={randomId + 'qwe'} style={{\n      ...PLItemValueStyle,\n      fontWeight: \"bold\",\n    }}>\n      {props.value1}\n    </label>\n    <div id={randomId} style={{\n      ...PLItemValueStyle,\n      fontWeight: \"bold\",\n    }}>\n      {props.value2}\n    </div>\n  </div>\n}\n\nconst PLItem3 = (props) => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n\n  return <div style={PLItemStyle}>\n    <label htmlFor={randomId + 'qwe'} style={PLItemNameStyle}>\n      {props.name}\n    </label>\n    <label htmlFor={randomId} id={randomId + 'qwe'} style={PLItemValueStyle}>\n      {props.value1}\n    </label>\n    <div id={randomId} style={PLItemValueStyle}>\n      {props.value2}\n    </div>\n  </div>;\n}\n\nconst PLInput3 = (props) => {\n  let randomId = Math.random().toString(36).substr(2, 11);\n\n  return <div style={PLItemStyle}>\n    <label htmlFor={randomId} style={PLItemNameStyle}>\n      {props.name}\n    </label>\n    <input htmlFor={randomId} id={randomId + 'qwe'} value={props.state[props.value1Name]} onChange={props.onChange(props.value1Name)} style={PLItemValueStyle} />\n    <input id={randomId} value={props.state[props.value2Name]} onChange={props.onChange(props.value2Name)} style={PLItemValueStyle} />\n  </div>;\n}\n\nexport { PLHeader3, PLItem3, PLInput3 };\n"]},"metadata":{},"sourceType":"module"}