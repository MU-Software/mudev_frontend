{"ast":null,"code":"import { ACCOUNT_FETCHING, SIGNED_IN, SIGNED_OUT, FORCE_SET_ACCOUNTINFO } from './action';\nimport { AccountInfo } from './model';\nconst initialAccountState = new AccountInfo({\n  isSignedIn: undefined\n});\nexport const accountReducer = (state = initialAccountState, action) => {\n  var _action$accountInfo;\n\n  console.log(state === null || state === void 0 ? void 0 : state.isSignedIn);\n  console.log(action === null || action === void 0 ? void 0 : (_action$accountInfo = action.accountInfo) === null || _action$accountInfo === void 0 ? void 0 : _action$accountInfo.isSignedIn);\n\n  switch (action.type) {\n    case ACCOUNT_FETCHING:\n      return new AccountInfo({\n        isSignedIn: state === null || state === void 0 ? void 0 : state.isSignedIn,\n        isFetching: true\n      });\n\n    case SIGNED_IN:\n      return action.accountInfo;\n\n    case SIGNED_OUT:\n      return action.accountInfo;\n\n    case FORCE_SET_ACCOUNTINFO:\n      return action.accountInfo;\n\n    default:\n      break;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/redux/modules/account/reducer.ts"],"names":["ACCOUNT_FETCHING","SIGNED_IN","SIGNED_OUT","FORCE_SET_ACCOUNTINFO","AccountInfo","initialAccountState","isSignedIn","undefined","accountReducer","state","action","console","log","accountInfo","type","isFetching"],"mappings":"AAAA,SACEA,gBADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,qBAJF,QAKO,UALP;AAaA,SAA6BC,WAA7B,QAAgD,SAAhD;AAEA,MAAMC,mBAAmB,GAAG,IAAID,WAAJ,CAAgB;AAAEE,EAAAA,UAAU,EAAEC;AAAd,CAAhB,CAA5B;AAEA,OAAO,MAAMC,cAAkC,GAAG,CAACC,KAAK,GAAGJ,mBAAT,EAA8BK,MAA9B,KAAyC;AAAA;;AACzFC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEH,UAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,aAAYA,MAAZ,8CAAYA,MAAM,CAAEG,WAApB,wDAAY,oBAAqBP,UAAjC;;AACA,UAAQI,MAAM,CAACI,IAAf;AACE,SAAKd,gBAAL;AACE,aAAO,IAAII,WAAJ,CAAgB;AACrBE,QAAAA,UAAU,EAAEG,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEH,UADE;AAErBS,QAAAA,UAAU,EAAE;AAFS,OAAhB,CAAP;;AAIF,SAAKd,SAAL;AACE,aAAOS,MAAM,CAACG,WAAd;;AACF,SAAKX,UAAL;AACE,aAAOQ,MAAM,CAACG,WAAd;;AACF,SAAKV,qBAAL;AACE,aAAOO,MAAM,CAACG,WAAd;;AACF;AACE;AAbJ;;AAeA,SAAOJ,KAAP;AACD,CAnBM","sourcesContent":["import {\r\n  ACCOUNT_FETCHING,\r\n  SIGNED_IN,\r\n  SIGNED_OUT,\r\n  FORCE_SET_ACCOUNTINFO,\r\n} from './action';\r\nimport {\r\n  signInActionCreatorAsync,\r\n  signUpActionCreatorAsync,\r\n  signOutActionCreatorAsync,\r\n  refreshAccessTokenActionCreatorAsync,\r\n  setAccountInfoForceActionCreator, // TODO: DEBUG PURPOSE, REMOVE THIS ON RELEASE!\r\n} from './action_creator';\r\nimport { AccountReducerType, AccountInfo } from './model';\r\n\r\nconst initialAccountState = new AccountInfo({ isSignedIn: undefined });\r\n\r\nexport const accountReducer: AccountReducerType = (state = initialAccountState, action) => {\r\n  console.log(state?.isSignedIn);\r\n  console.log(action?.accountInfo?.isSignedIn);\r\n  switch (action.type) {\r\n    case ACCOUNT_FETCHING:\r\n      return new AccountInfo({\r\n        isSignedIn: state?.isSignedIn,\r\n        isFetching: true,\r\n      });\r\n    case SIGNED_IN:\r\n      return action.accountInfo;\r\n    case SIGNED_OUT:\r\n      return action.accountInfo;\r\n    case FORCE_SET_ACCOUNTINFO:\r\n      return action.accountInfo;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}