{"ast":null,"code":"// Project GLOW (mudev.cc frontend)\n// (c) MUsoftware, 2021, MIT\n'use strict'; // import FrostAPI from './network/api';\n// const frostAPI = new FrostAPI();\n// Topbar hooker & initializer\n\nvar _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\App.js\";\nconst topbarUserNameIndicator = document.getElementById('dropdown07XL');\nconst topbarSignoutBtn = document.getElementById('topbarSignoutBtn');\ntopbarSignoutBtn.addEventListener('click', () => frostAPI.signout(), false); // const topbarHierarchyIndicator = document.getElementById('topbarHierarchyIndicator');\n// const hierarchyIndicatorContent = (roles) => {\n//   var newElement = document.createElement('li');\n//   newElement.className = 'nav-item'\n//   var newElementChild = document.createElement('a');\n//   newElementChild.className = 'nav-link';\n//   // newElementChild.href = '#';\n//   for(const role of roles) {\n//     if (role.type === 'professor' && role.chairman)\n//       newElementChild.innerText = '학부장';\n//     else if (role.type === 'professor')\n//       newElementChild.innerText = '교수';\n//     else if (role.type === 'student')\n//       newElementChild.innerText = '학부생';\n//     else\n//       newElementChild.innerText = '손님';\n//   }\n//   newElement.appendChild(newElementChild);\n//   return newElement\n// };\n// frostAPI.refreshAuthentications().then(\n//   (_) => {\n//     let userID = frostAPI.userID;\n//     if (userID !== undefined || userID !== null) {\n//       topbarUserNameIndicator.innerText = userID + '님 환영합니다 ';\n//     } else { topbarUserNameIndicator.innerText = '사용자 옵션 '; }\n//     // var roles = frostAPI.roles;\n//     // let hierarchy = hierarchyIndicatorContent(roles);\n//     // topbarHierarchyIndicator.insertBefore(hierarchy, topbarHierarchyIndicator.firstChild);\n//   }\n// );\n\nimport './App.css';\nimport React from 'react';\nimport { Routes, Route, BrowserRouter, useLocation } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { setRoute } from '@src/redux/modules/route';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initializeSidebar } from './ui/util/sidebar';\nimport { SIDEBAR_ITEMS } from './redux/modules/route';\nimport { GlowHome } from '@ui/page/home/home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    initializeSidebar(SIDEBAR_ITEMS);\n  }\n\n  render() {\n    let location = useLocation();\n    const dispatch = useDispatch();\n    const {\n      route\n    } = useSelector(state => state.route);\n\n    const goRoute = newRoute => {\n      dispatch(setRoute(newRoute));\n    };\n\n    goRoute(location.pathname);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              className: \"nav-link\",\n              element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 65\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/projects\",\n              className: \"nav-link\",\n              element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 73\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/containers\",\n              className: \"nav-link\",\n              element: /*#__PURE__*/_jsxDEV(GlowHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 75\n              }, this),\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), \",\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/App.js"],"names":["topbarUserNameIndicator","document","getElementById","topbarSignoutBtn","addEventListener","frostAPI","signout","React","Routes","Route","BrowserRouter","useLocation","Provider","store","setRoute","useDispatch","useSelector","initializeSidebar","SIDEBAR_ITEMS","GlowHome","App","Component","componentDidMount","render","location","dispatch","route","state","goRoute","newRoute","pathname"],"mappings":"AAAA;AACA;AACA,a,CAEA;AACA;AAEA;;;AACA,MAAMA,uBAAuB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAhC;AACA,MAAMC,gBAAgB,GAAGF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAzB;AACAC,gBAAgB,CAACC,gBAAjB,CAAkC,OAAlC,EAA2C,MAAMC,QAAQ,CAACC,OAAT,EAAjD,EAAqE,KAArE,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,EAAuCC,WAAvC,QAA0D,kBAA1D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,iBAAiB,CAACC,aAAD,CAAjB;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAGb,WAAW,EAA1B;AACA,UAAMc,QAAQ,GAAGV,WAAW,EAA5B;AACA,UAAM;AAAEW,MAAAA;AAAF,QAAYV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAA7B;;AACA,UAAME,OAAO,GAAIC,QAAD,IAAc;AAAEJ,MAAAA,QAAQ,CAACX,QAAQ,CAACe,QAAD,CAAT,CAAR;AAA+B,KAA/D;;AACAD,IAAAA,OAAO,CAACJ,QAAQ,CAACM,QAAV,CAAP;AAEA,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACL,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEjB,KAAjB;AAAA,+BACE,QAAC,aAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAsB,cAAA,SAAS,EAAC,UAAhC;AAA2C,cAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAApD;AAAkE,cAAA,KAAK;AAAvE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,WAAlB;AAA8B,cAAA,SAAS,EAAC,UAAxC;AAAmD,cAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAA5D;AAA0E,cAAA,KAAK;AAA/E;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,aAAlB;AAAgC,cAAA,SAAS,EAAC,UAA1C;AAAqD,cAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,sBAA9D;AAA4E,cAAA,KAAK;AAAjF;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAYD;;AAxB+B;;AA2BlC,eAAeO,GAAf","sourcesContent":["// Project GLOW (mudev.cc frontend)\n// (c) MUsoftware, 2021, MIT\n'use strict';\n\n// import FrostAPI from './network/api';\n// const frostAPI = new FrostAPI();\n\n// Topbar hooker & initializer\nconst topbarUserNameIndicator = document.getElementById('dropdown07XL');\nconst topbarSignoutBtn = document.getElementById('topbarSignoutBtn');\ntopbarSignoutBtn.addEventListener('click', () => frostAPI.signout(), false);\n\n// const topbarHierarchyIndicator = document.getElementById('topbarHierarchyIndicator');\n// const hierarchyIndicatorContent = (roles) => {\n//   var newElement = document.createElement('li');\n//   newElement.className = 'nav-item'\n//   var newElementChild = document.createElement('a');\n//   newElementChild.className = 'nav-link';\n//   // newElementChild.href = '#';\n\n//   for(const role of roles) {\n//     if (role.type === 'professor' && role.chairman)\n//       newElementChild.innerText = '학부장';\n//     else if (role.type === 'professor')\n//       newElementChild.innerText = '교수';\n//     else if (role.type === 'student')\n//       newElementChild.innerText = '학부생';\n//     else\n//       newElementChild.innerText = '손님';\n//   }\n//   newElement.appendChild(newElementChild);\n//   return newElement\n// };\n\n\n// frostAPI.refreshAuthentications().then(\n//   (_) => {\n//     let userID = frostAPI.userID;\n//     if (userID !== undefined || userID !== null) {\n//       topbarUserNameIndicator.innerText = userID + '님 환영합니다 ';\n//     } else { topbarUserNameIndicator.innerText = '사용자 옵션 '; }\n\n//     // var roles = frostAPI.roles;\n//     // let hierarchy = hierarchyIndicatorContent(roles);\n//     // topbarHierarchyIndicator.insertBefore(hierarchy, topbarHierarchyIndicator.firstChild);\n//   }\n// );\n\nimport './App.css';\nimport React from 'react';\nimport { Routes, Route, BrowserRouter, useLocation } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport { setRoute } from '@src/redux/modules/route';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { initializeSidebar } from './ui/util/sidebar';\nimport { SIDEBAR_ITEMS } from './redux/modules/route';\nimport { GlowHome } from '@ui/page/home/home';\n\nclass App extends React.Component {\n  componentDidMount() {\n    initializeSidebar(SIDEBAR_ITEMS);\n  }\n\n  render() {\n    let location = useLocation();\n    const dispatch = useDispatch();\n    const { route } = useSelector(state => state.route);\n    const goRoute = (newRoute) => { dispatch(setRoute(newRoute)); }\n    goRoute(location.pathname);\n\n    return <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <Routes>\n            <Route exact path=\"/\" className=\"nav-link\" element={<GlowHome />} exact />\n            <Route exact path=\"/projects\" className=\"nav-link\" element={<GlowHome />} exact />\n            <Route exact path=\"/containers\" className=\"nav-link\" element={<GlowHome />} exact />\n          </Routes>\n        </BrowserRouter>\n      </Provider>,\n    </div>\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}