{"ast":null,"code":"import _objectSpread from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{isEmail}from'validator';import{FrostError}from'src/common/error';import{AccountInfo}from'src/redux/modules/account/model';import{signUpActionCreatorAsync,removeFrostErrorFromStateActionCreator}from'src/redux/modules/account/action_creator';import{Form,Button}from'react-bootstrap';import{PHSpinnerButton}from'src/ui/common/element/muButton';import{PHFormText}from'src/ui/common/element/muFormText';import'./account.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var calculateIncludedCharType=function calculateIncludedCharType(str){var strType=[];for(var i=0;i<str.length;i++){var currentChar=str.charAt(i);if(currentChar>='0'&&currentChar<='9'){strType.push('n');// number\n}else if(currentChar>='a'&&currentChar<='z'){strType.push('l');// lower\n}else if(currentChar>='A'&&currentChar<='Z'){strType.push('u');// upper\n}else if(currentChar>=' '&&currentChar<='~'){strType.push('s');// special char\n}else{strType.push('e');// error or unknown\n}}return new Set(strType);};export var AccountSignUp=function AccountSignUp(){var _accountInfo$isFetchi;var InputChecker={id:function id(str){if(!str){return{success:false,idNotUsableReason:'아이디를 입력해주세요.'};}else if(str.length<4){return{success:false,idNotUsableReason:'아이디의 길이가 너무 짧아요, 4자 이상으로 적어주세요.'};}else if(48<str.length){return{success:false,idNotUsableReason:'아이디의 길이가 너무 길어요, 48자 이하로 적어주세요.'};}var strType=calculateIncludedCharType(str);if(strType.has('e')||strType.has('s')){return{success:false,idNotUsableReason:'아이디로 사용할 수 없는 글자가 포함되어 있어요, 다시 입력해주세요.'};}return{success:true,idNotUsableReason:null};},email:function email(str){if(!str){return{success:false,emailNotUsableReason:'이메일을 입력해주세요.'};}if(!isEmail(str)){return{success:false,emailNotUsableReason:'올바르지 않은 이메일 형식이에요.'};}return{success:true,emailNotUsableReason:null};},nick:function nick(str){if(!str){return{success:false,nickNotUsableReason:'별칭을 입력해주세요.'};}return{success:true,nickNotUsableReason:null};},pw:function pw(str){if(!str){return{success:false,pwNotUsableReason:'사용하실 비밀번호를 입력해주세요,'};}else if(str.length<8){return{success:false,pwNotUsableReason:'길이가 너무 짧아요,'};}else if(1024<str.length){return{success:false,pwNotUsableReason:/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uBE44\\uBC00\\uBC88\\uD638\\uB85C \".concat(str.length,\"\\uC790\\uB294 \\uB108\\uC5B4\\uC5B4\\uC5B4\\uBB34 \\uAE38\\uC5B4\\uC694!\"),/*#__PURE__*/_jsx(\"br\",{}),\"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 1024\\uC790 \\uC774\\uD558\\uB85C \\uD574 \\uC8FC\\uC2DC\\uACE0,\"]})};}var strType=calculateIncludedCharType(str);if(strType.has('e')){return{success:false,pwNotUsableReason:'비밀번호로 사용할 수 없는 글자가 포함되어 있어요,'};}else if(strType.size<2){return{success:false,pwNotUsableReason:'비밀번호가 너무 단순해요,'};}return{success:true,pwNotUsableReason:null};},pwReType:function pwReType(pwStr,pwReTypeStr){if(!pwReTypeStr){return{success:false,pwReTypeNotUsableReason:'위에 입력하신 비밀번호를 한번 더 입력해주세요.'};}else if(pwStr===pwReTypeStr){return{success:true,pwReTypeNotUsableReason:null};}return{success:false,pwReTypeNotUsableReason:'위에 입력하신 비밀번호와 일치하지 않아요.'};}};var FrostErrorToSignUpError=function FrostErrorToSignUpError(err){if(!err)return{signUpFailedReason:null};if(err.route!=='account/signup')return{signUpFailedReason:null};// We need to set Frost's error message(showMsg)\n// to proper (id|pw|email|nick)NotUsableReason field or signUpFailedReason.\nvar errShowMsg=err.message;var errFieldName=err.fieldName?\"\".concat(err.fieldName,\"NotUsableReason\"):'signUpFailedReason';return _defineProperty({},errFieldName,errShowMsg);};var accountInfo=useSelector(function(state){return state.accountReducer;});var dispatch=useDispatch();var navigate=useNavigate();var _useState=useState(_objectSpread({wasUserSignedInWhenPageLoad:undefined,isSignedUpRequestFired:false,isProcessing:(_accountInfo$isFetchi=accountInfo===null||accountInfo===void 0?void 0:accountInfo.isFetching)!==null&&_accountInfo$isFetchi!==void 0?_accountInfo$isFetchi:false,idTextFieldValue:'',pwTextFieldValue:'',pwReTypeTextFieldValue:'',emailTextFieldValue:'',nickTextFieldValue:'',idNotUsableReason:null,nickNotUsableReason:null,emailNotUsableReason:null,pwNotUsableReason:null,pwReTypeNotUsableReasonleReason:null,signUpFailedReason:null},FrostErrorToSignUpError(accountInfo===null||accountInfo===void 0?void 0:accountInfo.frostErrorObj))),_useState2=_slicedToArray(_useState,2),signUpFormData=_useState2[0],setSignUpFormData=_useState2[1];useEffect(function(){// We need this to remove FrostErrorObj in state when this component mounts.\ndispatch(removeFrostErrorFromStateActionCreator());},[]);useEffect(function(){var _accountInfo$isFetchi2;setSignUpFormData(_objectSpread(_objectSpread(_objectSpread({},signUpFormData),signUpFormData.isSignedUpRequestFired?FrostErrorToSignUpError(accountInfo===null||accountInfo===void 0?void 0:accountInfo.frostErrorObj):{}),{},{isProcessing:(_accountInfo$isFetchi2=accountInfo===null||accountInfo===void 0?void 0:accountInfo.isFetching)!==null&&_accountInfo$isFetchi2!==void 0?_accountInfo$isFetchi2:false,wasUserSignedInWhenPageLoad:signUpFormData.wasUserSignedInWhenPageLoad===undefined?accountInfo===null||accountInfo===void 0?void 0:accountInfo.isSignedIn:signUpFormData.wasUserSignedInWhenPageLoad}));},[accountInfo]);if(signUpFormData.wasUserSignedInWhenPageLoad===undefined){// This is loading state, wait for the new state.\n}else if(signUpFormData.wasUserSignedInWhenPageLoad){// Go to home if user is already on signed in state when page loads.\nnavigate('/');}else if(!signUpFormData.wasUserSignedInWhenPageLoad&&(accountInfo===null||accountInfo===void 0?void 0:accountInfo.isSignedIn)){// Go to welcome page when user successfully signed up and no mail verification required.\nnavigate('/account/welcome-to-mudev',{state:{email:signUpFormData.emailTextFieldValue}});}else if(!signUpFormData.wasUserSignedInWhenPageLoad&&(accountInfo===null||accountInfo===void 0?void 0:accountInfo.isSignedUp)){// Go to mail verification info page when user successfully signed up and mail verification required.\nnavigate('/account/welcome-to-mudev-mail',{state:{email:signUpFormData.emailTextFieldValue}});}var handleInput=function handleInput(fieldName,fieldValue){var fieldStateKey=\"\".concat(fieldName,\"TextFieldValue\");var checkerResult=fieldName==='pwReType'?InputChecker[fieldName](signUpFormData.pwTextFieldValue,fieldValue):InputChecker[fieldName](fieldValue);delete checkerResult.success;setSignUpFormData(_objectSpread(_objectSpread(_objectSpread({},signUpFormData),checkerResult),{},_defineProperty({},fieldStateKey,fieldValue)));};var handleEnterInput=function handleEnterInput(e){if(e.type==='keypress'&&e.charCode===13)trySignUp();};var trySignUp=function trySignUp(){// Disable all actions\nvar newSignUpFormData=_objectSpread(_objectSpread({},signUpFormData),{},{isSignedUpRequestFired:true,isProcessing:true});for(var key in newSignUpFormData){// trim all strings in states\nif(typeof newSignUpFormData[key]==='string')newSignUpFormData[key]=newSignUpFormData[key].trim();}setSignUpFormData(newSignUpFormData);var checkRequiredFieldName=['id','nick','email','pw','pwReType'];var isFormCheckSuccess=true;var resultFormCheckData={};checkRequiredFieldName.map(function(fieldName){var fieldValue=newSignUpFormData[\"\".concat(fieldName,\"TextFieldValue\")];var fieldCheckResult=fieldName==='pwReType'?InputChecker[fieldName](newSignUpFormData.pwTextFieldValue,fieldValue):InputChecker[fieldName](fieldValue);if(isFormCheckSuccess)// It's OK to set true to false, but false to true must not be happened.\nisFormCheckSuccess=fieldCheckResult.success;resultFormCheckData=_objectSpread(_objectSpread({},resultFormCheckData),fieldCheckResult);});delete resultFormCheckData.success;newSignUpFormData=_objectSpread(_objectSpread({},newSignUpFormData),resultFormCheckData);setSignUpFormData(newSignUpFormData);if(!isFormCheckSuccess){newSignUpFormData=_objectSpread(_objectSpread({},newSignUpFormData),{},{isProcessing:false});setSignUpFormData(newSignUpFormData);return false;}dispatch(signUpActionCreatorAsync(newSignUpFormData.idTextFieldValue,newSignUpFormData.emailTextFieldValue,newSignUpFormData.nickTextFieldValue,newSignUpFormData.pwTextFieldValue));return false;};return/*#__PURE__*/_jsxs(\"section\",{className:\"accountMain\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"})}),/*#__PURE__*/_jsx(\"aside\",{className:\"accountAside\",children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formSignUpId\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",autoComplete:\"username\",disabled:signUpFormData.isProcessing,value:signUpFormData.idTextFieldValue,onChange:function onChange(event){return handleInput('id',event.target.value);}}),/*#__PURE__*/_jsx(PHFormText,{children:signUpFormData.idNotUsableReason})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formSignUpNick\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uBCC4\\uCE6D\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"\\uBCC4\\uCE6D\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",autoComplete:\"nickname\",disabled:signUpFormData.isProcessing,value:signUpFormData.nickTextFieldValue,onChange:function onChange(event){return handleInput('nick',event.target.value);}}),/*#__PURE__*/_jsx(PHFormText,{children:signUpFormData.nickNotUsableReason})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formSignUpEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"someone@example.com\",autoComplete:\"email\",disabled:signUpFormData.isProcessing,value:signUpFormData.emailTextFieldValue,onChange:function onChange(event){return handleInput('email',event.target.value);}}),/*#__PURE__*/_jsx(PHFormText,{children:signUpFormData.emailNotUsableReason})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formSignUpPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",autoComplete:\"new-password\",disabled:signUpFormData.isProcessing,value:signUpFormData.pwTextFieldValue,onKeyPress:handleEnterInput,onChange:function onChange(event){return handleInput('pw',event.target.value);}}),/*#__PURE__*/_jsx(PHFormText,{defaultChildren:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 8\\uC790 \\uC774\\uC0C1, \\uB300\\uC18C\\uBB38\\uC790/\\uC22B\\uC790/\\uD2B9\\uC218\\uBB38\\uC790 \\uC911 2\\uAC00\\uC9C0 \\uC774\\uC0C1\\uC758 \\uC870\\uD569\\uC73C\\uB85C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",children:signUpFormData.pwNotUsableReason?/*#__PURE__*/_jsxs(_Fragment,{children:[signUpFormData.pwNotUsableReason,/*#__PURE__*/_jsx(\"br\",{}),\"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 8\\uC790 \\uC774\\uC0C1, \\uB300\\uC18C\\uBB38\\uC790/\\uC22B\\uC790/\\uD2B9\\uC218\\uBB38\\uC790 \\uC911 2\\uAC00\\uC9C0 \\uC774\\uC0C1\\uC758 \\uC870\\uD569\\uC73C\\uB85C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"]}):''})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formSignUpPasswordReType\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"\\uC704\\uC5D0 \\uC785\\uB825\\uD558\\uC2E0 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",autoComplete:\"new-password\",disabled:signUpFormData.isProcessing,value:signUpFormData.pwReTypeTextFieldValue,onKeyPress:handleEnterInput,onChange:function onChange(event){return handleInput('pwReType',event.target.value);}}),/*#__PURE__*/_jsx(PHFormText,{children:signUpFormData.pwReTypeNotUsableReason})]}),/*#__PURE__*/_jsx(PHFormText,{className:\"accountAsideFormGroup\",children:signUpFormData.signUpFailedReason}),/*#__PURE__*/_jsxs(\"div\",{className:\"accountSubmitBtnContainer\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline-secondary\",style:{color:'var(--color)',border:'1px solid var(--color)'},disabled:signUpFormData.isProcessing,onClick:function onClick(){return navigate('/account/signin');},children:\"\\uB85C\\uADF8\\uC778\\uD558\\uB7EC \\uAC00\\uAE30\"}),/*#__PURE__*/_jsx(PHSpinnerButton,{variant:\"primary\"// type='submit'\n,size:false,style:{margin:undefined},onClick:trySignUp,showSpinner:signUpFormData.isProcessing,children:\"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"})]})]})})]});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/src/ui/page/account/signup.jsx"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","isEmail","FrostError","AccountInfo","signUpActionCreatorAsync","removeFrostErrorFromStateActionCreator","Form","Button","PHSpinnerButton","PHFormText","calculateIncludedCharType","str","strType","i","length","currentChar","charAt","push","Set","AccountSignUp","InputChecker","id","success","idNotUsableReason","has","email","emailNotUsableReason","nick","nickNotUsableReason","pw","pwNotUsableReason","size","pwReType","pwStr","pwReTypeStr","pwReTypeNotUsableReason","FrostErrorToSignUpError","err","signUpFailedReason","route","errShowMsg","message","errFieldName","fieldName","accountInfo","state","accountReducer","dispatch","navigate","wasUserSignedInWhenPageLoad","undefined","isSignedUpRequestFired","isProcessing","isFetching","idTextFieldValue","pwTextFieldValue","pwReTypeTextFieldValue","emailTextFieldValue","nickTextFieldValue","pwReTypeNotUsableReasonleReason","frostErrorObj","signUpFormData","setSignUpFormData","isSignedIn","isSignedUp","handleInput","fieldValue","fieldStateKey","checkerResult","handleEnterInput","e","type","charCode","trySignUp","newSignUpFormData","key","trim","checkRequiredFieldName","isFormCheckSuccess","resultFormCheckData","map","fieldCheckResult","event","target","value","color","border","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isEmail } from 'validator';\r\n\r\nimport { FrostError } from 'src/common/error';\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\nimport {\r\n  signUpActionCreatorAsync,\r\n  removeFrostErrorFromStateActionCreator,\r\n} from 'src/redux/modules/account/action_creator';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport './account.css';\r\n\r\nconst calculateIncludedCharType = (str: string) => {\r\n  const strType: string[] = [];\r\n\r\n  for (let i = 0; i < str.length; i++) {\r\n    const currentChar = str.charAt(i);\r\n    if (currentChar >= '0' && currentChar <= '9') {\r\n      strType.push('n'); // number\r\n    } else if (currentChar >= 'a' && currentChar <= 'z') {\r\n      strType.push('l'); // lower\r\n    } else if (currentChar >= 'A' && currentChar <= 'Z') {\r\n      strType.push('u'); // upper\r\n    } else if (currentChar >= ' ' && currentChar <= '~') {\r\n      strType.push('s'); // special char\r\n    } else {\r\n      strType.push('e'); // error or unknown\r\n    }\r\n  }\r\n  return new Set(strType);\r\n};\r\n\r\nexport const AccountSignUp = () => {\r\n  const InputChecker = {\r\n    id: (str: string) => {\r\n      if (!str) {\r\n        return {\r\n          success: false,\r\n          idNotUsableReason: '아이디를 입력해주세요.',\r\n        };\r\n      } else if (str.length < 4) {\r\n        return {\r\n          success: false,\r\n          idNotUsableReason: '아이디의 길이가 너무 짧아요, 4자 이상으로 적어주세요.',\r\n        };\r\n      } else if (48 < str.length) {\r\n        return {\r\n          success: false,\r\n          idNotUsableReason: '아이디의 길이가 너무 길어요, 48자 이하로 적어주세요.',\r\n        };\r\n      }\r\n\r\n      const strType = calculateIncludedCharType(str);\r\n      if (strType.has('e') || strType.has('s')) {\r\n        return {\r\n          success: false,\r\n          idNotUsableReason: '아이디로 사용할 수 없는 글자가 포함되어 있어요, 다시 입력해주세요.',\r\n        };\r\n      }\r\n\r\n      return { success: true, idNotUsableReason: null };\r\n    },\r\n    email: (str: string) => {\r\n      if (!str) {\r\n        return {\r\n          success: false,\r\n          emailNotUsableReason: '이메일을 입력해주세요.',\r\n        };\r\n      }\r\n      if (!isEmail(str)) {\r\n        return {\r\n          success: false,\r\n          emailNotUsableReason: '올바르지 않은 이메일 형식이에요.',\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        emailNotUsableReason: null,\r\n      };\r\n    },\r\n    nick: (str: string) => {\r\n      if (!str) {\r\n        return {\r\n          success: false,\r\n          nickNotUsableReason: '별칭을 입력해주세요.',\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        nickNotUsableReason: null,\r\n      };\r\n    },\r\n    pw: (str: string) => {\r\n      if (!str) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: '사용하실 비밀번호를 입력해주세요,',\r\n        };\r\n      } else if (str.length < 8) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: '길이가 너무 짧아요,',\r\n        };\r\n      } else if (1024 < str.length) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: <>\r\n            {`비밀번호로 ${str.length}자는 너어어어무 길어요!`}<br />\r\n            비밀번호는 1024자 이하로 해 주시고,\r\n          </>\r\n        };\r\n      }\r\n\r\n      const strType = calculateIncludedCharType(str);\r\n      if (strType.has('e')) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: '비밀번호로 사용할 수 없는 글자가 포함되어 있어요,',\r\n        };\r\n      } else if (strType.size < 2) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: '비밀번호가 너무 단순해요,'\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        pwNotUsableReason: null,\r\n      };\r\n    },\r\n    pwReType: (pwStr: string, pwReTypeStr: string) => {\r\n      if (!pwReTypeStr) {\r\n        return {\r\n          success: false,\r\n          pwReTypeNotUsableReason: '위에 입력하신 비밀번호를 한번 더 입력해주세요.',\r\n        };\r\n      } else if (pwStr === pwReTypeStr) {\r\n        return {\r\n          success: true,\r\n          pwReTypeNotUsableReason: null,\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: false,\r\n        pwReTypeNotUsableReason: '위에 입력하신 비밀번호와 일치하지 않아요.',\r\n      };\r\n    },\r\n  };\r\n  const FrostErrorToSignUpError = (err: FrostError) => {\r\n    if (!err)\r\n      return { signUpFailedReason: null };\r\n    if (err.route !== 'account/signup')\r\n      return { signUpFailedReason: null };\r\n    // We need to set Frost's error message(showMsg)\r\n    // to proper (id|pw|email|nick)NotUsableReason field or signUpFailedReason.\r\n    const errShowMsg = err.message;\r\n    const errFieldName = (err.fieldName) ? `${err.fieldName}NotUsableReason` : 'signUpFailedReason';\r\n\r\n    return { [errFieldName]: errShowMsg, };\r\n  };\r\n\r\n  const accountInfo: AccountInfo = useSelector(state => state.accountReducer);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [signUpFormData, setSignUpFormData] = useState({\r\n    wasUserSignedInWhenPageLoad: undefined,\r\n    isSignedUpRequestFired: false,\r\n    isProcessing: accountInfo?.isFetching ?? false,\r\n\r\n    idTextFieldValue: '',\r\n    pwTextFieldValue: '',\r\n    pwReTypeTextFieldValue: '',\r\n    emailTextFieldValue: '',\r\n    nickTextFieldValue: '',\r\n\r\n    idNotUsableReason: null,\r\n    nickNotUsableReason: null,\r\n    emailNotUsableReason: null,\r\n    pwNotUsableReason: null,\r\n    pwReTypeNotUsableReasonleReason: null,\r\n    signUpFailedReason: null,\r\n\r\n    ...(FrostErrorToSignUpError(accountInfo?.frostErrorObj)),\r\n  });\r\n\r\n  useEffect(() => {\r\n    // We need this to remove FrostErrorObj in state when this component mounts.\r\n    dispatch(removeFrostErrorFromStateActionCreator());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSignUpFormData({\r\n      ...signUpFormData,\r\n      ...(signUpFormData.isSignedUpRequestFired ? FrostErrorToSignUpError(accountInfo?.frostErrorObj) : {}),\r\n      isProcessing: accountInfo?.isFetching ?? false,\r\n      wasUserSignedInWhenPageLoad: ((signUpFormData.wasUserSignedInWhenPageLoad === undefined)\r\n        ? accountInfo?.isSignedIn : signUpFormData.wasUserSignedInWhenPageLoad),\r\n    })\r\n  }, [accountInfo]);\r\n\r\n  if (signUpFormData.wasUserSignedInWhenPageLoad === undefined) {\r\n    // This is loading state, wait for the new state.\r\n  } else if (signUpFormData.wasUserSignedInWhenPageLoad) {\r\n    // Go to home if user is already on signed in state when page loads.\r\n    navigate('/');\r\n  } else if (!signUpFormData.wasUserSignedInWhenPageLoad && accountInfo?.isSignedIn) {\r\n    // Go to welcome page when user successfully signed up and no mail verification required.\r\n    navigate('/account/welcome-to-mudev', { state: { email: signUpFormData.emailTextFieldValue, } });\r\n  } else if (!signUpFormData.wasUserSignedInWhenPageLoad && accountInfo?.isSignedUp) {\r\n    // Go to mail verification info page when user successfully signed up and mail verification required.\r\n    navigate('/account/welcome-to-mudev-mail', { state: { email: signUpFormData.emailTextFieldValue, } });\r\n  }\r\n\r\n  const handleInput = (fieldName: string, fieldValue: string) => {\r\n    const fieldStateKey = `${fieldName}TextFieldValue`;\r\n    const checkerResult = (fieldName === 'pwReType')\r\n      ? InputChecker[fieldName](signUpFormData.pwTextFieldValue, fieldValue)\r\n      : InputChecker[fieldName](fieldValue);\r\n    delete (checkerResult.success);\r\n\r\n    setSignUpFormData({\r\n      ...signUpFormData,\r\n      ...checkerResult,\r\n      [fieldStateKey]: fieldValue,\r\n    });\r\n  };\r\n  const handleEnterInput = (e) => {\r\n    if (e.type === 'keypress' && e.charCode === 13)\r\n      trySignUp();\r\n  };\r\n  const trySignUp = () => {\r\n    // Disable all actions\r\n    let newSignUpFormData = {\r\n      ...signUpFormData,\r\n      isSignedUpRequestFired: true,\r\n      isProcessing: true,\r\n    }\r\n    for (var key in newSignUpFormData)\r\n      // trim all strings in states\r\n      if (typeof (newSignUpFormData[key]) === 'string')\r\n        newSignUpFormData[key] = newSignUpFormData[key].trim();\r\n    setSignUpFormData(newSignUpFormData);\r\n\r\n    const checkRequiredFieldName = ['id', 'nick', 'email', 'pw', 'pwReType'];\r\n    let isFormCheckSuccess = true;\r\n    let resultFormCheckData = {};\r\n    checkRequiredFieldName.map(fieldName => {\r\n      const fieldValue = newSignUpFormData[`${fieldName}TextFieldValue`];\r\n      const fieldCheckResult = (fieldName === 'pwReType')\r\n        ? InputChecker[fieldName](newSignUpFormData.pwTextFieldValue, fieldValue)\r\n        : InputChecker[fieldName](fieldValue);\r\n      if (isFormCheckSuccess)\r\n        // It's OK to set true to false, but false to true must not be happened.\r\n        isFormCheckSuccess = fieldCheckResult.success;\r\n      resultFormCheckData = { ...resultFormCheckData, ...fieldCheckResult };\r\n    });\r\n    delete (resultFormCheckData.success);\r\n\r\n    newSignUpFormData = { ...newSignUpFormData, ...resultFormCheckData, }\r\n    setSignUpFormData(newSignUpFormData);\r\n\r\n    if (!isFormCheckSuccess) {\r\n      newSignUpFormData = { ...newSignUpFormData, isProcessing: false, }\r\n      setSignUpFormData(newSignUpFormData);\r\n      return false;\r\n    }\r\n\r\n    dispatch(\r\n      signUpActionCreatorAsync(\r\n        newSignUpFormData.idTextFieldValue,\r\n        newSignUpFormData.emailTextFieldValue,\r\n        newSignUpFormData.nickTextFieldValue,\r\n        newSignUpFormData.pwTextFieldValue)\r\n    );\r\n\r\n    return false;\r\n  };\r\n\r\n  return <section className='accountMain'>\r\n    <header>\r\n      <h2>계정 만들기</h2>\r\n    </header>\r\n    <aside className='accountAside'>\r\n      <Form>\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpId'>\r\n          <Form.Label>아이디</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='아이디를 입력해주세요'\r\n            autoComplete='username'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.idTextFieldValue}\r\n            onChange={(event) => handleInput('id', event.target.value)}\r\n          />\r\n          <PHFormText>{signUpFormData.idNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpNick'>\r\n          <Form.Label>별칭</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='별칭을 입력해주세요'\r\n            autoComplete='nickname'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.nickTextFieldValue}\r\n            onChange={(event) => handleInput('nick', event.target.value)}\r\n          />\r\n          <PHFormText>{signUpFormData.nickNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpEmail'>\r\n          <Form.Label>이메일</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='someone@example.com'\r\n            autoComplete='email'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.emailTextFieldValue}\r\n            onChange={(event) => handleInput('email', event.target.value)}\r\n          />\r\n          <PHFormText>{signUpFormData.emailNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpPassword'>\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='비밀번호'\r\n            autoComplete='new-password'\r\n\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.pwTextFieldValue}\r\n            onKeyPress={handleEnterInput}\r\n            onChange={(event) => handleInput('pw', event.target.value)}\r\n          />\r\n          <PHFormText defaultChildren='비밀번호는 8자 이상, 대소문자/숫자/특수문자 중 2가지 이상의 조합으로 입력해주세요.'>\r\n            {signUpFormData.pwNotUsableReason\r\n              ? <>\r\n                {signUpFormData.pwNotUsableReason}<br />\r\n                비밀번호는 8자 이상, 대소문자/숫자/특수문자 중 2가지 이상의 조합으로 입력해주세요.\r\n              </> : ''}\r\n          </PHFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpPasswordReType'>\r\n          <Form.Label>비밀번호 확인</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='위에 입력하신 비밀번호를 다시 입력해주세요'\r\n            autoComplete='new-password'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.pwReTypeTextFieldValue}\r\n            onKeyPress={handleEnterInput}\r\n            onChange={(event) => handleInput('pwReType', event.target.value)}\r\n          />\r\n          <PHFormText>{signUpFormData.pwReTypeNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n\r\n        <PHFormText className='accountAsideFormGroup'>{signUpFormData.signUpFailedReason}</PHFormText>\r\n\r\n        <div className='accountSubmitBtnContainer'>\r\n          <Button\r\n            variant='outline-secondary'\r\n            style={{\r\n              color: 'var(--color)',\r\n              border: '1px solid var(--color)',\r\n            }}\r\n            disabled={signUpFormData.isProcessing}\r\n            onClick={() => navigate('/account/signin')}>\r\n            로그인하러 가기\r\n          </Button>\r\n\r\n          <PHSpinnerButton\r\n            variant='primary'\r\n            // type='submit'\r\n            size={false}\r\n            style={{ margin: undefined }}\r\n            onClick={trySignUp}\r\n            showSpinner={signUpFormData.isProcessing}>\r\n            계정 만들기\r\n          </PHSpinnerButton>\r\n        </div>\r\n      </Form>\r\n    </aside>\r\n  </section>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}