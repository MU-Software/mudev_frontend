{"ast":null,"code":"import { Manager } from \"socket.io-client\";\nlet playCoSocketIOHandlerInstance;\nexport class PlayCoSocketIOHandler {\n  constructor() {\n    this.socketIoMgr = void 0;\n    this.socketIo = void 0;\n    this.socketIoEventHandler = {\n      connect: () => {//\n      },\n      disconnect: () => {//\n      },\n      connectToPlayCo: () => {\n        //\n        const reqData = {\n          eventName: 'onPlaycoConnect',\n          data: {\n            access_token: '',\n            csrf_token: ''\n          }\n        };\n      },\n      enterPlaylist: playlistId => {\n        const reqData = {\n          eventName: 'onPlaylistEnter',\n          data: {\n            playlist_id: 0\n          }\n        };\n      },\n      leavePlaylist: playlistId => {//\n      },\n      setPlaylistStatus: () => {\n        const reqData = {\n          eventName: 'onPlaylistSetStatus',\n          data: {\n            playlist_id: 0,\n            status: {}\n          }\n        };\n      },\n      onPlaylistUpdate: () => {//\n      }\n    };\n    if (playCoSocketIOHandlerInstance) return playCoSocketIOHandlerInstance;\n    this.socketIoMgr = new Manager('https://hyperion.mudev.cc', {\n      reconnectionDelayMax: 10000,\n      path: '/api/dev/ws'\n    });\n    this.socketIo = this.socketIoMgr.socket('/playco_ws', {});\n    playCoSocketIOHandlerInstance = this;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/playco/sio.ts"],"names":["Manager","playCoSocketIOHandlerInstance","PlayCoSocketIOHandler","constructor","socketIoMgr","socketIo","socketIoEventHandler","connect","disconnect","connectToPlayCo","reqData","eventName","data","access_token","csrf_token","enterPlaylist","playlistId","playlist_id","leavePlaylist","setPlaylistStatus","status","onPlaylistUpdate","reconnectionDelayMax","path","socket"],"mappings":"AAAA,SAAaA,OAAb,QAA4B,kBAA5B;AAEA,IAAIC,6BAAJ;AACA,OAAO,MAAMC,qBAAN,CAA4B;AAkD/BC,EAAAA,WAAW,GAAG;AAAA,SAjDdC,WAiDc;AAAA,SAhDdC,QAgDc;AAAA,SA9CdC,oBA8Cc,GA9CoC;AAC9CC,MAAAA,OAAO,EAAE,MAAM,CACX;AACH,OAH6C;AAI9CC,MAAAA,UAAU,EAAE,MAAM,CACd;AACH,OAN6C;AAQ9CC,MAAAA,eAAe,EAAE,MAAM;AACnB;AACA,cAAMC,OAAO,GAAG;AACZC,UAAAA,SAAS,EAAE,iBADC;AAEZC,UAAAA,IAAI,EAAE;AACFC,YAAAA,YAAY,EAAE,EADZ;AAEFC,YAAAA,UAAU,EAAE;AAFV;AAFM,SAAhB;AAOH,OAjB6C;AAmB9CC,MAAAA,aAAa,EAAGC,UAAD,IAAwB;AACnC,cAAMN,OAAO,GAAG;AACZC,UAAAA,SAAS,EAAE,iBADC;AAEZC,UAAAA,IAAI,EAAE;AACFK,YAAAA,WAAW,EAAE;AADX;AAFM,SAAhB;AAOH,OA3B6C;AA4B9CC,MAAAA,aAAa,EAAGF,UAAD,IAAwB,CACnC;AACH,OA9B6C;AAgC9CG,MAAAA,iBAAiB,EAAE,MAAM;AACrB,cAAMT,OAAO,GAAG;AACZC,UAAAA,SAAS,EAAE,qBADC;AAEZC,UAAAA,IAAI,EAAE;AACFK,YAAAA,WAAW,EAAE,CADX;AAEFG,YAAAA,MAAM,EAAE;AAFN;AAFM,SAAhB;AAOH,OAxC6C;AAyC9CC,MAAAA,gBAAgB,EAAE,MAAM,CACpB;AACH;AA3C6C,KA8CpC;AACV,QAAIpB,6BAAJ,EAAmC,OAAOA,6BAAP;AAEnC,SAAKG,WAAL,GAAmB,IAAIJ,OAAJ,CAAY,2BAAZ,EAAyC;AACxDsB,MAAAA,oBAAoB,EAAE,KADkC;AAExDC,MAAAA,IAAI,EAAE;AAFkD,KAAzC,CAAnB;AAIA,SAAKlB,QAAL,GAAgB,KAAKD,WAAL,CAAiBoB,MAAjB,CAAwB,YAAxB,EAAsC,EAAtC,CAAhB;AACAvB,IAAAA,6BAA6B,GAAG,IAAhC;AACH;;AA3D8B","sourcesContent":["import { io, Manager } from \"socket.io-client\";\r\n\r\nlet playCoSocketIOHandlerInstance: PlayCoSocketIOHandler;\r\nexport class PlayCoSocketIOHandler {\r\n    socketIoMgr: io.Manager\r\n    socketIo: io\r\n\r\n    socketIoEventHandler: Record<string, () => any> = {\r\n        connect: () => {\r\n            //\r\n        },\r\n        disconnect: () => {\r\n            //\r\n        },\r\n\r\n        connectToPlayCo: () => {\r\n            //\r\n            const reqData = {\r\n                eventName: 'onPlaycoConnect',\r\n                data: {\r\n                    access_token: '',\r\n                    csrf_token: '',\r\n                },\r\n            };\r\n        },\r\n\r\n        enterPlaylist: (playlistId: number) => {\r\n            const reqData = {\r\n                eventName: 'onPlaylistEnter',\r\n                data: {\r\n                    playlist_id: 0,\r\n\r\n                },\r\n            };\r\n        },\r\n        leavePlaylist: (playlistId: number) => {\r\n            //\r\n        },\r\n\r\n        setPlaylistStatus: () => {\r\n            const reqData = {\r\n                eventName: 'onPlaylistSetStatus',\r\n                data: {\r\n                    playlist_id: 0,\r\n                    status: {}\r\n                }\r\n            }\r\n        },\r\n        onPlaylistUpdate: () => {\r\n            //\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        if (playCoSocketIOHandlerInstance) return playCoSocketIOHandlerInstance;\r\n\r\n        this.socketIoMgr = new Manager('https://hyperion.mudev.cc', {\r\n            reconnectionDelayMax: 10000,\r\n            path: '/api/dev/ws',\r\n        });\r\n        this.socketIo = this.socketIoMgr.socket('/playco_ws', {})\r\n        playCoSocketIOHandlerInstance = this;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}