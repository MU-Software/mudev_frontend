{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Spinner from 'react-bootstrap/Spinner';\nimport FrostAPI from 'src/network/api';\nimport { PHButton } from 'src/ui/common/element/muButton';\nimport './main.css';\nimport { PlayCoPlaylistList } from './playlistList';\nimport { Playlist, PlaylistItem, PlaylistListener, PlaylistDetail } from './playlistResource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayCoRequireSignedIn = props => {\n  _s();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC774 \\uAE30\\uB2A5\\uC740 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD574\\uC694,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), \"\\uB85C\\uADF8\\uC778\\uC744 \\uD574 \\uC8FC\\uC138\\uC694.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n      onClick: () => navigate('/account/signin'),\n      variant: \"success\",\n      size: \"medium\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PlayCoRequireSignedIn, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PlayCoRequireSignedIn;\nexport const PlaycoMain = props => {\n  const tempPlaylistData = [new Playlist({\n    uuid: 0,\n    index: 0,\n    name: '테스트',\n    created_by_uuid: 0,\n    created_by_nick: '',\n    public_accessable: false,\n    public_modifiable: false,\n    current_playing_item_index: 1,\n    items: [],\n    blocked_at: '2022-04-14',\n    why_blocked: '테스트로 잠김'\n  }), new Playlist({\n    uuid: 0,\n    index: 0,\n    name: '테스트',\n    created_by_uuid: 0,\n    created_by_nick: '',\n    public_accessable: false,\n    public_modifiable: false,\n    current_playing_item_index: 1,\n    items: [new PlaylistItem({\n      uuid: 0,\n      index: 0,\n      name: 'q',\n      data: {},\n      added_by_uuid: 0,\n      added_by_nick: '',\n      link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\n      link_type: 'youtube',\n      link_id: '2Dw7NFm1ZfY',\n      current_listener: [new PlaylistListener({\n        uuid: 1,\n        name: '123'\n      }), new PlaylistListener({\n        uuid: 2,\n        name: '123'\n      }), new PlaylistListener({\n        uuid: 3,\n        name: '123'\n      })]\n    }), new PlaylistItem({\n      uuid: 0,\n      index: 0,\n      name: 'q',\n      data: {},\n      added_by_uuid: 0,\n      added_by_nick: '',\n      link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\n      link_type: 'youtube',\n      link_id: '2Dw7NFm1ZfY',\n      current_listener: [new PlaylistListener({\n        uuid: 4,\n        name: '123'\n      }), new PlaylistListener({\n        uuid: 5,\n        name: '123'\n      }), new PlaylistListener({\n        uuid: 6,\n        name: '123'\n      })]\n    })]\n  })];\n  const frostAPI = new FrostAPI();\n  const {\n    isSignedIn,\n    playlistData\n  } = this.state; // if isSignedIn is null, then frostAPI is refreshing the token.\n  // if isSignedIn is false, then we need to sign-in.\n  // else (if isSignedIn is true), then we can show the list of playlists.\n\n  let playCoBody = isSignedIn ? /*#__PURE__*/_jsxDEV(PlayCoPlaylistList, {\n    playlistList: this.state.playlistData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 7\n  }, this) : isSignedIn === false ? /*#__PURE__*/_jsxDEV(PlayCoRequireSignedIn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this); // let playCoBody = <PlayCoPlaylistList playlistList={this.state.playlistData} />\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playCoMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"PlayCO\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"playCoTitleHeaderSup\",\n          children: \"Alpha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C, \\uBA40\\uB9AC\\uC11C, \\uB2E4 \\uAC19\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), playCoBody]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n};\n_c2 = PlaycoMain;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlayCoRequireSignedIn\");\n$RefreshReg$(_c2, \"PlaycoMain\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/main.jsx"],"names":["React","useNavigate","Spinner","FrostAPI","PHButton","PlayCoPlaylistList","Playlist","PlaylistItem","PlaylistListener","PlaylistDetail","PlayCoRequireSignedIn","props","navigate","PlaycoMain","tempPlaylistData","uuid","index","name","created_by_uuid","created_by_nick","public_accessable","public_modifiable","current_playing_item_index","items","blocked_at","why_blocked","data","added_by_uuid","added_by_nick","link","link_type","link_id","current_listener","frostAPI","isSignedIn","playlistData","state","playCoBody"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport FrostAPI from 'src/network/api';\r\nimport { PHButton } from 'src/ui/common/element/muButton';\r\nimport './main.css';\r\n\r\nimport { PlayCoPlaylistList } from './playlistList';\r\nimport {\r\n  Playlist,\r\n  PlaylistItem,\r\n  PlaylistListener,\r\n  PlaylistDetail\r\n} from './playlistResource';\r\n\r\n\r\nconst PlayCoRequireSignedIn = (props) => {\r\n  const navigate = useNavigate();\r\n  return <aside>\r\n    <header>\r\n      <p>\r\n        이 기능은 로그인이 필요해요,<br />\r\n        로그인을 해 주세요.\r\n      </p>\r\n    </header>\r\n    <PHButton\r\n      onClick={() => navigate('/account/signin')}\r\n      variant='success'\r\n      size='medium'>\r\n      로그인\r\n    </PHButton>\r\n  </aside>;\r\n}\r\n\r\nexport const PlaycoMain = (props) => {\r\n  const tempPlaylistData = [\r\n    new Playlist({\r\n      uuid: 0,\r\n      index: 0,\r\n      name: '테스트',\r\n      created_by_uuid: 0,\r\n      created_by_nick: '',\r\n      public_accessable: false,\r\n      public_modifiable: false,\r\n      current_playing_item_index: 1,\r\n      items: [],\r\n      blocked_at: '2022-04-14',\r\n      why_blocked: '테스트로 잠김',\r\n    }),\r\n    new Playlist({\r\n      uuid: 0,\r\n      index: 0,\r\n      name: '테스트',\r\n      created_by_uuid: 0,\r\n      created_by_nick: '',\r\n      public_accessable: false,\r\n      public_modifiable: false,\r\n      current_playing_item_index: 1,\r\n      items: [\r\n        new PlaylistItem({\r\n          uuid: 0,\r\n          index: 0,\r\n          name: 'q',\r\n          data: {},\r\n          added_by_uuid: 0,\r\n          added_by_nick: '',\r\n          link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\r\n          link_type: 'youtube',\r\n          link_id: '2Dw7NFm1ZfY',\r\n          current_listener: [\r\n            new PlaylistListener({ uuid: 1, name: '123' }),\r\n            new PlaylistListener({ uuid: 2, name: '123' }),\r\n            new PlaylistListener({ uuid: 3, name: '123' })\r\n          ],\r\n        }),\r\n        new PlaylistItem({\r\n          uuid: 0,\r\n          index: 0,\r\n          name: 'q',\r\n          data: {},\r\n          added_by_uuid: 0,\r\n          added_by_nick: '',\r\n          link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\r\n          link_type: 'youtube',\r\n          link_id: '2Dw7NFm1ZfY',\r\n          current_listener: [\r\n            new PlaylistListener({ uuid: 4, name: '123' }),\r\n            new PlaylistListener({ uuid: 5, name: '123' }),\r\n            new PlaylistListener({ uuid: 6, name: '123' })\r\n          ],\r\n        }),\r\n      ],\r\n    }),\r\n  ];\r\n  const frostAPI = new FrostAPI();\r\n\r\n  const { isSignedIn, playlistData } = this.state;\r\n\r\n  // if isSignedIn is null, then frostAPI is refreshing the token.\r\n  // if isSignedIn is false, then we need to sign-in.\r\n  // else (if isSignedIn is true), then we can show the list of playlists.\r\n  let playCoBody = isSignedIn\r\n    ? <PlayCoPlaylistList playlistList={this.state.playlistData} />\r\n    : isSignedIn === false\r\n      ? <PlayCoRequireSignedIn />\r\n      : <Spinner animation=\"border\" role=\"status\">\r\n        {/* visually-hidden is Bootstrap's. */}\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>;\r\n  // let playCoBody = <PlayCoPlaylistList playlistList={this.state.playlistData} />\r\n\r\n  return <section className='playCoMain'>\r\n    < header >\r\n      <h2>PlayCO<sup className='playCoTitleHeaderSup'>Alpha</sup></h2>\r\n      <p>플레이리스트를, 멀리서, 다 같이</p>\r\n    </header >\r\n    {playCoBody}\r\n  </section >\r\n}\r\n"]},"metadata":{},"sourceType":"module"}