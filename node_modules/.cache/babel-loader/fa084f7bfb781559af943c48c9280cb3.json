{"ast":null,"code":"import React from'react';import{Form}from'react-bootstrap';import'./muFormText.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var PHFormText=function PHFormText(_ref){var className=_ref.className,defaultChildren=_ref.defaultChildren,children=_ref.children,showOnlyNeeded=_ref.showOnlyNeeded;if((typeof defaultChildren==='string'||defaultChildren instanceof String)&&defaultChildren.includes('\\n'))defaultChildren=/*#__PURE__*/_jsx(\"div\",{children:defaultChildren.split('\\n').map(function(value){return/*#__PURE__*/_jsxs(_Fragment,{children:[value,/*#__PURE__*/_jsx(\"br\",{})]});})});if((typeof children==='string'||children instanceof String)&&children.includes('\\n'))children=/*#__PURE__*/_jsx(\"div\",{children:children.split('\\n').map(function(value){return/*#__PURE__*/_jsxs(_Fragment,{children:[value,/*#__PURE__*/_jsx(\"br\",{})]});})});return/*#__PURE__*/_jsx(Form.Text,{className:(children?'text-danger ':'text-muted ')+'PHFormGroupText '+(className?className:''),children:children||defaultChildren||(showOnlyNeeded?'':\"\\xA0\")});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/common/element/muFormText.tsx"],"names":["React","Form","PHFormText","className","defaultChildren","children","showOnlyNeeded","String","includes","split","map","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CAEA,MAAO,kBAAP,C,6IASA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAmF,IAAhFC,CAAAA,SAAgF,MAAhFA,SAAgF,CAArEC,eAAqE,MAArEA,eAAqE,CAApDC,QAAoD,MAApDA,QAAoD,CAA1CC,cAA0C,MAA1CA,cAA0C,CAC3G,GAAI,CAAC,MAAQF,CAAAA,eAAR,GAA6B,QAA7B,EAAyCA,eAAe,WAAYG,CAAAA,MAArE,GAAgFH,eAAe,CAACI,QAAhB,CAAyB,IAAzB,CAApF,CACEJ,eAAe,cAAG,qBAAMA,eAAe,CAACK,KAAhB,CAAsB,IAAtB,EAA4BC,GAA5B,CAAgC,SAACC,KAAD,qBAAW,2BAAGA,KAAH,cAAS,aAAT,GAAX,EAAhC,CAAN,EAAlB,CAEF,GAAI,CAAC,MAAQN,CAAAA,QAAR,GAAsB,QAAtB,EAAkCA,QAAQ,WAAYE,CAAAA,MAAvD,GAAkEF,QAAQ,CAACG,QAAT,CAAkB,IAAlB,CAAtE,CACEH,QAAQ,cAAG,qBAAMA,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBC,GAArB,CAAyB,SAACC,KAAD,qBAAW,2BAAGA,KAAH,cAAS,aAAT,GAAX,EAAzB,CAAN,EAAX,CAEF,mBAAO,KAAC,IAAD,CAAM,IAAN,EACL,SAAS,CAAE,CAACN,QAAQ,CAAG,cAAH,CAAoB,aAA7B,EAA8C,kBAA9C,EAAoEF,SAAS,CAAGA,SAAH,CAAe,EAA5F,CADN,UAEJE,QAAQ,EAAKD,eAAe,GAAKE,cAAc,CAAG,EAAH,CAAQ,MAA3B,CAFxB,EAAP,CAID,CAXM","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport './muFormText.css';\r\n\r\ninterface PHFormTextPropTypes {\r\n  className?: string;\r\n  defaultChildren?: string;\r\n  children?: React.ReactNode;\r\n  showOnlyNeeded?: boolean;\r\n}\r\n\r\nexport const PHFormText = ({ className, defaultChildren, children, showOnlyNeeded }: PHFormTextPropTypes) => {\r\n  if ((typeof (defaultChildren) === 'string' || defaultChildren instanceof String) && defaultChildren.includes('\\n'))\r\n    defaultChildren = <div>{defaultChildren.split('\\n').map((value) => <>{value}<br /></>)}</div>;\r\n\r\n  if ((typeof (children) === 'string' || children instanceof String) && children.includes('\\n'))\r\n    children = <div>{children.split('\\n').map((value) => <>{value}<br /></>)}</div>;\r\n\r\n  return <Form.Text\r\n    className={(children ? 'text-danger ' : 'text-muted ') + 'PHFormGroupText ' + (className ? className : '')}>\r\n    {children || (defaultChildren || (showOnlyNeeded ? '' : '\\u00A0'))}\r\n  </Form.Text>\r\n};\r\n"]},"metadata":{},"sourceType":"module"}