{"ast":null,"code":"import _objectSpread from\"C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{Navbar,NavDropdown,Spinner}from'react-bootstrap';import Icon from'@mdi/react';import{mdiAccountCircle}from'@mdi/js';import'./topbar.css';// import TopBarLogo from './logo_hanshin.svg';\nimport TopBarLogo from'./mu_logo.png';import{AccountInfo}from'src/redux/modules/account/model';import{refreshAccessTokenActionCreatorAsync,signOutActionCreatorAsync}from'src/redux/modules/account/action_creator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TopBar=function TopBar(props){var navigate=useNavigate();var navBarContainerStyle=_objectSpread({},props.disableBlur?{}:{backdropFilter:'blur(12px)'});var accountInfo=useSelector(function(state){return state.accountReducer;});var dispatch=useDispatch();useEffect(function(){dispatch(refreshAccessTokenActionCreatorAsync());},[]);var goToSignIn=function goToSignIn(){return navigate('/account/signin');};var goToSignOut=function goToSignOut(){dispatch(signOutActionCreatorAsync());navigate('/');};return/*#__PURE__*/_jsx(\"div\",{className:\"muNavBarContainer\",style:navBarContainerStyle,children:/*#__PURE__*/_jsxs(Navbar,{className:\"muNavBar\",children:[/*#__PURE__*/_jsx(Navbar.Brand,{href:\"/\",className:\"muNavBarLogoContainer\",children:/*#__PURE__*/_jsx(\"img\",{src:TopBarLogo})}),/*#__PURE__*/_jsxs(NavDropdown,{align:\"end\",title:/*#__PURE__*/_jsx(Icon,{path:mdiAccountCircle}),className:\"muNavBarDropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Header,{className:\"muNavBarDropdownItem\",children:accountInfo.isFetching?/*#__PURE__*/_jsxs(\"div\",{className:\"muNavBarDropdownAccountInfoLoadingContainer\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",size:\"sm\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"muNavBarDropdownAccountInfoLoadingText\",children:\"\\uACC4\\uC815 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"})]}):accountInfo.isSignedIn?\"\\uC548\\uB155\\uD558\\uC138\\uC694, \".concat(accountInfo.nick,\"\\uB2D8!\"):'로그인을 해 주세요!'}),accountInfo.isSignedIn&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavDropdown.Divider,{className:\"muNavBarDropdownItem\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{className:\"muNavBarDropdownItem\",href:\"#\",onClick:function onClick(){return navigate('/account/setting');},children:\"\\uACC4\\uC815 \\uC124\\uC815\"})]}),/*#__PURE__*/_jsx(NavDropdown.Divider,{className:\"muNavBarDropdownItem\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{className:\"muNavBarDropdownItem\",href:\"#\",onClick:accountInfo.isSignedIn?goToSignOut:goToSignIn,children:accountInfo.isSignedIn?'로그아웃':'로그인'})]})]})});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/util/topbar.jsx"],"names":["React","useEffect","useNavigate","useSelector","useDispatch","Navbar","NavDropdown","Spinner","Icon","mdiAccountCircle","TopBarLogo","AccountInfo","refreshAccessTokenActionCreatorAsync","signOutActionCreatorAsync","TopBar","props","navigate","navBarContainerStyle","disableBlur","backdropFilter","accountInfo","state","accountReducer","dispatch","goToSignIn","goToSignOut","isFetching","isSignedIn","nick"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Navbar, NavDropdown, Spinner } from 'react-bootstrap';\r\n\r\nimport Icon from '@mdi/react';\r\nimport { mdiAccountCircle } from '@mdi/js';\r\n\r\nimport './topbar.css';\r\n// import TopBarLogo from './logo_hanshin.svg';\r\nimport TopBarLogo from './mu_logo.png';\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\nimport {\r\n  refreshAccessTokenActionCreatorAsync,\r\n  signOutActionCreatorAsync\r\n} from 'src/redux/modules/account/action_creator';\r\n\r\nexport const TopBar: React.FC = (props: {\r\n  disableBlur?: boolean;\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const navBarContainerStyle = { ...(props.disableBlur ? {} : { backdropFilter: 'blur(12px)', }), };\r\n  const accountInfo: AccountInfo = useSelector(state => state.accountReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshAccessTokenActionCreatorAsync())\r\n  }, []);\r\n\r\n  const goToSignIn = () => navigate('/account/signin');\r\n  const goToSignOut = () => {\r\n    dispatch(signOutActionCreatorAsync());\r\n    navigate('/');\r\n  };\r\n\r\n  return <div className='muNavBarContainer' style={navBarContainerStyle}>\r\n    <Navbar className='muNavBar'>\r\n      <Navbar.Brand href='/' className='muNavBarLogoContainer'>\r\n        <img src={TopBarLogo} />\r\n      </Navbar.Brand>\r\n\r\n      <NavDropdown align='end' title={<Icon path={mdiAccountCircle} />} className='muNavBarDropdown'>\r\n        <NavDropdown.Header className='muNavBarDropdownItem'>{\r\n          accountInfo.isFetching\r\n            ? <div className='muNavBarDropdownAccountInfoLoadingContainer'>\r\n              <Spinner animation='border' role='status' size='sm'>\r\n                <span className='visually-hidden'>Loading...</span>\r\n              </Spinner>\r\n              <div className='muNavBarDropdownAccountInfoLoadingText'>\r\n                계정 정보를 불러오는 중입니다...\r\n              </div>\r\n            </div>\r\n            : accountInfo.isSignedIn ? `안녕하세요, ${accountInfo.nick}님!` : '로그인을 해 주세요!'\r\n        }</NavDropdown.Header>\r\n        {\r\n          accountInfo.isSignedIn && <>\r\n            <NavDropdown.Divider className='muNavBarDropdownItem' />\r\n            <NavDropdown.Item\r\n              className='muNavBarDropdownItem'\r\n              href='#'\r\n              onClick={() => navigate('/account/setting')}>\r\n              계정 설정\r\n            </NavDropdown.Item>\r\n          </>\r\n        }\r\n        <NavDropdown.Divider className='muNavBarDropdownItem' />\r\n        <NavDropdown.Item\r\n          className='muNavBarDropdownItem'\r\n          href='#'\r\n          onClick={accountInfo.isSignedIn ? goToSignOut : goToSignIn}>\r\n          {accountInfo.isSignedIn ? '로그아웃' : '로그인'}\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n\r\n    </Navbar>\r\n  </div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}