{"ast":null,"code":"import _slicedToArray from\"C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{OverlayTrigger,Tooltip,Button}from'react-bootstrap';import ReactPlayer from'react-player';import Icon from'@mdi/react';import{mdiPlus,mdiTools,mdiAccountCircle,mdiRefresh,mdiPlayCircle,mdiDelete}from'@mdi/js';import{ListRow}from'../../common/element/muListRow';import{Divider}from'../../common/element/divider';import{PHButton}from'../../common/element/muButton';import{PHFormText}from'src/ui/common/element/muFormText';import{PHAlertMessageBox}from'src/ui/common/element/muAlertMsgBox';import{YoutubeThumbnail}from'../../common/element/util/youtubeThumbnail';import{PlaylistControlModal}from'./element/playlistControlModal';import{PlaylistItem,Playlist// PlaylistConfig\n}from'./playco/model';import'./playlistDetailPage.css';import{PlayCoAPI}from'./playco/api';import{PlayCoSocketIOHandler}from'./playco/sio';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var isNumeric=function isNumeric(val){return /^\\d+$/.test(val);};export var PlaylistDetailDummyListener=function PlaylistDetailDummyListener(){return/*#__PURE__*/_jsx(\"div\",{style:{height:'16pt'}});};export var PlaylistDetailListener=function PlaylistDetailListener(props){return/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"bottom\",overlay:function overlay(tooltipProps){return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({},tooltipProps),{},{children:props.nick}));},children:/*#__PURE__*/_jsx(Icon,{path:mdiAccountCircle,size:\"16pt\"})});};export var PlaylistDetailItem=function PlaylistDetailItem(props){var _props$selected,_props$playlistItemPa;var isSelected=(_props$selected=props.selected)!==null&&_props$selected!==void 0?_props$selected:false;return/*#__PURE__*/_jsxs(ListRow,{onClick:isSelected?null:props.onClickFunc,className:\"playCoPlaylistDetailListItem\",itemWidth:[25,70,5],style:_objectSpread({// This cannot be moved to css,\n// as we have to overwrite the element style of ListRow.\nalignItems:'center',marginLeft:'0',marginRight:'0',borderRadius:'0.3rem'},isSelected?{border:'none',outline:'1px solid rgba(255, 255, 255, 1)',backgroundColor:'rgba(0, 0, 0, 0.4)'}:{border:'none',outline:'none'}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListItemThumbnailContainer\",children:/*#__PURE__*/_jsx(YoutubeThumbnail,{youtubeId:props.playlistItemData.link_id})}),/*#__PURE__*/_jsxs(\"div\",{className:\"playCoPlaylistDetailListItemInfoContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListItemTitle\",children:props.playlistItemData.name}),/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListItemListenerListContainer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListItemListenerList\",children:((_props$playlistItemPa=props.playlistItemParticipantStatusData)===null||_props$playlistItemPa===void 0?void 0:_props$playlistItemPa.length)?props.playlistItemParticipantStatusData.map(function(value,index){var _value$data;return/*#__PURE__*/_jsx(PlaylistDetailListener,{nick:value.nickname,imgUrl:(_value$data=value.data)===null||_value$data===void 0?void 0:_value$data.img_url},\"playco-playlist-detail-listitem-listener-\".concat(index));}):/*#__PURE__*/_jsx(PlaylistDetailDummyListener,{},\"playco-playlist-detail-listitem-listener-0\")})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{variant:\"link\",style:{color:'var(--color)'},onClick:function onClick(e){e.stopPropagation();props.onDeleteBtnClickFunc();},children:/*#__PURE__*/_jsx(Icon,{path:mdiDelete,size:\"1.75rem\"})})})]});};export var PlaylistDetail=function PlaylistDetail(props){var _useState=useState({newItemUrlTextFieldValue:'',newItemUrlNotUsableReason:''}),_useState2=_slicedToArray(_useState,2),playlistDetailState=_useState2[0],setPlaylistDetailState=_useState2[1];var onAddPlaylistItemBtnClick=function onAddPlaylistItemBtnClick(){props.addPlaylistItemFunc(playlistDetailState.newItemUrlTextFieldValue).then(function(result){return setPlaylistDetailState(_objectSpread(_objectSpread({},playlistDetailState),result!==null&&result!==void 0?result:{}));});};return/*#__PURE__*/_jsxs(\"aside\",{className:\"playCoPlaylistDetailList\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"playCoPlaylistDetailListTitleContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListTitle\",children:props.playlistData.name}),/*#__PURE__*/_jsx(OverlayTrigger,{placement:\"bottom\",overlay:function overlay(tooltipProps){return/*#__PURE__*/_jsx(Tooltip,_objectSpread(_objectSpread({},tooltipProps),{},{className:\"playCoPlaylistDetailListRefreshTooltip\",children:\"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uC0C8\\uB85C\\uACE0\\uCE68\"}));},children:/*#__PURE__*/_jsx(Button,{className:\"rounded-circle playCoPlaylistDetailListRefreshButton\",variant:\"primary\",style:{padding:'0.05rem'},disabled:props.disabled,onClick:props.refreshPlaylistDataFunc,children:/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailListRefreshButtonIconContainer\",children:/*#__PURE__*/_jsx(Icon,{path:mdiRefresh,size:\"1.75rem\"})})})})]})}),/*#__PURE__*/_jsx(Divider,{style:{margin:'unset',marginLeft:'0',marginRight:'0',marginTop:'1.25rem',marginBottom:'1.25rem',width:'100%'}}),props.socketIoConnectionStatusState&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PHFormText,{showOnlyNeeded:true,children:props.socketIoConnectionStatusState}),/*#__PURE__*/_jsx(Divider,{style:{marginLeft:0,marginRight:0,marginTop:'1rem',marginBottom:'1rem',width:'100%'}})]}),/*#__PURE__*/_jsx(\"input\",{title:\"Add item on playlist\",placeholder:\"\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uCD94\\uAC00\\uD560 URL\",className:\"playCoPlaylistDetailAddTextField\",disabled:props.disabled,value:playlistDetailState.newItemUrlTextFieldValue,onChange:function onChange(evt){return setPlaylistDetailState(_objectSpread(_objectSpread({},playlistDetailState),{},{newItemUrlTextFieldValue:evt.target.value,newItemUrlNotUsableReason:''}));}}),/*#__PURE__*/_jsx(PHFormText,{showOnlyNeeded:true,children:playlistDetailState.newItemUrlNotUsableReason}),/*#__PURE__*/_jsxs(\"div\",{className:\"playCoPlaylistDetailBtnGroup\",children:[/*#__PURE__*/_jsxs(PHButton,{smaller:true,variant:\"warning\",disabled:props.disabled,onClick:function onClick(){return props.setPlaylistModifyModalShowStateFunc(true);},children:[/*#__PURE__*/_jsx(Icon,{path:mdiTools,size:\"1.1rem\"}),\"\\xA0\\xA0\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uC124\\uC815\"]}),/*#__PURE__*/_jsxs(PHButton,{smaller:true,variant:\"primary\",disabled:props.disabled,onClick:onAddPlaylistItemBtnClick,children:[/*#__PURE__*/_jsx(Icon,{path:mdiPlus,size:\"1.1rem\"}),\"\\xA0\\xA0\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uCD94\\uAC00\\uD558\\uAE30\"]})]}),/*#__PURE__*/_jsx(Divider,{style:{margin:'unset',marginLeft:'0',marginRight:'0',marginTop:'1.25rem',marginBottom:'1.25rem',width:'100%'}}),/*#__PURE__*/_jsx(\"div\",{children:props.playlistData.items.length?props.playlistData.items.map(function(value,index){var _props$participantSta;return/*#__PURE__*/_jsx(PlaylistDetailItem,{onClickFunc:props.disabled?function(){/* */}:function(){return props.setPlaylistCurrentPlayingStateFunc(index);},onDeleteBtnClickFunc:props.disabled?function(){/* */}:function(){return props.deletePlaylistItemFunc(index);},playlistItemData:value,playlistItemParticipantStatusData:(_props$participantSta=props.participantStatus)===null||_props$participantSta===void 0?void 0:_props$participantSta.get(index),selected:index===props.currentPlayingIndex},\"playco-playlist-detail-listitem-\".concat(value.uuid));}):/*#__PURE__*/_jsx(ListRow,{style:{width:'100%',marginRight:'0',marginLeft:'0',border:'none'},children:\"\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uC544\\uBB34 \\uAC83\\uB3C4 \\uC5C6\\uC5B4\\uC694...\"})})]});};export var PlaylistDetailPlayer=function PlaylistDetailPlayer(props){var playerConfig={youtube:{playerVars:{autoplay:props.autoplay?1:0,loop:props.loopMode===1?1:0,showinfo:1,controls:1}}};return/*#__PURE__*/_jsxs(\"aside\",{className:\"playCoPlaylistDetailPlayerAside\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"playCoPlaylistDetailPlayerContainer\",children:/*#__PURE__*/_jsx(ReactPlayer,{controls:true,pip:true,className:\"playCoPlaylistDetailPlayer\",width:\"100%\",height:\"100%\",config:playerConfig,url:props.targetUrl,loop:props.loopMode===1,playing:props.autoplay,onEnded:props.loopMode?props.onPlayerEndedFunc:null})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"playCoPlaylistDetailPlayerBtnGroup\",children:[/*#__PURE__*/_jsxs(PHButton,{variant:props.autoplay?'primary':'outline-primary',onClick:function onClick(){return props.setAutoplayStateFunc(!props.autoplay);},children:[/*#__PURE__*/_jsx(Icon,{path:mdiPlayCircle,size:\"1.1rem\"}),\"\\xA0\\xA0\\uC790\\uB3D9 \\uC7AC\\uC0DD\"]}),/*#__PURE__*/_jsxs(PHButton,{variant:props.loopMode===0?'outline-primary':'primary',onClick:props.setLoopModeStateFunc,children:[/*#__PURE__*/_jsx(Icon,{path:mdiRefresh,size:\"1.1rem\"}),\"\\xA0\\xA0\",props.loopMode===0?'반복  해제됨'// loopMode === 0\n:props.loopMode===1?'한곡 반복 중'// loopMode === 1\n:props.loopMode===2?'전곡 반복 중'// loopMode === 2\n:'전곡 한번만 재생 중'// loopMode === 3\n]})]})]});};export var PlayCoPlaylistDetail=function PlayCoPlaylistDetail(){var _playlistDetailRootSt;var params=useParams();var navigate=useNavigate();var _useState3=useState({playlistData:new Playlist({uuid:-1,index:0,name:'정보를 불러오는 중...',public_accessable:false,public_modifiable:false,public_item_appendable:false,public_item_orderable:false,public_item_deletable:false,allow_duplicate:false,items:[new PlaylistItem({uuid:-1,index:0,name:'정보를 불러오는 중이에요, 잠시만 기다려주세요...',data:{},added_by_uuid:-1,added_by_nick:'',link:'',link_type:'',link_id:'',current_listener:[]})]}),participantStatus:new Map(),showPlaylistModifyModal:false,showAlertMessageBoxModal:false,alertMessageBoxModalData:{title:'',body:'',onAcceptBtnClick:function onAcceptBtnClick(){/* */}},autoplay:true,// 0: loop disabled\n// 1: loop one item\n// 2: loop all items in playlist, and loop again if the last item in playlist played.\n// 3: loop all items in playlist, and stop if the last item in playlist played.\nloopMode:3,currentPlayingIndex:0,currentPlayingUrl:'',isFirstInitialized:false,isAccountFetching:false,isPlaylistFetching:false,socketIoConnectionStatus:''}),_useState4=_slicedToArray(_useState3,2),playlistDetailRootState=_useState4[0],setPlaylistDetailRootState=_useState4[1];var defaultAlertMsgModalData={title:'재생목록을 불러올 수 없어요...',body:'',onAcceptBtnClick:function onAcceptBtnClick(){return navigate('/playco');}};var playCoSocketIO=new PlayCoSocketIOHandler();var refreshPlaylistData=function refreshPlaylistData(){if(playlistDetailRootState.isAccountFetching||playlistDetailRootState.isPlaylistFetching)return;setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:true});});// Fetch playlist from API\nPlayCoAPI.getPlaylistInfo(params.playlistId).then(function(result){return setPlaylistDetailRootState(function(prevState){var _result$items$0$link,_result$items$;return _objectSpread(_objectSpread({},prevState),{},{isFirstInitialized:true,isPlaylistFetching:false,playlistData:result},prevState.playlistData.uuid===-1||prevState.playlistData.items.length===0?{currentPlayingUrl:(_result$items$0$link=(_result$items$=result.items[0])===null||_result$items$===void 0?void 0:_result$items$.link)!==null&&_result$items$0$link!==void 0?_result$items$0$link:'',currentPlayingIndex:0}:{});});},function(reason){return setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:false,showAlertMessageBoxModal:true,alertMessageBoxModalData:_objectSpread(_objectSpread({},defaultAlertMsgModalData),{},{body:reason.message})});});});};var setPlaylistLoopModeState=function setPlaylistLoopModeState(){setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{loopMode:playlistDetailRootState.loopMode<=0?3:playlistDetailRootState.loopMode-1}));};var setPlaylistModifyModalShowState=function setPlaylistModifyModalShowState(newState){if(!playlistDetailRootState.playlistData||playlistDetailRootState.playlistData.uuid<=0||playlistDetailRootState.isAccountFetching||playlistDetailRootState.isPlaylistFetching)return;setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{showPlaylistModifyModal:newState}));// Re-fetch playlist data when config modal closed.\nif(!newState)refreshPlaylistData();};var setPlaylistCurrentPlayingState=function setPlaylistCurrentPlayingState(newIndex){if(0>newIndex||newIndex>playlistDetailRootState.playlistData.items.length-1)return;var newPlayerLink=playlistDetailRootState.playlistData.items!=0?playlistDetailRootState.playlistData.items[newIndex].link:'';setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{currentPlayingIndex:newIndex,currentPlayingUrl:newPlayerLink}));if(playlistDetailRootState.isFirstInitialized&&playCoSocketIO.connected){playCoSocketIO.setSessionCurrentPlaying(playlistDetailRootState.playlistData.uuid,newIndex);}};var setPlaylistCurrentPlayingStateToNext=function setPlaylistCurrentPlayingStateToNext(){if(playlistDetailRootState.currentPlayingIndex+1>=playlistDetailRootState.playlistData.items.length){if(playlistDetailRootState.loopMode===2)setPlaylistCurrentPlayingState(0);return;}setPlaylistCurrentPlayingState(playlistDetailRootState.currentPlayingIndex+1);};var addPlaylistItem=function addPlaylistItem(newItemUrl){var _newItemUrl;if(!playlistDetailRootState.playlistData||playlistDetailRootState.playlistData.uuid<=0||playlistDetailRootState.isAccountFetching||playlistDetailRootState.isPlaylistFetching)return;newItemUrl=((_newItemUrl=newItemUrl)!==null&&_newItemUrl!==void 0?_newItemUrl:'').trim();if(!newItemUrl)return new Promise(function(resolve){return resolve({newItemUrlTextFieldValue:newItemUrl,newItemUrlNotUsableReason:'재생목록에 추가할 URL을 적어주세요!'});});setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:true});});return PlayCoAPI.insertPlaylistItem(playlistDetailRootState.playlistData.uuid,newItemUrl,playlistDetailRootState.playlistData.hash).then(function(result){setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:false});});if(!result.success){var errorMsg=null;var shouldUrlTextFieldCleared=false;if(result.subCode==='resource.forbidden'){errorMsg='재생목록에 추가할 수 있는 권한이 없어요.';}else if(result.subCode==='resource.prediction_failed'){var _result$data$predicti,_result$data$predicti2,_result$data$predicti3;if((_result$data$predicti=result.data.prediction_failed_reason)===null||_result$data$predicti===void 0?void 0:_result$data$predicti.includes('playlist_outdated')){errorMsg='재생목록에 수정사항이 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';}else if((_result$data$predicti2=result.data.prediction_failed_reason)===null||_result$data$predicti2===void 0?void 0:_result$data$predicti2.includes('link_not_implemented')){shouldUrlTextFieldCleared=true;errorMsg='지금은 YouTube 영상만 지원해요,\\n다른 영상의 URL을 시도해주세요.';}else if((_result$data$predicti3=result.data.prediction_failed_reason)===null||_result$data$predicti3===void 0?void 0:_result$data$predicti3.includes('link_data_fetch_failed')){errorMsg='영상의 정보를 확인할 수 없어요,\\n다른 URL을 시도하시거나 10분 후 다시 시도해주세요.';}else{errorMsg='알 수 없는 문제가 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';}}else if(result.subCode==='resource.unique_failed'){errorMsg='이미 재생목록에 해당 영상이 포함되어 있어요,\\n';errorMsg+='만약 재생목록에 중복해서 포함하고 싶으시다면\\n';errorMsg+='\"재생목록 설정\"에서 설정을 바꿔주세요.';}else if(result.subCode==='resource.not_found'){// Show an alertbox and kick to main screen\nsetPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:false,showAlertMessageBoxModal:true,alertMessageBoxModalData:_objectSpread(_objectSpread({},defaultAlertMsgModalData),{},{body:/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294 \\uC7AC\\uC0DD\\uBAA9\\uB85D ID\\uC785\\uB2C8\\uB2E4,\",/*#__PURE__*/_jsx(\"br\",{}),\"ID\\uB97C \\uD655\\uC778 \\uD6C4 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"]})})});});}else{errorMsg='알 수 없는 문제가 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';}// Don't erase url input field, so that user can try once more.\nreturn _objectSpread(_objectSpread({},shouldUrlTextFieldCleared?{newItemUrlTextFieldValue:''}:{}),{},{newItemUrlNotUsableReason:errorMsg});}refreshPlaylistData();return{newItemUrlTextFieldValue:'',newItemUrlNotUsableReason:''};},function(reason){setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:false});});return{newItemUrlNotUsableReason:reason.message};});};var deletePlaylistItem=function deletePlaylistItem(index){if(!playlistDetailRootState.playlistData||playlistDetailRootState.playlistData.uuid<=0||playlistDetailRootState.isAccountFetching||playlistDetailRootState.isPlaylistFetching)return;setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isPlaylistFetching:true});});PlayCoAPI.deletePlaylistItem(playlistDetailRootState.playlistData.uuid,index,playlistDetailRootState.playlistData.hash).then(function(result){if(playlistDetailRootState.currentPlayingIndex>=index){// Fetch playlist items after deleting item,\n// and set playlist data while doing minus 1 on currentPlayingIndex not to change currentPlayingUrl,\n// as \"one item before current playing item\" or \"current playing item\" is gone, and we don't want to refresh player.\nsetPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currentPlayingIndex:prevState.currentPlayingIndex-1});});}else{// Update playlist data state after deleting item and ignore it.\n// Deleting item after current playing item won't affect our player.\n}refreshPlaylistData();},function(reason){setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{newItemUrlNotUsableReason:reason.message,isPlaylistFetching:false});});});};// Socket.IO specific event handler\nvar onPlaylistUserStateModified=function onPlaylistUserStateModified(newRoomState){// Convert PlayCoRoomType to PlaylistParticipantStateType\nvar newParticipantState=new Map();if(playlistDetailRootState.playlistData.uuid!=newRoomState.playlist_id)return;for(var _i=0,_Object$entries=Object.entries(newRoomState.participants);_i<_Object$entries.length;_i++){var _newParticipantState$;var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),nickname=_Object$entries$_i[0],roomStatus=_Object$entries$_i[1];var currentStateIndex=roomStatus.status.currently_playing;if(!newParticipantState.has(currentStateIndex)){newParticipantState.set(currentStateIndex,[]);}(_newParticipantState$=newParticipantState.get(currentStateIndex))===null||_newParticipantState$===void 0?void 0:_newParticipantState$.push({nickname:nickname,data:roomStatus.data});}setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{participantStatus:newParticipantState});});};var onSocketIOStatusChanged=function onSocketIOStatusChanged(newSIOStateMessage){setPlaylistDetailRootState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{socketIoConnectionStatus:newSIOStateMessage});});};playCoSocketIO.onPlayCoConnected=function(){// Try to connect SocketIO and fetch participant status.\nplayCoSocketIO.enterPlaylist(playlistDetailRootState.playlistData.uuid,playlistDetailRootState.currentPlayingIndex);};playCoSocketIO.onSocketIOStatusChanged=onSocketIOStatusChanged;playCoSocketIO.onPlaylistModified=refreshPlaylistData;playCoSocketIO.onUserStatusChanged=onPlaylistUserStateModified;useEffect(function(){// Check if params.playlistId is a valid numeric value\nif(!isNumeric(params.playlistId)){setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{showAlertMessageBoxModal:true,alertMessageBoxModalData:_objectSpread(_objectSpread({},defaultAlertMsgModalData),{},{body:/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC740 \\uC7AC\\uC0DD\\uBAA9\\uB85D ID\\uC785\\uB2C8\\uB2E4,\",/*#__PURE__*/_jsx(\"br\",{}),\"ID\\uB97C \\uD655\\uC778 \\uD6C4 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"]})})}));return;}// Initialize and fetch playlist data\nif((!playlistDetailRootState.playlistData||playlistDetailRootState.playlistData.uuid<=0)&&!playlistDetailRootState.isAccountFetching&&!playlistDetailRootState.isPlaylistFetching)refreshPlaylistData();return function(){// Page unmounted\n// Try to leave SocketIO room.\n// playCoSocketIO.leavePlaylist(playlistDetailRootState.playlistData.uuid);\nplayCoSocketIO.disconnect(true);};},[]);useEffect(function(){if(playlistDetailRootState.isFirstInitialized){playCoSocketIO.connect();}},[playlistDetailRootState.isFirstInitialized]);return/*#__PURE__*/_jsxs(\"section\",{className:\"playCoPlaylistDetailPage\",children:[/*#__PURE__*/_jsx(PHAlertMessageBox,_objectSpread({variant:\"error\",modalShowState:playlistDetailRootState.showAlertMessageBoxModal,setModalShowState:function setModalShowState(newState){return setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{showAlertMessageBoxModal:newState}));}},(_playlistDetailRootSt=playlistDetailRootState.alertMessageBoxModalData)!==null&&_playlistDetailRootSt!==void 0?_playlistDetailRootSt:{})),/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"PlayCO\",/*#__PURE__*/_jsx(\"sup\",{className:\"playCoTitleHeaderSup\",children:\"Alpha\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C, \\uBA40\\uB9AC\\uC11C, \\uB2E4 \\uAC19\\uC774\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"playCoPlaylistDetail\",children:[/*#__PURE__*/_jsx(PlaylistControlModal,{initialModalState:playlistDetailRootState.playlistData,modalShowState:playlistDetailRootState.showPlaylistModifyModal,setModalShowState:setPlaylistModifyModalShowState}),/*#__PURE__*/_jsx(PlaylistDetail,{playlistData:playlistDetailRootState.playlistData,participantStatus:playlistDetailRootState.participantStatus,currentPlayingIndex:playlistDetailRootState.currentPlayingIndex,socketIoConnectionStatusState:playlistDetailRootState.socketIoConnectionStatus,disabled:!playlistDetailRootState.playlistData||playlistDetailRootState.playlistData.uuid<=0||playlistDetailRootState.isAccountFetching||playlistDetailRootState.isPlaylistFetching,setPlaylistModifyModalShowStateFunc:setPlaylistModifyModalShowState,setPlaylistCurrentPlayingStateFunc:setPlaylistCurrentPlayingState,addPlaylistItemFunc:addPlaylistItem,deletePlaylistItemFunc:deletePlaylistItem,refreshPlaylistDataFunc:refreshPlaylistData}),/*#__PURE__*/_jsx(PlaylistDetailPlayer,{targetUrl:playlistDetailRootState.currentPlayingUrl,loopMode:playlistDetailRootState.loopMode,setLoopModeStateFunc:setPlaylistLoopModeState,autoplay:playlistDetailRootState.autoplay,setAutoplayStateFunc:function setAutoplayStateFunc(newState){return setPlaylistDetailRootState(_objectSpread(_objectSpread({},playlistDetailRootState),{},{autoplay:newState}));},onPlayerEndedFunc:setPlaylistCurrentPlayingStateToNext})]})]});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/playlistDetailPage.tsx"],"names":["React","useState","useEffect","useParams","useNavigate","OverlayTrigger","Tooltip","Button","ReactPlayer","Icon","mdiPlus","mdiTools","mdiAccountCircle","mdiRefresh","mdiPlayCircle","mdiDelete","ListRow","Divider","PHButton","PHFormText","PHAlertMessageBox","YoutubeThumbnail","PlaylistControlModal","PlaylistItem","Playlist","PlayCoAPI","PlayCoSocketIOHandler","isNumeric","val","test","PlaylistDetailDummyListener","height","PlaylistDetailListener","props","tooltipProps","nick","PlaylistDetailItem","isSelected","selected","onClickFunc","alignItems","marginLeft","marginRight","borderRadius","border","outline","backgroundColor","playlistItemData","link_id","name","playlistItemParticipantStatusData","length","map","value","index","nickname","data","img_url","color","e","stopPropagation","onDeleteBtnClickFunc","PlaylistDetail","newItemUrlTextFieldValue","newItemUrlNotUsableReason","playlistDetailState","setPlaylistDetailState","onAddPlaylistItemBtnClick","addPlaylistItemFunc","then","result","playlistData","padding","disabled","refreshPlaylistDataFunc","margin","marginTop","marginBottom","width","socketIoConnectionStatusState","evt","target","setPlaylistModifyModalShowStateFunc","items","setPlaylistCurrentPlayingStateFunc","deletePlaylistItemFunc","participantStatus","get","currentPlayingIndex","uuid","PlaylistDetailPlayer","playerConfig","youtube","playerVars","autoplay","loop","loopMode","showinfo","controls","targetUrl","onPlayerEndedFunc","setAutoplayStateFunc","setLoopModeStateFunc","PlayCoPlaylistDetail","params","navigate","public_accessable","public_modifiable","public_item_appendable","public_item_orderable","public_item_deletable","allow_duplicate","added_by_uuid","added_by_nick","link","link_type","current_listener","Map","showPlaylistModifyModal","showAlertMessageBoxModal","alertMessageBoxModalData","title","body","onAcceptBtnClick","currentPlayingUrl","isFirstInitialized","isAccountFetching","isPlaylistFetching","socketIoConnectionStatus","playlistDetailRootState","setPlaylistDetailRootState","defaultAlertMsgModalData","playCoSocketIO","refreshPlaylistData","prevState","getPlaylistInfo","playlistId","reason","message","setPlaylistLoopModeState","setPlaylistModifyModalShowState","newState","setPlaylistCurrentPlayingState","newIndex","newPlayerLink","connected","setSessionCurrentPlaying","setPlaylistCurrentPlayingStateToNext","addPlaylistItem","newItemUrl","trim","Promise","resolve","insertPlaylistItem","hash","success","errorMsg","shouldUrlTextFieldCleared","subCode","prediction_failed_reason","includes","deletePlaylistItem","onPlaylistUserStateModified","newRoomState","newParticipantState","playlist_id","Object","entries","participants","roomStatus","currentStateIndex","status","currently_playing","has","set","push","onSocketIOStatusChanged","newSIOStateMessage","onPlayCoConnected","enterPlaylist","onPlaylistModified","onUserStatusChanged","disconnect","connect"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport Icon from '@mdi/react';\r\nimport { mdiPlus, mdiTools, mdiAccountCircle, mdiRefresh, mdiPlayCircle, mdiDelete } from '@mdi/js';\r\n\r\nimport { ListRow } from '../../common/element/muListRow';\r\nimport { Divider } from '../../common/element/divider';\r\nimport { PHButton } from '../../common/element/muButton';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport { PHAlertMessageBox } from 'src/ui/common/element/muAlertMsgBox';\r\nimport { YoutubeThumbnail } from '../../common/element/util/youtubeThumbnail';\r\n\r\nimport { FrostError } from 'src/common/error';\r\nimport { PlaylistControlModal } from './element/playlistControlModal';\r\nimport {\r\n  PlaylistListener,\r\n  PlaylistItem,\r\n  Playlist,\r\n  // PlaylistConfig\r\n} from './playco/model';\r\nimport './playlistDetailPage.css';\r\nimport { PlayCoAPI } from './playco/api';\r\nimport { PlayCoSocketIOHandler, PlayCoRoomType } from './playco/sio';\r\n\r\ntype PlaylistItemParticipantStateType = Array<{\r\n  nickname: string;\r\n  data?: Record<string, unknown>;\r\n}>;\r\n\r\ntype PlaylistParticipantStateType = Map<number, PlaylistItemParticipantStateType>;\r\n\r\ntype PlayCoPlaylistDetailStateType = {\r\n  playlistData: Playlist;\r\n  participantStatus: PlaylistParticipantStateType;\r\n  showPlaylistModifyModal: boolean;\r\n  showAlertMessageBoxModal: boolean;\r\n  alertMessageBoxModalData: { title: string; body: string; onAcceptBtnClick: () => void; };\r\n\r\n  autoplay: boolean;\r\n  loopMode: number;\r\n  currentPlayingIndex: number;\r\n  currentPlayingUrl: string;\r\n\r\n  isAccountFetching: boolean;\r\n  isPlaylistFetching: boolean;\r\n\r\n  socketIoConnectionStatus: string;\r\n};\r\n\r\nconst isNumeric = (val) => (/^\\d+$/.test(val));\r\n\r\nexport const PlaylistDetailDummyListener: React.FC = () => <div style={{ height: '16pt' }} />;\r\nexport const PlaylistDetailListener: React.FC = (props: { nick: string; imgUrl?: string; }) => {\r\n  return <OverlayTrigger\r\n    placement='bottom'\r\n    overlay={(tooltipProps) => <Tooltip {...tooltipProps}>{props.nick}</Tooltip>} >\r\n    <Icon path={mdiAccountCircle} size='16pt' />\r\n  </OverlayTrigger>;\r\n};\r\n\r\nexport const PlaylistDetailItem: React.FC = (props: {\r\n  playlistItemData: PlaylistItem;\r\n  playlistItemParticipantStatusData?: PlaylistItemParticipantStateType;\r\n  onClickFunc: () => void;\r\n  onDeleteBtnClickFunc: () => void;\r\n  selected?: boolean;\r\n}) => {\r\n  const isSelected = props.selected ?? false;\r\n  return <ListRow\r\n    onClick={(isSelected) ? null : props.onClickFunc}\r\n    className='playCoPlaylistDetailListItem'\r\n    itemWidth={[25, 70, 5]}\r\n    style={{\r\n      // This cannot be moved to css,\r\n      // as we have to overwrite the element style of ListRow.\r\n      alignItems: 'center',\r\n      marginLeft: '0',\r\n      marginRight: '0',\r\n      borderRadius: '0.3rem',\r\n      ...(isSelected ? {\r\n        border: 'none',\r\n        outline: '1px solid rgba(255, 255, 255, 1)',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n      } : {\r\n        border: 'none',\r\n        outline: 'none',\r\n      })\r\n    }}>\r\n    <div className='playCoPlaylistDetailListItemThumbnailContainer'>\r\n      <YoutubeThumbnail youtubeId={props.playlistItemData.link_id} />\r\n    </div>\r\n    <div className='playCoPlaylistDetailListItemInfoContainer'>\r\n      <div className='playCoPlaylistDetailListItemTitle'>{props.playlistItemData.name}</div>\r\n      <div className='playCoPlaylistDetailListItemListenerListContainer'>\r\n        <div className='playCoPlaylistDetailListItemListenerList'>\r\n          {(props.playlistItemParticipantStatusData?.length) ? (props.playlistItemParticipantStatusData.map((value, index) => {\r\n            return <PlaylistDetailListener\r\n              key={`playco-playlist-detail-listitem-listener-${index}`}\r\n              nick={value.nickname}\r\n              imgUrl={value.data?.img_url} />\r\n          })) : <PlaylistDetailDummyListener\r\n            key={`playco-playlist-detail-listitem-listener-0`} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <Button\r\n        variant='link'\r\n        style={{ color: 'var(--color)' }}\r\n        onClick={(e) => { e.stopPropagation(); props.onDeleteBtnClickFunc(); }} >\r\n        <Icon path={mdiDelete} size='1.75rem' />\r\n      </Button>\r\n    </div>\r\n  </ListRow>;\r\n};\r\nexport const PlaylistDetail: React.FC = (props: {\r\n  setPlaylistModifyModalShowStateFunc: (boolean) => void;\r\n  setPlaylistCurrentPlayingStateFunc: (number) => void;\r\n  deletePlaylistItemFunc: (number) => void;\r\n  refreshPlaylistDataFunc: () => void;\r\n  addPlaylistItemFunc?: (string) => Promise<{ newItemUrlTextFieldValue: string, newItemUrlNotUsableReason: string }>;\r\n  playlistData: Playlist;\r\n  participantStatus?: PlaylistParticipantStateType;\r\n  isSignedIn?: boolean;\r\n  disabled?: boolean;\r\n  currentPlayingIndex: number;\r\n  socketIoConnectionStatusState: string;\r\n}) => {\r\n  const [playlistDetailState, setPlaylistDetailState] = useState({\r\n    newItemUrlTextFieldValue: '',\r\n    newItemUrlNotUsableReason: '',\r\n  });\r\n  const onAddPlaylistItemBtnClick = () => {\r\n    props.addPlaylistItemFunc(playlistDetailState.newItemUrlTextFieldValue)\r\n      .then((result) => setPlaylistDetailState({\r\n        ...playlistDetailState,\r\n        ...(result ?? {})\r\n      }));\r\n  }\r\n  return <aside className='playCoPlaylistDetailList'>\r\n    <header>\r\n      <h5 className='playCoPlaylistDetailListTitleContainer'>\r\n        <div className='playCoPlaylistDetailListTitle'>\r\n          {props.playlistData.name}\r\n        </div>\r\n        <OverlayTrigger\r\n          placement='bottom'\r\n          overlay={(tooltipProps) => <Tooltip {...tooltipProps} className='playCoPlaylistDetailListRefreshTooltip'>재생목록 새로고침</Tooltip>} >\r\n          <Button\r\n            className='rounded-circle playCoPlaylistDetailListRefreshButton'\r\n            variant='primary'\r\n            style={{ padding: '0.05rem' }}\r\n            disabled={props.disabled}\r\n            onClick={props.refreshPlaylistDataFunc}>\r\n\r\n            <div className='playCoPlaylistDetailListRefreshButtonIconContainer'>\r\n              <Icon path={mdiRefresh} size='1.75rem' />\r\n            </div>\r\n          </Button>\r\n        </OverlayTrigger>\r\n      </h5>\r\n    </header>\r\n    <Divider style={{ margin: 'unset', marginLeft: '0', marginRight: '0', marginTop: '1.25rem', marginBottom: '1.25rem', width: '100%' }} />\r\n    {\r\n      props.socketIoConnectionStatusState && <>\r\n        <PHFormText showOnlyNeeded>{props.socketIoConnectionStatusState}</PHFormText>\r\n        <Divider\r\n          style={{\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            marginTop: '1rem',\r\n            marginBottom: '1rem',\r\n            width: '100%',\r\n          }} />\r\n      </>\r\n    }\r\n    <input\r\n      title='Add item on playlist'\r\n      placeholder='재생목록에 추가할 URL'\r\n      className='playCoPlaylistDetailAddTextField'\r\n      disabled={props.disabled}\r\n      value={playlistDetailState.newItemUrlTextFieldValue}\r\n      onChange={(evt) => setPlaylistDetailState({\r\n        ...playlistDetailState,\r\n        newItemUrlTextFieldValue: evt.target.value,\r\n        newItemUrlNotUsableReason: '',\r\n      })}\r\n    ></input>\r\n    <PHFormText showOnlyNeeded>{playlistDetailState.newItemUrlNotUsableReason}</PHFormText>\r\n    <div className='playCoPlaylistDetailBtnGroup'>\r\n      <PHButton\r\n        smaller\r\n        variant='warning'\r\n        disabled={props.disabled}\r\n        onClick={() => props.setPlaylistModifyModalShowStateFunc(true)}>\r\n        <Icon path={mdiTools} size='1.1rem' />&nbsp;&nbsp;재생목록 설정\r\n      </PHButton>\r\n      <PHButton\r\n        smaller\r\n        variant='primary'\r\n        disabled={props.disabled}\r\n        onClick={onAddPlaylistItemBtnClick} >\r\n        <Icon path={mdiPlus} size='1.1rem' />&nbsp;&nbsp;재생목록에 추가하기\r\n      </PHButton>\r\n    </div>\r\n    <Divider style={{ margin: 'unset', marginLeft: '0', marginRight: '0', marginTop: '1.25rem', marginBottom: '1.25rem', width: '100%' }} />\r\n    <div>\r\n      {(props.playlistData.items.length)\r\n        ? props.playlistData.items.map((value, index) => <PlaylistDetailItem\r\n          key={`playco-playlist-detail-listitem-${value.uuid}`}\r\n          onClickFunc={props.disabled\r\n            ? () => { /* */ }\r\n            : () => props.setPlaylistCurrentPlayingStateFunc(index)}\r\n          onDeleteBtnClickFunc={props.disabled\r\n            ? () => { /* */ }\r\n            : () => props.deletePlaylistItemFunc(index)}\r\n          playlistItemData={value}\r\n          playlistItemParticipantStatusData={props.participantStatus?.get(index)}\r\n          selected={index === props.currentPlayingIndex} />)\r\n        : <ListRow style={{ width: '100%', marginRight: '0', marginLeft: '0', border: 'none' }}>재생목록에 아무 것도 없어요...</ListRow>}\r\n    </div>\r\n  </aside>;\r\n};\r\n\r\nexport const PlaylistDetailPlayer: React.FC = (props: {\r\n  targetUrl: string;\r\n  autoplay: boolean;\r\n  loopMode: number;\r\n  setAutoplayStateFunc: (boolean) => void;\r\n  setLoopModeStateFunc: () => void;\r\n  onPlayerEndedFunc?: () => void;\r\n}) => {\r\n  const playerConfig = {\r\n    youtube: {\r\n      playerVars: {\r\n        autoplay: props.autoplay ? 1 : 0,\r\n        loop: props.loopMode === 1 ? 1 : 0,\r\n        showinfo: 1,\r\n        controls: 1,\r\n      }\r\n    }\r\n  };\r\n\r\n  return <aside className='playCoPlaylistDetailPlayerAside'>\r\n    <div className='playCoPlaylistDetailPlayerContainer'>\r\n      <ReactPlayer\r\n        controls pip\r\n        className='playCoPlaylistDetailPlayer'\r\n        width='100%' height='100%'\r\n        config={playerConfig}\r\n\r\n        url={props.targetUrl}\r\n        loop={props.loopMode === 1}\r\n        playing={props.autoplay}\r\n        onEnded={(props.loopMode) ? props.onPlayerEndedFunc : null} />\r\n    </div>\r\n    <br />\r\n    <div className='playCoPlaylistDetailPlayerBtnGroup'>\r\n      <PHButton\r\n        variant={(props.autoplay) ? 'primary' : 'outline-primary'}\r\n        onClick={() => props.setAutoplayStateFunc(!props.autoplay)} >\r\n        <Icon path={mdiPlayCircle} size='1.1rem' />&nbsp;&nbsp;자동 재생\r\n      </PHButton>\r\n\r\n      <PHButton\r\n        variant={(props.loopMode === 0) ? 'outline-primary' : 'primary'}\r\n        onClick={props.setLoopModeStateFunc} >\r\n        <Icon path={mdiRefresh} size='1.1rem' />\r\n        &nbsp;&nbsp;{\r\n          (props.loopMode === 0)\r\n            ? '반복  해제됨' // loopMode === 0\r\n            : (props.loopMode === 1)\r\n              ? '한곡 반복 중' // loopMode === 1\r\n              : (props.loopMode === 2)\r\n                ? '전곡 반복 중' // loopMode === 2\r\n                : '전곡 한번만 재생 중' // loopMode === 3\r\n        }\r\n      </PHButton>\r\n    </div>\r\n  </aside>;\r\n};\r\n\r\nexport const PlayCoPlaylistDetail: React.FC = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [playlistDetailRootState, setPlaylistDetailRootState] = useState<PlayCoPlaylistDetailStateType>({\r\n    playlistData: new Playlist({\r\n      uuid: -1,\r\n      index: 0,\r\n      name: '정보를 불러오는 중...',\r\n\r\n      public_accessable: false,\r\n      public_modifiable: false,\r\n      public_item_appendable: false,\r\n      public_item_orderable: false,\r\n      public_item_deletable: false,\r\n      allow_duplicate: false,\r\n\r\n      items: [\r\n        new PlaylistItem({\r\n          uuid: -1,\r\n          index: 0,\r\n          name: '정보를 불러오는 중이에요, 잠시만 기다려주세요...',\r\n          data: {},\r\n\r\n          added_by_uuid: -1,\r\n          added_by_nick: '',\r\n\r\n          link: '',\r\n          link_type: '',\r\n          link_id: '',\r\n          current_listener: [],\r\n        }),\r\n      ],\r\n    }),\r\n    participantStatus: new Map(),\r\n    showPlaylistModifyModal: false,\r\n    showAlertMessageBoxModal: false,\r\n    alertMessageBoxModalData: { title: '', body: '', onAcceptBtnClick: () => { /* */ }, },\r\n\r\n    autoplay: true,\r\n    // 0: loop disabled\r\n    // 1: loop one item\r\n    // 2: loop all items in playlist, and loop again if the last item in playlist played.\r\n    // 3: loop all items in playlist, and stop if the last item in playlist played.\r\n    loopMode: 3,\r\n    currentPlayingIndex: 0,\r\n    currentPlayingUrl: '',\r\n\r\n    isFirstInitialized: false,\r\n    isAccountFetching: false,\r\n    isPlaylistFetching: false,\r\n\r\n    socketIoConnectionStatus: '',\r\n  });\r\n  const defaultAlertMsgModalData = {\r\n    title: '재생목록을 불러올 수 없어요...',\r\n    body: '',\r\n    onAcceptBtnClick: () => navigate('/playco'),\r\n  }\r\n  const playCoSocketIO = new PlayCoSocketIOHandler();\r\n\r\n  const refreshPlaylistData = () => {\r\n    if (playlistDetailRootState.isAccountFetching || playlistDetailRootState.isPlaylistFetching)\r\n      return;\r\n\r\n    setPlaylistDetailRootState((prevState) => ({ ...prevState, isPlaylistFetching: true, }));\r\n\r\n    // Fetch playlist from API\r\n    PlayCoAPI\r\n      .getPlaylistInfo(params.playlistId)\r\n      .then(\r\n        (result) => setPlaylistDetailRootState((prevState) => ({\r\n          ...prevState,\r\n          isFirstInitialized: true,\r\n          isPlaylistFetching: false,\r\n          playlistData: result,\r\n\r\n          // Update playlist state if this is the first time the playlist information is loading\r\n          // or there's a new item added on a playlist when the playlist was empty\r\n          ...((prevState.playlistData.uuid === -1 || prevState.playlistData.items.length === 0) ? {\r\n            currentPlayingUrl: result.items[0]?.link ?? '',\r\n            currentPlayingIndex: 0,\r\n          } : {}),\r\n        })),\r\n        (reason: FrostError) => setPlaylistDetailRootState((prevState) => ({\r\n          ...prevState,\r\n          isPlaylistFetching: false,\r\n          showAlertMessageBoxModal: true,\r\n          alertMessageBoxModalData: {\r\n            ...defaultAlertMsgModalData,\r\n            body: reason.message,\r\n          },\r\n        }))\r\n      )\r\n  }\r\n  const setPlaylistLoopModeState = () => {\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      loopMode: (playlistDetailRootState.loopMode <= 0) ? 3 : playlistDetailRootState.loopMode - 1,\r\n    });\r\n  }\r\n  const setPlaylistModifyModalShowState = (newState: boolean) => {\r\n    if (!playlistDetailRootState.playlistData\r\n      || playlistDetailRootState.playlistData.uuid <= 0\r\n      || playlistDetailRootState.isAccountFetching\r\n      || playlistDetailRootState.isPlaylistFetching)\r\n      return;\r\n\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      showPlaylistModifyModal: newState,\r\n    });\r\n\r\n    // Re-fetch playlist data when config modal closed.\r\n    if (!newState) refreshPlaylistData();\r\n  };\r\n  const setPlaylistCurrentPlayingState = (newIndex: number) => {\r\n    if (0 > newIndex || newIndex > playlistDetailRootState.playlistData.items.length - 1)\r\n      return;\r\n\r\n    const newPlayerLink = (playlistDetailRootState.playlistData.items != 0) ? playlistDetailRootState.playlistData.items[newIndex].link : '';\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      currentPlayingIndex: newIndex,\r\n      currentPlayingUrl: newPlayerLink,\r\n    });\r\n    if (playlistDetailRootState.isFirstInitialized && playCoSocketIO.connected) {\r\n      playCoSocketIO.setSessionCurrentPlaying(playlistDetailRootState.playlistData.uuid, newIndex);\r\n    }\r\n  }\r\n  const setPlaylistCurrentPlayingStateToNext = () => {\r\n    if (playlistDetailRootState.currentPlayingIndex + 1 >= playlistDetailRootState.playlistData.items.length) {\r\n      if (playlistDetailRootState.loopMode === 2)\r\n        setPlaylistCurrentPlayingState(0);\r\n      return;\r\n    }\r\n    setPlaylistCurrentPlayingState(playlistDetailRootState.currentPlayingIndex + 1);\r\n  }\r\n\r\n  const addPlaylistItem = (newItemUrl: string) => {\r\n    if (!playlistDetailRootState.playlistData\r\n      || playlistDetailRootState.playlistData.uuid <= 0\r\n      || playlistDetailRootState.isAccountFetching\r\n      || playlistDetailRootState.isPlaylistFetching)\r\n      return;\r\n\r\n    newItemUrl = (newItemUrl ?? '').trim();\r\n    if (!newItemUrl)\r\n      return new Promise((resolve) => resolve({\r\n        newItemUrlTextFieldValue: newItemUrl,\r\n        newItemUrlNotUsableReason: '재생목록에 추가할 URL을 적어주세요!',\r\n      }));\r\n\r\n    setPlaylistDetailRootState((prevState) => ({ ...prevState, isPlaylistFetching: true, }));\r\n\r\n    return PlayCoAPI.insertPlaylistItem(\r\n      playlistDetailRootState.playlistData.uuid,\r\n      newItemUrl,\r\n      playlistDetailRootState.playlistData.hash)\r\n      .then(\r\n        (result) => {\r\n          setPlaylistDetailRootState((prevState) => ({ ...prevState, isPlaylistFetching: false, }));\r\n          if (!result.success) {\r\n            let errorMsg: string | null = null;\r\n            let shouldUrlTextFieldCleared = false;\r\n\r\n            if (result.subCode === 'resource.forbidden') {\r\n              errorMsg = '재생목록에 추가할 수 있는 권한이 없어요.';\r\n            } else if (result.subCode === 'resource.prediction_failed') {\r\n              if (result.data.prediction_failed_reason?.includes('playlist_outdated')) {\r\n                errorMsg = '재생목록에 수정사항이 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';\r\n              } else if (result.data.prediction_failed_reason?.includes('link_not_implemented')) {\r\n                shouldUrlTextFieldCleared = true;\r\n                errorMsg = '지금은 YouTube 영상만 지원해요,\\n다른 영상의 URL을 시도해주세요.';\r\n              } else if (result.data.prediction_failed_reason?.includes('link_data_fetch_failed')) {\r\n                errorMsg = '영상의 정보를 확인할 수 없어요,\\n다른 URL을 시도하시거나 10분 후 다시 시도해주세요.';\r\n              } else {\r\n                errorMsg = '알 수 없는 문제가 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';\r\n              }\r\n            } else if (result.subCode === 'resource.unique_failed') {\r\n              errorMsg = '이미 재생목록에 해당 영상이 포함되어 있어요,\\n'\r\n              errorMsg += '만약 재생목록에 중복해서 포함하고 싶으시다면\\n';\r\n              errorMsg += '\"재생목록 설정\"에서 설정을 바꿔주세요.';\r\n            } else if (result.subCode === 'resource.not_found') {\r\n              // Show an alertbox and kick to main screen\r\n              setPlaylistDetailRootState((prevState) => ({\r\n                ...prevState,\r\n                isPlaylistFetching: false,\r\n                showAlertMessageBoxModal: true,\r\n                alertMessageBoxModalData: {\r\n                  ...defaultAlertMsgModalData,\r\n                  body: (<>존재하지 않는 재생목록 ID입니다,<br />ID를 확인 후 다시 시도해주세요.</>),\r\n                },\r\n              }));\r\n            } else {\r\n              errorMsg = '알 수 없는 문제가 생겼어요,\\n상단의 \"새로고침\" 버튼을 눌러주세요.';\r\n            }\r\n\r\n            // Don't erase url input field, so that user can try once more.\r\n            return {\r\n              ...(shouldUrlTextFieldCleared ? { newItemUrlTextFieldValue: '', } : {}),\r\n              newItemUrlNotUsableReason: errorMsg,\r\n            };\r\n          }\r\n\r\n          refreshPlaylistData();\r\n          return {\r\n            newItemUrlTextFieldValue: '',\r\n            newItemUrlNotUsableReason: '',\r\n          };\r\n        },\r\n        (reason: FrostError) => {\r\n          setPlaylistDetailRootState((prevState) => ({ ...prevState, isPlaylistFetching: false, }));\r\n          return { newItemUrlNotUsableReason: reason.message, };\r\n        });\r\n  };\r\n  const deletePlaylistItem = (index: number) => {\r\n    if (!playlistDetailRootState.playlistData\r\n      || playlistDetailRootState.playlistData.uuid <= 0\r\n      || playlistDetailRootState.isAccountFetching\r\n      || playlistDetailRootState.isPlaylistFetching)\r\n      return;\r\n\r\n    setPlaylistDetailRootState((prevState) => ({ ...prevState, isPlaylistFetching: true, }));\r\n\r\n    PlayCoAPI.deletePlaylistItem(\r\n      playlistDetailRootState.playlistData.uuid,\r\n      index,\r\n      playlistDetailRootState.playlistData.hash)\r\n      .then(\r\n        (result) => {\r\n          if (playlistDetailRootState.currentPlayingIndex >= index) {\r\n            // Fetch playlist items after deleting item,\r\n            // and set playlist data while doing minus 1 on currentPlayingIndex not to change currentPlayingUrl,\r\n            // as \"one item before current playing item\" or \"current playing item\" is gone, and we don't want to refresh player.\r\n            setPlaylistDetailRootState((prevState) => ({\r\n              ...prevState,\r\n              currentPlayingIndex: prevState.currentPlayingIndex - 1,\r\n            }));\r\n          } else {\r\n            // Update playlist data state after deleting item and ignore it.\r\n            // Deleting item after current playing item won't affect our player.\r\n          }\r\n          refreshPlaylistData();\r\n        },\r\n        (reason: FrostError) => {\r\n          setPlaylistDetailRootState((prevState) => ({\r\n            ...prevState,\r\n            newItemUrlNotUsableReason: reason.message,\r\n            isPlaylistFetching: false,\r\n          }));\r\n        }\r\n      );\r\n  }\r\n\r\n  // Socket.IO specific event handler\r\n  const onPlaylistUserStateModified = (newRoomState: PlayCoRoomType) => {\r\n    // Convert PlayCoRoomType to PlaylistParticipantStateType\r\n    const newParticipantState: PlaylistParticipantStateType = new Map();\r\n\r\n    if (playlistDetailRootState.playlistData.uuid != newRoomState.playlist_id)\r\n      return;\r\n\r\n    for (const [nickname, roomStatus] of Object.entries(newRoomState.participants)) {\r\n      const currentStateIndex = roomStatus.status.currently_playing;\r\n      if (!newParticipantState.has(currentStateIndex)) {\r\n        newParticipantState.set(currentStateIndex, []);\r\n      }\r\n      newParticipantState.get(currentStateIndex)?.push({ nickname: nickname, data: roomStatus.data, });\r\n    }\r\n\r\n    setPlaylistDetailRootState((prevState) => ({ ...prevState, participantStatus: newParticipantState, }))\r\n  };\r\n  const onSocketIOStatusChanged = (newSIOStateMessage: string) => {\r\n    setPlaylistDetailRootState((prevState) => ({ ...prevState, socketIoConnectionStatus: newSIOStateMessage, }));\r\n  };\r\n\r\n  playCoSocketIO.onPlayCoConnected = () => {\r\n    // Try to connect SocketIO and fetch participant status.\r\n    playCoSocketIO.enterPlaylist(\r\n      playlistDetailRootState.playlistData.uuid,\r\n      playlistDetailRootState.currentPlayingIndex);\r\n  };\r\n  playCoSocketIO.onSocketIOStatusChanged = onSocketIOStatusChanged;\r\n  playCoSocketIO.onPlaylistModified = refreshPlaylistData;\r\n  playCoSocketIO.onUserStatusChanged = onPlaylistUserStateModified;\r\n\r\n  useEffect(() => {\r\n    // Check if params.playlistId is a valid numeric value\r\n    if (!isNumeric(params.playlistId)) {\r\n      setPlaylistDetailRootState({\r\n        ...playlistDetailRootState,\r\n        showAlertMessageBoxModal: true,\r\n        alertMessageBoxModalData: {\r\n          ...defaultAlertMsgModalData,\r\n          body: (<>올바르지 않은 재생목록 ID입니다,<br />ID를 확인 후 다시 시도해주세요.</>),\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Initialize and fetch playlist data\r\n    if ((!playlistDetailRootState.playlistData || playlistDetailRootState.playlistData.uuid <= 0)\r\n      && !playlistDetailRootState.isAccountFetching && !playlistDetailRootState.isPlaylistFetching)\r\n      refreshPlaylistData();\r\n\r\n    return () => { // Page unmounted\r\n      // Try to leave SocketIO room.\r\n      // playCoSocketIO.leavePlaylist(playlistDetailRootState.playlistData.uuid);\r\n      playCoSocketIO.disconnect(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (playlistDetailRootState.isFirstInitialized) {\r\n      playCoSocketIO.connect();\r\n    }\r\n  }, [playlistDetailRootState.isFirstInitialized])\r\n\r\n  return <section className='playCoPlaylistDetailPage'>\r\n    <PHAlertMessageBox\r\n      variant='error'\r\n      modalShowState={playlistDetailRootState.showAlertMessageBoxModal}\r\n      setModalShowState={(newState: boolean) => setPlaylistDetailRootState({ ...playlistDetailRootState, showAlertMessageBoxModal: newState })}\r\n      {...(playlistDetailRootState.alertMessageBoxModalData ?? {})} />\r\n    <header>\r\n      <h2>PlayCO<sup className='playCoTitleHeaderSup'>Alpha</sup></h2>\r\n      <p>플레이리스트를, 멀리서, 다 같이</p>\r\n    </header>\r\n    <div className='playCoPlaylistDetail'>\r\n      <PlaylistControlModal\r\n        initialModalState={playlistDetailRootState.playlistData}\r\n        modalShowState={playlistDetailRootState.showPlaylistModifyModal}\r\n        setModalShowState={setPlaylistModifyModalShowState} />\r\n      <PlaylistDetail\r\n        playlistData={playlistDetailRootState.playlistData}\r\n        participantStatus={playlistDetailRootState.participantStatus}\r\n        currentPlayingIndex={playlistDetailRootState.currentPlayingIndex}\r\n        socketIoConnectionStatusState={playlistDetailRootState.socketIoConnectionStatus}\r\n        disabled={\r\n          !playlistDetailRootState.playlistData\r\n          || playlistDetailRootState.playlistData.uuid <= 0\r\n          || playlistDetailRootState.isAccountFetching\r\n          || playlistDetailRootState.isPlaylistFetching\r\n        }\r\n        setPlaylistModifyModalShowStateFunc={setPlaylistModifyModalShowState}\r\n        setPlaylistCurrentPlayingStateFunc={setPlaylistCurrentPlayingState}\r\n        addPlaylistItemFunc={addPlaylistItem}\r\n        deletePlaylistItemFunc={deletePlaylistItem}\r\n        refreshPlaylistDataFunc={refreshPlaylistData} />\r\n      <PlaylistDetailPlayer\r\n        targetUrl={playlistDetailRootState.currentPlayingUrl}\r\n        loopMode={playlistDetailRootState.loopMode}\r\n        setLoopModeStateFunc={setPlaylistLoopModeState}\r\n        autoplay={playlistDetailRootState.autoplay}\r\n        setAutoplayStateFunc={(newState) => setPlaylistDetailRootState({ ...playlistDetailRootState, autoplay: newState })}\r\n        onPlayerEndedFunc={setPlaylistCurrentPlayingStateToNext} />\r\n    </div>\r\n  </section>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}