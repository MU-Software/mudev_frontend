{"ast":null,"code":"import _objectSpread from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{accountDeactivateActionCreatorAsync}from'src/redux/modules/account/action_creator';import{Form,Button}from'react-bootstrap';import{PHSpinnerButton}from'src/ui/common/element/muButton';import{PHFormText}from'src/ui/common/element/muFormText';import'./account.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var AccountDeactivate=function AccountDeactivate(){var InputChecker={pw:function pw(str){if(!str){return{success:false,pwNotUsableReason:'비밀번호를 입력해주세요.'};}return{success:true,pwNotUsableReason:null};}};var FrostErrorToAccountDeactivationError=function FrostErrorToAccountDeactivationError(err){if(!err)return{signUpFailedReason:null};if(err.route!=='account/deactivate')return{signUpFailedReason:null};// We need to set Frost's error message(showMsg)\n// to proper pwNotUsableReason field or accountDeactivateFailedReason.\nvar errShowMsg=err.message;var errFieldName=err.fieldName?\"\".concat(err.fieldName,\"NotUsableReason\"):'pwChangeFailedReason';return _defineProperty({},errFieldName,errShowMsg);};var accountInfo=useSelector(function(state){return state.accountReducer;});var dispatch=useDispatch();var navigate=useNavigate();var _useState=useState({isInitialized:false,isProcessing:false,pwTextFieldValue:'',pwNotUsableReason:'',accountDeactivateFailedReason:''}),_useState2=_slicedToArray(_useState,2),accountDeactivateFormData=_useState2[0],setAccountDeactivateFormData=_useState2[1];useEffect(function(){if(!accountDeactivateFormData.isInitialized&&!accountInfo.isFetching){setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isInitialized:true});});}if(accountDeactivateFormData.isInitialized&&!accountInfo.isFetching){if(!accountDeactivateFormData.isProcessing&&!accountInfo.isSignedIn){// User got this page without signing in.\nalert('로그인 후에 사용하실 수 있어요.');navigate('/');}else if(accountDeactivateFormData.isProcessing&&accountInfo.frostErrorObj){var _accountInfo$frostErr;// Error raised while deactivating account, parse error and show proper message.\nif(((_accountInfo$frostErr=accountInfo.frostErrorObj.apiResponse)===null||_accountInfo$frostErr===void 0?void 0:_accountInfo$frostErr.subCode)==='user.deactivated'){alert(accountInfo.frostErrorObj.message);setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isProcessing:false});});navigate('/');return;}setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isProcessing:false},FrostErrorToAccountDeactivationError(accountInfo.frostErrorObj));});}else if(accountDeactivateFormData.isProcessing&&!accountInfo.isSignedIn){// User successfully deactivated.\nalert('계정이 정상적으로 비활성화됐어요,\\n이용해주셔서 감사합니다!');setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isProcessing:false});});navigate('/');}}},[accountInfo,accountDeactivateFormData.isInitialized,accountDeactivateFormData.isProcessing]);var getTrimmedState=function getTrimmedState(modalState){var tempModalState=_objectSpread({},modalState!==null&&modalState!==void 0?modalState:accountDeactivateFormData);for(var key in tempModalState){if(typeof tempModalState[key]==='string')tempModalState[key]=tempModalState[key].trim();}return tempModalState;};var handleInputChange=function handleInputChange(fieldName){return function(e){var fieldStateKey=\"\".concat(fieldName,\"TextFieldValue\");var fieldValue=e.target.type==='checkbox'?e.target.checked:e.target.value;var checkerResult=InputChecker[fieldName](fieldValue.trim());delete checkerResult.success;setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread(_objectSpread({},prevState),checkerResult),{},_defineProperty({},fieldStateKey,fieldValue));});};};var shouldSubmitBtnDisabled=function shouldSubmitBtnDisabled(){if(accountDeactivateFormData.isProcessing)return true;var tempModalState=getTrimmedState();var isFormCheckSuccess=true;['pw'].map(function(fieldName){var fieldValue=tempModalState[\"\".concat(fieldName,\"TextFieldValue\")];var fieldCheckResult=InputChecker[fieldName](fieldValue);if(isFormCheckSuccess)// It's OK to set true to false, but false to true must not be happened.\n// And also, we are in a map function, so we cannot return directly here,\n// we need to store the result somewhere outside of the function.\nisFormCheckSuccess=fieldCheckResult.success;});return!isFormCheckSuccess;};var tryAccountDeactivate=function tryAccountDeactivate(){// Trim all strings in states\nvar tempModalState=getTrimmedState();setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread(_objectSpread({},prevState),tempModalState),{},{isProcessing:true});});var isFormCheckSuccess=true;var resultFormCheckData={};['pw'].map(function(fieldName){var fieldValue=tempModalState[\"\".concat(fieldName,\"TextFieldValue\")];var fieldCheckResult=InputChecker[fieldName](fieldValue);if(isFormCheckSuccess)// It's OK to set true to false, but false to true must not be happened.\n// And also, we are in a map function, so we cannot return directly here,\n// we need to store the result somewhere outside of the function.\nisFormCheckSuccess=fieldCheckResult.success;resultFormCheckData=_objectSpread(_objectSpread({},resultFormCheckData),fieldCheckResult);});delete resultFormCheckData.success;setAccountDeactivateFormData(function(prevState){return _objectSpread(_objectSpread(_objectSpread({},prevState),resultFormCheckData),{},{isProcessing:isFormCheckSuccess});});if(!isFormCheckSuccess)return;dispatch(accountDeactivateActionCreatorAsync(accountInfo.email,tempModalState.pwTextFieldValue));};var accountDeactivateDescription='계정을 비활성화 시 생성하신 PlayCo의 재생목록이 차단 상태로 되고,\\n';accountDeactivateDescription+='이 이메일로 MUdev.cc에 다시 가입을 하실 수 없으며, 비활성화는 되돌릴 수 없어요!\\n';accountDeactivateDescription+='계속 진행하시려면 아래에 현재 비밀번호를 입력 후\\n<비활성화하기> 버튼을 눌러주세요.\\n';return/*#__PURE__*/_jsxs(\"section\",{className:\"accountMain\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\uACC4\\uC815 \\uBE44\\uD65C\\uC131\\uD654\"})}),/*#__PURE__*/_jsx(\"aside\",{className:\"accountAside\",children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"accountAsideFormGroup\",controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uACC4\\uC815\\uC744 \\uC815\\uB9D0 \\uBE44\\uD65C\\uC131\\uD654 \\uD558\\uC2E4\\uAC74\\uAC00\\uC694?\"}),/*#__PURE__*/_jsx(PHFormText,{defaultChildren:accountDeactivateDescription})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",autoComplete:\"current-password\",placeholder:\"\\uC5EC\\uAE30\\uC5D0 \\uD604\\uC7AC \\uC0AC\\uC6A9 \\uC911\\uC774\\uC2E0 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC801\\uC5B4\\uC8FC\\uC138\\uC694.\",disabled:accountDeactivateFormData.isProcessing,value:accountDeactivateFormData.pwTextFieldValue,onChange:handleInputChange('pw')}),/*#__PURE__*/_jsx(PHFormText,{children:accountDeactivateFormData.pwNotUsableReason})]}),/*#__PURE__*/_jsx(PHFormText,{children:accountDeactivateFormData.accountDeactivateFailedReason}),/*#__PURE__*/_jsxs(\"div\",{className:\"accountSubmitBtnContainer\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",disabled:accountDeactivateFormData.isProcessing,onClick:function onClick(){return navigate(-1);},children:\"\\uCDE8\\uC18C\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(PHSpinnerButton,{variant:\"danger\",type:\"submit\",size:false,style:{margin:undefined},disabled:shouldSubmitBtnDisabled(),onClick:tryAccountDeactivate,showSpinner:accountDeactivateFormData.isProcessing,children:\"\\uBE44\\uD65C\\uC131\\uD654\\uD558\\uAE30\"})]})]})})]});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/src/ui/page/account/deactivate.tsx"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","accountDeactivateActionCreatorAsync","Form","Button","PHSpinnerButton","PHFormText","AccountDeactivate","InputChecker","pw","str","success","pwNotUsableReason","FrostErrorToAccountDeactivationError","err","signUpFailedReason","route","errShowMsg","message","errFieldName","fieldName","accountInfo","state","accountReducer","dispatch","navigate","isInitialized","isProcessing","pwTextFieldValue","accountDeactivateFailedReason","accountDeactivateFormData","setAccountDeactivateFormData","isFetching","prevState","isSignedIn","alert","frostErrorObj","apiResponse","subCode","getTrimmedState","modalState","tempModalState","key","trim","handleInputChange","e","fieldStateKey","fieldValue","target","type","checked","value","checkerResult","shouldSubmitBtnDisabled","isFormCheckSuccess","map","fieldCheckResult","tryAccountDeactivate","resultFormCheckData","email","accountDeactivateDescription","margin","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { accountDeactivateActionCreatorAsync } from 'src/redux/modules/account/action_creator';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\n\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\nimport './account.css';\r\n\r\ninterface AccountDeactivateStateType {\r\n  isInitialized: boolean;\r\n  isProcessing: boolean;\r\n\r\n  pwTextFieldValue: string;\r\n  pwNotUsableReason: string;\r\n  accountDeactivateFailedReason: string;\r\n}\r\n\r\nexport const AccountDeactivate = () => {\r\n  const InputChecker = {\r\n    pw: (str: string) => {\r\n      if (!str) {\r\n        return {\r\n          success: false,\r\n          pwNotUsableReason: '비밀번호를 입력해주세요.',\r\n        };\r\n      }\r\n\r\n      return { success: true, pwNotUsableReason: null };\r\n    },\r\n  };\r\n  const FrostErrorToAccountDeactivationError = (err: FrostError) => {\r\n    if (!err)\r\n      return { signUpFailedReason: null };\r\n    if (err.route !== 'account/deactivate')\r\n      return { signUpFailedReason: null };\r\n    // We need to set Frost's error message(showMsg)\r\n    // to proper pwNotUsableReason field or accountDeactivateFailedReason.\r\n    const errShowMsg = err.message;\r\n    const errFieldName = (err.fieldName) ? `${err.fieldName}NotUsableReason` : 'pwChangeFailedReason';\r\n\r\n    return { [errFieldName]: errShowMsg, };\r\n  };\r\n\r\n  const accountInfo: AccountInfo = useSelector(state => state.accountReducer);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [accountDeactivateFormData, setAccountDeactivateFormData] = useState({\r\n    isInitialized: false,\r\n    isProcessing: false,\r\n\r\n    pwTextFieldValue: '',\r\n    pwNotUsableReason: '',\r\n    accountDeactivateFailedReason: '',\r\n  });\r\n  useEffect(() => {\r\n    if (!accountDeactivateFormData.isInitialized && !accountInfo.isFetching) {\r\n      setAccountDeactivateFormData(prevState => ({\r\n        ...prevState,\r\n        isInitialized: true,\r\n      }));\r\n    }\r\n\r\n    if (accountDeactivateFormData.isInitialized && !accountInfo.isFetching) {\r\n      if (!accountDeactivateFormData.isProcessing && !accountInfo.isSignedIn) {\r\n        // User got this page without signing in.\r\n        alert('로그인 후에 사용하실 수 있어요.');\r\n        navigate('/');\r\n      } else if (accountDeactivateFormData.isProcessing && accountInfo.frostErrorObj) {\r\n        // Error raised while deactivating account, parse error and show proper message.\r\n        if (accountInfo.frostErrorObj.apiResponse?.subCode === 'user.deactivated') {\r\n          alert(accountInfo.frostErrorObj.message);\r\n          setAccountDeactivateFormData(prevState => ({\r\n            ...prevState,\r\n            isProcessing: false,\r\n          }));\r\n          navigate('/');\r\n          return;\r\n        }\r\n        setAccountDeactivateFormData(prevState => ({\r\n          ...prevState,\r\n          isProcessing: false,\r\n          ...FrostErrorToAccountDeactivationError(accountInfo.frostErrorObj),\r\n        }));\r\n      } else if (accountDeactivateFormData.isProcessing && !accountInfo.isSignedIn) {\r\n        // User successfully deactivated.\r\n        alert('계정이 정상적으로 비활성화됐어요,\\n이용해주셔서 감사합니다!');\r\n        setAccountDeactivateFormData(prevState => ({\r\n          ...prevState,\r\n          isProcessing: false,\r\n        }));\r\n        navigate('/');\r\n      }\r\n    }\r\n  }, [accountInfo, accountDeactivateFormData.isInitialized, accountDeactivateFormData.isProcessing]);\r\n\r\n  const getTrimmedState = (modalState?: AccountDeactivateStateType) => {\r\n    const tempModalState: AccountDeactivateStateType = { ...(modalState ?? accountDeactivateFormData), };\r\n    for (const key in tempModalState)\r\n      if (typeof (tempModalState[key]) === 'string')\r\n        tempModalState[key] = tempModalState[key].trim();\r\n\r\n    return tempModalState;\r\n  };\r\n  const handleInputChange = (fieldName: string) => (e: Event) => {\r\n    const fieldStateKey = `${fieldName}TextFieldValue`;\r\n    const fieldValue = (e.target.type === 'checkbox') ? e.target.checked : e.target.value;\r\n\r\n    const checkerResult = InputChecker[fieldName](fieldValue.trim());\r\n    delete (checkerResult.success);\r\n\r\n    setAccountDeactivateFormData((prevState) => ({\r\n      ...prevState,\r\n      ...checkerResult,\r\n      [fieldStateKey]: fieldValue,\r\n    }));\r\n  };\r\n\r\n  const shouldSubmitBtnDisabled = () => {\r\n    if (accountDeactivateFormData.isProcessing)\r\n      return true;\r\n\r\n    const tempModalState = getTrimmedState();\r\n    let isFormCheckSuccess = true;\r\n    ['pw',].map(fieldName => {\r\n      const fieldValue: string = tempModalState[`${fieldName}TextFieldValue`];\r\n      const fieldCheckResult: string = InputChecker[fieldName](fieldValue);\r\n\r\n      if (isFormCheckSuccess)\r\n        // It's OK to set true to false, but false to true must not be happened.\r\n        // And also, we are in a map function, so we cannot return directly here,\r\n        // we need to store the result somewhere outside of the function.\r\n        isFormCheckSuccess = fieldCheckResult.success;\r\n    });\r\n\r\n    return !isFormCheckSuccess;\r\n  };\r\n\r\n  const tryAccountDeactivate = () => {\r\n    // Trim all strings in states\r\n    const tempModalState = getTrimmedState();\r\n    setAccountDeactivateFormData(prevState => ({\r\n      ...prevState,\r\n      ...tempModalState,\r\n      isProcessing: true,\r\n    }));\r\n\r\n    let isFormCheckSuccess = true;\r\n    let resultFormCheckData = {};\r\n    ['pw',].map(fieldName => {\r\n      const fieldValue = tempModalState[`${fieldName}TextFieldValue`];\r\n      const fieldCheckResult = InputChecker[fieldName](fieldValue);\r\n\r\n      if (isFormCheckSuccess)\r\n        // It's OK to set true to false, but false to true must not be happened.\r\n        // And also, we are in a map function, so we cannot return directly here,\r\n        // we need to store the result somewhere outside of the function.\r\n        isFormCheckSuccess = fieldCheckResult.success;\r\n\r\n      resultFormCheckData = { ...resultFormCheckData, ...fieldCheckResult };\r\n    });\r\n    delete (resultFormCheckData.success);\r\n\r\n    setAccountDeactivateFormData(prevState => ({\r\n      ...prevState,\r\n      ...resultFormCheckData,\r\n      isProcessing: isFormCheckSuccess,\r\n    }));\r\n\r\n    if (!isFormCheckSuccess)\r\n      return;\r\n\r\n    dispatch(accountDeactivateActionCreatorAsync(\r\n      accountInfo.email,\r\n      tempModalState.pwTextFieldValue,\r\n    ));\r\n  };\r\n\r\n  let accountDeactivateDescription = '계정을 비활성화 시 생성하신 PlayCo의 재생목록이 차단 상태로 되고,\\n';\r\n  accountDeactivateDescription += '이 이메일로 MUdev.cc에 다시 가입을 하실 수 없으며, 비활성화는 되돌릴 수 없어요!\\n';\r\n  accountDeactivateDescription += '계속 진행하시려면 아래에 현재 비밀번호를 입력 후\\n<비활성화하기> 버튼을 눌러주세요.\\n';\r\n\r\n  return <section className='accountMain'>\r\n    <header>\r\n      <h2>계정 비활성화</h2>\r\n    </header>\r\n    <aside className='accountAside'>\r\n      <Form>\r\n        <Form.Group className=\"accountAsideFormGroup\" controlId=\"formBasicEmail\">\r\n          <Form.Label>계정을 정말 비활성화 하실건가요?</Form.Label>\r\n          <PHFormText defaultChildren={accountDeactivateDescription} />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            autoComplete='current-password'\r\n            placeholder='여기에 현재 사용 중이신 비밀번호를 적어주세요.'\r\n            disabled={accountDeactivateFormData.isProcessing}\r\n            value={accountDeactivateFormData.pwTextFieldValue}\r\n            onChange={handleInputChange('pw')} />\r\n          <PHFormText>{accountDeactivateFormData.pwNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n\r\n        <PHFormText>{accountDeactivateFormData.accountDeactivateFailedReason}</PHFormText>\r\n\r\n        <div className='accountSubmitBtnContainer'>\r\n          <Button\r\n            variant='primary'\r\n            disabled={accountDeactivateFormData.isProcessing}\r\n            onClick={() => navigate(-1)}>\r\n            취소하기\r\n          </Button>\r\n\r\n          <PHSpinnerButton\r\n            variant='danger'\r\n            type='submit'\r\n            size={false}\r\n            style={{ margin: undefined }}\r\n            disabled={shouldSubmitBtnDisabled()}\r\n            onClick={tryAccountDeactivate}\r\n            showSpinner={accountDeactivateFormData.isProcessing}>\r\n            비활성화하기\r\n          </PHSpinnerButton>\r\n        </div>\r\n      </Form>\r\n    </aside>\r\n  </section>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}