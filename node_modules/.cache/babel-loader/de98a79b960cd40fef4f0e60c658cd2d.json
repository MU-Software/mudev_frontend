{"ast":null,"code":"// (c) MUsoftware 2022\n'use strict';\n\nimport { FrostError } from \"../common/error\";\n\nclass APIResult {\n  constructor(responseBody) {\n    var _responseBody$success, _responseBody$code, _responseBody$sub_cod, _responseBody$message, _responseBody$data;\n\n    this.success = false;\n    this.code = -1;\n    this.subCode = '';\n    this.message = '';\n    this.data = {};\n    if (!responseBody) throw new FrostError('서버에서 받은 응답을 이해하지 못했어요,\\n잠시 후에 다시 시도해주세요.', '서버에서 받은 데이터를 파싱하지 못했습니다.', -1);\n    this.success = (_responseBody$success = responseBody.success) !== null && _responseBody$success !== void 0 ? _responseBody$success : false;\n    this.code = parseInt((_responseBody$code = responseBody.code) !== null && _responseBody$code !== void 0 ? _responseBody$code : -1, 10);\n    this.subCode = (_responseBody$sub_cod = responseBody.sub_code) !== null && _responseBody$sub_cod !== void 0 ? _responseBody$sub_cod : '';\n    this.message = (_responseBody$message = responseBody.message) !== null && _responseBody$message !== void 0 ? _responseBody$message : '';\n    this.data = (_responseBody$data = responseBody.data) !== null && _responseBody$data !== void 0 ? _responseBody$data : {};\n\n    if (!this.success) {\n      if (this.subCode == 'request.body.invalid' || this.subCode == 'request.body.empty') {\n        throw new FrostError('알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.', '클라이언트가 요청할 데이터를 제대로 보내지 않았어요.', this.code);\n      } else if (this.subCode.startsWith('request.header')) {\n        throw new FrostError('알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.', '클라이언트가 요청의 말머리를 제대로 보내지 않았어요.', this.code);\n      } else if (this.subCode.startsWith('backend')) {\n        throw new FrostError('서버에 알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.', '서버가 영 좋지 않은 상황이에요.', this.code);\n      } else if (this.subCode.startsWith('http')) {\n        throw new FrostError('서버에서 무엇을 할지 모르는 요청이에요...', this.subCode, this.code);\n      } else if (this.subCode.startsWith('refresh_token')) {\n        throw new FrostError('로그인 정보가 올바르지 않아요,\\n죄송하지만 다시 로그인 해주세요.', `서버가 ${this.subCode}를 반환했습니다.`, this.code);\n      } else if (this.subCode.startsWith('access_token')) {\n        // Maybe access token's time is not expired, but it's revoked?\n        // We need to retry this request after force token refresh.\n        throw new FrostError('로그인 정보가 올바르지 않아요,\\n죄송하지만 다시 로그인 해주세요.', `AccessToken이 올바르지 않고, 서버가 ${this.subCode}를 반환했습니다.`, this.code, true);\n      } else if (this.subCode === 'user.not_signed_in') {\n        throw new FrostError('로그인이 되어 있지 않아요,\\n로그인 해주세요.', '서버가 \"user.not_signed_in\"를 반환했습니다.', this.code);\n      } else {\n        return this; // throw new FrostError(\n        //   '서버와의 통신에서 문제가 발생했어요,\\n잠시 후 다시 시도해주세요.',\n        //   `서버가 \"${this.subCode === '' ? \"sub_code 없음\" : this.subCode}\"를 반환했습니다.`, this.code);\n      }\n    }\n  }\n\n}\n\nexport { APIResult };","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/network/api_response.ts"],"names":["FrostError","APIResult","constructor","responseBody","success","code","subCode","message","data","parseInt","sub_code","startsWith"],"mappings":"AAAA;AACA;;AAEA,SAASA,UAAT,QAA2B,iBAA3B;;AAEA,MAAMC,SAAN,CAAgB;AAOdC,EAAAA,WAAW,CAACC,YAAD,EAAoB;AAAA;;AAAA,SAN/BC,OAM+B,GANZ,KAMY;AAAA,SAL/BC,IAK+B,GALhB,CAAC,CAKe;AAAA,SAJ/BC,OAI+B,GAJb,EAIa;AAAA,SAH/BC,OAG+B,GAHb,EAGa;AAAA,SAF/BC,IAE+B,GAFnB,EAEmB;AAC7B,QAAI,CAACL,YAAL,EACE,MAAM,IAAIH,UAAJ,CACJ,0CADI,EAEJ,0BAFI,EAEwB,CAAC,CAFzB,CAAN;AAIF,SAAKI,OAAL,4BAAeD,YAAY,CAACC,OAA5B,yEAAuC,KAAvC;AACA,SAAKC,IAAL,GAAYI,QAAQ,uBAAEN,YAAY,CAACE,IAAf,mEAAuB,CAAC,CAAxB,EAA4B,EAA5B,CAApB;AACA,SAAKC,OAAL,4BAAeH,YAAY,CAACO,QAA5B,yEAAwC,EAAxC;AACA,SAAKH,OAAL,4BAAeJ,YAAY,CAACI,OAA5B,yEAAuC,EAAvC;AACA,SAAKC,IAAL,yBAAYL,YAAY,CAACK,IAAzB,mEAAiC,EAAjC;;AAEA,QAAI,CAAC,KAAKJ,OAAV,EAAmB;AACjB,UAAI,KAAKE,OAAL,IAAgB,sBAAhB,IAA0C,KAAKA,OAAL,IAAgB,oBAA9D,EAAoF;AAClF,cAAM,IAAIN,UAAJ,CACJ,qCADI,EAEJ,+BAFI,EAE6B,KAAKK,IAFlC,CAAN;AAGD,OAJD,MAIO,IAAI,KAAKC,OAAL,CAAaK,UAAb,CAAwB,gBAAxB,CAAJ,EAA+C;AACpD,cAAM,IAAIX,UAAJ,CACJ,qCADI,EAEJ,+BAFI,EAE6B,KAAKK,IAFlC,CAAN;AAGD,OAJM,MAIA,IAAI,KAAKC,OAAL,CAAaK,UAAb,CAAwB,SAAxB,CAAJ,EAAwC;AAC7C,cAAM,IAAIX,UAAJ,CACJ,yCADI,EAEJ,oBAFI,EAEkB,KAAKK,IAFvB,CAAN;AAGD,OAJM,MAIA,IAAI,KAAKC,OAAL,CAAaK,UAAb,CAAwB,MAAxB,CAAJ,EAAqC;AAC1C,cAAM,IAAIX,UAAJ,CACJ,0BADI,EAEJ,KAAKM,OAFD,EAEU,KAAKD,IAFf,CAAN;AAGD,OAJM,MAIA,IAAI,KAAKC,OAAL,CAAaK,UAAb,CAAwB,eAAxB,CAAJ,EAA8C;AACnD,cAAM,IAAIX,UAAJ,CACJ,uCADI,EAEH,OAAM,KAAKM,OAAQ,WAFhB,EAE4B,KAAKD,IAFjC,CAAN;AAGD,OAJM,MAIA,IAAI,KAAKC,OAAL,CAAaK,UAAb,CAAwB,cAAxB,CAAJ,EAA6C;AAClD;AACA;AACA,cAAM,IAAIX,UAAJ,CACJ,uCADI,EAEH,6BAA4B,KAAKM,OAAQ,WAFtC,EAGJ,KAAKD,IAHD,EAGO,IAHP,CAAN;AAID,OAPM,MAOA,IAAI,KAAKC,OAAL,KAAiB,oBAArB,EAA2C;AAChD,cAAM,IAAIN,UAAJ,CACJ,4BADI,EAEJ,mCAFI,EAEiC,KAAKK,IAFtC,CAAN;AAGD,OAJM,MAIA;AACL,eAAO,IAAP,CADK,CAEL;AACA;AACA;AACD;AACF;AACF;;AA1Da;;AA6DhB,SAASJ,SAAT","sourcesContent":["// (c) MUsoftware 2022\r\n'use strict';\r\n\r\nimport { FrostError } from \"../common/error\";\r\n\r\nclass APIResult {\r\n  success: boolean = false;\r\n  code: number = -1;\r\n  subCode: string = '';\r\n  message: string = '';\r\n  data: any = {};\r\n\r\n  constructor(responseBody: any) {\r\n    if (!responseBody)\r\n      throw new FrostError(\r\n        '서버에서 받은 응답을 이해하지 못했어요,\\n잠시 후에 다시 시도해주세요.',\r\n        '서버에서 받은 데이터를 파싱하지 못했습니다.', -1);\r\n\r\n    this.success = responseBody.success ?? false;\r\n    this.code = parseInt((responseBody.code ?? -1), 10);\r\n    this.subCode = responseBody.sub_code ?? '';\r\n    this.message = responseBody.message ?? '';\r\n    this.data = responseBody.data ?? {};\r\n\r\n    if (!this.success) {\r\n      if (this.subCode == 'request.body.invalid' || this.subCode == 'request.body.empty') {\r\n        throw new FrostError(\r\n          '알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.',\r\n          '클라이언트가 요청할 데이터를 제대로 보내지 않았어요.', this.code);\r\n      } else if (this.subCode.startsWith('request.header')) {\r\n        throw new FrostError(\r\n          '알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.',\r\n          '클라이언트가 요청의 말머리를 제대로 보내지 않았어요.', this.code);\r\n      } else if (this.subCode.startsWith('backend')) {\r\n        throw new FrostError(\r\n          '서버에 알 수 없는 문제가 발생했어요,\\n잠시 후에 다시 시도해주세요.',\r\n          '서버가 영 좋지 않은 상황이에요.', this.code);\r\n      } else if (this.subCode.startsWith('http')) {\r\n        throw new FrostError(\r\n          '서버에서 무엇을 할지 모르는 요청이에요...',\r\n          this.subCode, this.code);\r\n      } else if (this.subCode.startsWith('refresh_token')) {\r\n        throw new FrostError(\r\n          '로그인 정보가 올바르지 않아요,\\n죄송하지만 다시 로그인 해주세요.',\r\n          `서버가 ${this.subCode}를 반환했습니다.`, this.code);\r\n      } else if (this.subCode.startsWith('access_token')) {\r\n        // Maybe access token's time is not expired, but it's revoked?\r\n        // We need to retry this request after force token refresh.\r\n        throw new FrostError(\r\n          '로그인 정보가 올바르지 않아요,\\n죄송하지만 다시 로그인 해주세요.',\r\n          `AccessToken이 올바르지 않고, 서버가 ${this.subCode}를 반환했습니다.`,\r\n          this.code, true);\r\n      } else if (this.subCode === 'user.not_signed_in') {\r\n        throw new FrostError(\r\n          '로그인이 되어 있지 않아요,\\n로그인 해주세요.',\r\n          '서버가 \"user.not_signed_in\"를 반환했습니다.', this.code);\r\n      } else {\r\n        return this;\r\n        // throw new FrostError(\r\n        //   '서버와의 통신에서 문제가 발생했어요,\\n잠시 후 다시 시도해주세요.',\r\n        //   `서버가 \"${this.subCode === '' ? \"sub_code 없음\" : this.subCode}\"를 반환했습니다.`, this.code);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { APIResult };\r\n"]},"metadata":{},"sourceType":"module"}