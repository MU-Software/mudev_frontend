{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\element\\\\playlistCreateModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { CustomFormText } from '../../element/CustomFormText';\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistCreateModal = props => {\n  _s();\n\n  const [playlistCreateModalState, setPlaylistCreateModalState] = useState({\n    isProcessing: false\n  });\n\n  const onPlaylistCreateFunc = evt => {\n    console.log(evt);\n  };\n\n  const closeModalFunc = () => props.setModalShowState(false);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.modalShowState,\n    onHide: closeModalFunc,\n    backdrop: \"static\",\n    keyboard: false,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"playerCreateFormGroup\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC544\\uC774\\uB514 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"ID / Email\",\n            disabled: playlistCreateModalState.isProcessing // value={playlistCreateModalState.idTextFieldValue}\n            // onChange={\n            //   (event) => setSignInFormData({\n            //     ...signInFormData,\n            //     idTextFieldValue: event.target.value,\n            //   })}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: playlistCreateModalState.idNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n          className: \"playerCreateFormGroup\",\n          children: playlistCreateModalState.signInFailedReason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n        variant: \"secondary\",\n        size: false,\n        style: {\n          margin: undefined\n        },\n        onClick: closeModalFunc,\n        showSpinner: playlistCreateModalState.isProcessing,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n        variant: \"primary\",\n        size: false,\n        style: {\n          margin: undefined\n        },\n        onClick: onPlaylistCreateFunc,\n        showSpinner: playlistCreateModalState.isProcessing,\n        children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PlaylistCreateModal, \"+zSeuuAOPjPnR3FUXJKb0lCyzKY=\");\n\n_c = PlaylistCreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCreateModal\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/element/playlistCreateModal.jsx"],"names":["React","useState","Modal","Form","CustomFormText","PHSpinnerButton","PlaylistCreateModal","props","playlistCreateModalState","setPlaylistCreateModalState","isProcessing","onPlaylistCreateFunc","evt","console","log","closeModalFunc","setModalShowState","modalShowState","idNotUsableReason","signInFailedReason","margin","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAyC;AAAA;;AAC1E,QAAM,CAACC,wBAAD,EAA2BC,2BAA3B,IAA0DR,QAAQ,CAAC;AACvES,IAAAA,YAAY,EAAE;AADyD,GAAD,CAAxE;;AAIA,QAAMC,oBAAoB,GAAIC,GAAD,IAAS;AAAEC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAmB,GAA3D;;AACA,QAAMG,cAAc,GAAG,MAAMR,KAAK,CAACS,iBAAN,CAAwB,KAAxB,CAA7B;;AAEA,sBAAO,QAAC,KAAD;AACL,IAAA,IAAI,EAAET,KAAK,CAACU,cADP;AAEL,IAAA,MAAM,EAAEF,cAFH;AAGL,IAAA,QAAQ,EAAC,QAHJ;AAIL,IAAA,QAAQ,EAAE,KAJL;AAKL,uBAAgB,+BALX;AAML,IAAA,QAAQ,MANH;AAAA,4BAOL,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPK,eAUL,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,uBAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,QAAQ,EAAEP,wBAAwB,CAACE,YAHrC,CAIE;AACA;AACA;AACA;AACA;AACA;;AATF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE,QAAC,cAAD;AAAA,sBAAiBF,wBAAwB,CAACU;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,uBAA1B;AAAA,oBAAmDV,wBAAwB,CAACW;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVK,eAgCL,QAAC,KAAD,CAAO,MAAP;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,IAAI,EAAE,KAFR;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAEC;AAAV,SAHT;AAIE,QAAA,OAAO,EAAEN,cAJX;AAKE,QAAA,WAAW,EAAEP,wBAAwB,CAACE,YALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,eAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,IAAI,EAAE,KAFR;AAGE,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAEC;AAAV,SAHT;AAIE,QAAA,OAAO,EAAEV,oBAJX;AAKE,QAAA,WAAW,EAAEH,wBAAwB,CAACE,YALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAoDD,CA5DM;;GAAMJ,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { CustomFormText } from '../../element/CustomFormText';\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\n\r\ninterface PlaylistCreateModalPropTypes {\r\n  modalShowState: boolean;\r\n  setModalShowState: (boolean) => void;\r\n}\r\n\r\nexport const PlaylistCreateModal = (props: PlaylistCreateModalPropTypes) => {\r\n  const [playlistCreateModalState, setPlaylistCreateModalState] = useState({\r\n    isProcessing: false,\r\n  });\r\n\r\n  const onPlaylistCreateFunc = (evt) => { console.log(evt); };\r\n  const closeModalFunc = () => props.setModalShowState(false);\r\n\r\n  return <Modal\r\n    show={props.modalShowState}\r\n    onHide={closeModalFunc}\r\n    backdrop='static'\r\n    keyboard={false}\r\n    aria-labelledby='contained-modal-title-vcenter'\r\n    centered >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>재생목록 만들기</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Form>\r\n        <Form.Group className='playerCreateFormGroup'>\r\n          <Form.Label>아이디 또는 이메일</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='ID / Email'\r\n            disabled={playlistCreateModalState.isProcessing}\r\n            // value={playlistCreateModalState.idTextFieldValue}\r\n            // onChange={\r\n            //   (event) => setSignInFormData({\r\n            //     ...signInFormData,\r\n            //     idTextFieldValue: event.target.value,\r\n            //   })}\r\n          />\r\n          <CustomFormText>{playlistCreateModalState.idNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <CustomFormText className='playerCreateFormGroup'>{playlistCreateModalState.signInFailedReason}</CustomFormText>\r\n      </Form>\r\n\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <PHSpinnerButton\r\n        variant='secondary'\r\n        size={false}\r\n        style={{ margin: undefined }}\r\n        onClick={closeModalFunc}\r\n        showSpinner={playlistCreateModalState.isProcessing}>\r\n        취소\r\n      </PHSpinnerButton>\r\n\r\n      <PHSpinnerButton\r\n        variant='primary'\r\n        size={false}\r\n        style={{ margin: undefined }}\r\n        onClick={onPlaylistCreateFunc}\r\n        showSpinner={playlistCreateModalState.isProcessing}>\r\n        재생목록 만들기\r\n      </PHSpinnerButton>\r\n    </Modal.Footer>\r\n  </Modal>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}