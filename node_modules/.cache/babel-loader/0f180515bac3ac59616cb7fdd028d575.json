{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\account\\\\signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\nimport { CustomFormText } from './element/CustomFormText';\nimport './account.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountSignUp = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [signUpFormData, setSignUpFormData] = useState({\n    idTextFieldValue: '',\n    pwTextFieldValue: '',\n    pwReTypeTextFieldValue: '',\n    emailTextFieldValue: '',\n    nickTextFieldValue: '',\n    idNotUsableReason: null,\n    nickNotUsableReason: null,\n    emailNotUsableReason: null,\n    passwordNotUsableReason: null,\n    passwordReTypeNotUsableReason: null,\n    signUpFailedReason: null,\n    isProcessing: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"accountMain\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"accountAside\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formSignUpId\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            disabled: signUpFormData.isProcessing,\n            value: signUpFormData.idTextFieldValue,\n            onChange: event => setSignUpFormData({ ...signUpFormData,\n              idTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signUpFormData.idNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formSignUpNick\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBCC4\\uCE6D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            disabled: signUpFormData.isProcessing,\n            value: signUpFormData.nickTextFieldValue,\n            onChange: event => setSignUpFormData({ ...signUpFormData,\n              nickTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signUpFormData.nickNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formSignUpEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"someone@example.com\",\n            disabled: signUpFormData.isProcessing,\n            value: signUpFormData.emailTextFieldValue,\n            onChange: event => setSignUpFormData({ ...signUpFormData,\n              emailTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signUpFormData.emailNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formSignUpPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            disabled: signUpFormData.isProcessing,\n            value: signUpFormData.pwTextFieldValue,\n            onChange: event => setSignUpFormData({ ...signUpFormData,\n              pwTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            defaultChildren: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 8\\uC790 \\uC774\\uC0C1, \\uB300\\uC18C\\uBB38\\uC790/\\uC22B\\uC790/\\uD2B9\\uC218\\uBB38\\uC790 \\uC911 2\\uAC00\\uC9C0 \\uC774\\uC0C1\\uC758 \\uC870\\uD569\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD574\\uC8FC\\uC138\\uC694.\",\n            children: signUpFormData.passwordNotUsableReason ? '비밀번호는 8자 이상, 대소문자/숫자/특수문자 중 2가지 이상의 조합으로 사용해주세요.' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"accountAsideFormGroup\",\n          controlId: \"formSignUpPasswordReType\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"\\uC704\\uC5D0 \\uC785\\uB825\\uD558\\uC2E0 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            disabled: signUpFormData.isProcessing,\n            value: signUpFormData.pwReTypeTextFieldValue,\n            onChange: event => setSignUpFormData({ ...signUpFormData,\n              pwReTypeTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n            children: signUpFormData.passwordReTypeNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomFormText, {\n          className: \"accountAsideFormGroup\",\n          children: signUpFormData.signUpFailedReason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accountSubmitBtnContainer\",\n          children: [/*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n            variant: \"primary\",\n            type: \"submit\",\n            size: false,\n            style: {\n              margin: undefined\n            },\n            onClick: () => {\n              setSignUpFormData({ ...signUpFormData,\n                isProcessing: true\n              });\n              setTimeout(() => {\n                setSignUpFormData({ ...signUpFormData,\n                  isProcessing: false\n                });\n              }, 5000);\n            },\n            showSpinner: signUpFormData.isProcessing,\n            children: \"\\uACC4\\uC815 \\uB9CC\\uB4E4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            onClick: () => navigate('/account/signin'),\n            children: \"\\uB85C\\uADF8\\uC778\\uD558\\uB7EC \\uAC00\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AccountSignUp, \"kdz8H8Bk9bT6tILZhtHyMDqdzW4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AccountSignUp;\nexport { AccountSignUp };\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountSignUp\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/account/signup.jsx"],"names":["React","Component","useState","useNavigate","Button","Form","PHSpinnerButton","CustomFormText","AccountSignUp","navigate","signUpFormData","setSignUpFormData","idTextFieldValue","pwTextFieldValue","pwReTypeTextFieldValue","emailTextFieldValue","nickTextFieldValue","idNotUsableReason","nickNotUsableReason","emailNotUsableReason","passwordNotUsableReason","passwordReTypeNotUsableReason","signUpFailedReason","isProcessing","event","target","value","margin","undefined","setTimeout"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\nimport { CustomFormText } from './element/CustomFormText';\r\nimport './account.css';\r\n\r\n\r\nconst AccountSignUp = () => {\r\n  const navigate = useNavigate();\r\n  const [signUpFormData, setSignUpFormData] = useState({\r\n    idTextFieldValue: '',\r\n    pwTextFieldValue: '',\r\n    pwReTypeTextFieldValue: '',\r\n    emailTextFieldValue: '',\r\n    nickTextFieldValue: '',\r\n\r\n    idNotUsableReason: null,\r\n    nickNotUsableReason: null,\r\n    emailNotUsableReason: null,\r\n    passwordNotUsableReason: null,\r\n    passwordReTypeNotUsableReason: null,\r\n    signUpFailedReason: null,\r\n    isProcessing: false,\r\n  });\r\n\r\n  return <section className='accountMain'>\r\n    <header>\r\n      <h2>계정 만들기</h2>\r\n    </header>\r\n    <aside className='accountAside'>\r\n      <Form>\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpId'>\r\n          <Form.Label>아이디</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='아이디를 입력해주세요'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.idTextFieldValue}\r\n            onChange={\r\n              (event) => setSignUpFormData({\r\n                ...signUpFormData,\r\n                idTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <CustomFormText>{signUpFormData.idNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpNick'>\r\n          <Form.Label>별칭</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='닉네임을 입력해주세요'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.nickTextFieldValue}\r\n            onChange={\r\n              (event) => setSignUpFormData({\r\n                ...signUpFormData,\r\n                nickTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <CustomFormText>{signUpFormData.nickNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpEmail'>\r\n          <Form.Label>이메일</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='someone@example.com'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.emailTextFieldValue}\r\n            onChange={\r\n              (event) => setSignUpFormData({\r\n                ...signUpFormData,\r\n                emailTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <CustomFormText>{signUpFormData.emailNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpPassword'>\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='비밀번호'\r\n\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.pwTextFieldValue}\r\n            onChange={\r\n              (event) => setSignUpFormData({\r\n                ...signUpFormData,\r\n                pwTextFieldValue: event.target.value,\r\n              })}\r\n            />\r\n          <CustomFormText defaultChildren='비밀번호는 8자 이상, 대소문자/숫자/특수문자 중 2가지 이상의 조합으로 사용해주세요.'>\r\n            {signUpFormData.passwordNotUsableReason ? '비밀번호는 8자 이상, 대소문자/숫자/특수문자 중 2가지 이상의 조합으로 사용해주세요.' : ''}\r\n          </CustomFormText>\r\n        </Form.Group>\r\n\r\n        <Form.Group className='accountAsideFormGroup' controlId='formSignUpPasswordReType'>\r\n          <Form.Label>비밀번호 확인</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='위에 입력하신 비밀번호를 다시 입력해주세요'\r\n            disabled={signUpFormData.isProcessing}\r\n            value={signUpFormData.pwReTypeTextFieldValue}\r\n            onChange={\r\n              (event) => setSignUpFormData({\r\n                ...signUpFormData,\r\n                pwReTypeTextFieldValue: event.target.value,\r\n              })}\r\n            />\r\n          <CustomFormText>{signUpFormData.passwordReTypeNotUsableReason}</CustomFormText>\r\n        </Form.Group>\r\n\r\n        <CustomFormText className='accountAsideFormGroup'>{signUpFormData.signUpFailedReason}</CustomFormText>\r\n\r\n        <div className='accountSubmitBtnContainer'>\r\n          <PHSpinnerButton\r\n            variant='primary'\r\n            type='submit'\r\n            size={false}\r\n            style={{ margin: undefined }}\r\n            onClick={() => {\r\n              setSignUpFormData({\r\n                ...signUpFormData,\r\n                isProcessing: true,\r\n              });\r\n              setTimeout(() => {\r\n                setSignUpFormData({\r\n                  ...signUpFormData,\r\n                  isProcessing: false,\r\n                });\r\n              }, 5000);\r\n            }}\r\n            showSpinner={signUpFormData.isProcessing}>\r\n            계정 만들기\r\n          </PHSpinnerButton>\r\n\r\n          <Button variant='outline-light' onClick={() => navigate('/account/signin')} >\r\n            로그인하러 가기\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </aside>\r\n  </section>;\r\n}\r\n\r\nexport { AccountSignUp };\r\n"]},"metadata":{},"sourceType":"module"}