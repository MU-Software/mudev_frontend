{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\main.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Oval } from 'react-loader-spinner';\nimport FrostAPI from 'src/network/api';\nimport { FrostError } from 'src/common/error';\nimport { PHButton } from '@src/ui/common/element/muButton';\nimport { Divider } from '@src/ui/common/element/divider';\nimport './main.css';\nimport { PlayCoPlaylistList } from './playlistList';\nimport { Playlist, PlaylistItem, PlaylistListener, PlaylistDetail } from './playlistResource';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlaycoMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.frostAPI = new FrostAPI();\n    this.state = {\n      isSignedIn: null,\n      // Three state boolean\n      playlistData: [new Playlist({\n        uuid: 0,\n        index: 0,\n        name: '테스트',\n        created_by_uuid: 0,\n        created_by_nick: '',\n        public_accessable: false,\n        public_modifiable: false,\n        current_playing_item_index: 1,\n        items: []\n      }), new Playlist({\n        uuid: 0,\n        index: 0,\n        name: '테스트',\n        created_by_uuid: 0,\n        created_by_nick: '',\n        public_accessable: false,\n        public_modifiable: false,\n        current_playing_item_index: 1,\n        items: [new PlaylistItem({\n          uuid: 0,\n          index: 0,\n          name: 'q',\n          data: {},\n          added_by_uuid: 0,\n          added_by_nick: '',\n          link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\n          link_type: 'youtube',\n          link_id: '2Dw7NFm1ZfY',\n          current_listener: [new PlaylistListener({\n            uuid: 1,\n            name: '123'\n          }), new PlaylistListener({\n            uuid: 2,\n            name: '123'\n          }), new PlaylistListener({\n            uuid: 3,\n            name: '123'\n          })]\n        }), new PlaylistItem({\n          uuid: 0,\n          index: 0,\n          name: 'q',\n          data: {},\n          added_by_uuid: 0,\n          added_by_nick: '',\n          link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\n          link_type: 'youtube',\n          link_id: '2Dw7NFm1ZfY',\n          current_listener: [new PlaylistListener({\n            uuid: 4,\n            name: '123'\n          }), new PlaylistListener({\n            uuid: 5,\n            name: '123'\n          }), new PlaylistListener({\n            uuid: 6,\n            name: '123'\n          })]\n        })]\n      })]\n    };\n  }\n\n  componentDidMount() {\n    this.frostAPI.isSignedIn(true).then(signedInResult => this.setState({\n      isSignedIn: signedInResult\n    }));\n  }\n\n  render() {\n    let navigate = useNavigate();\n    const {\n      isSignedIn,\n      playlistData\n    } = this.state; // if isSignedIn is null, then frostAPI is refreshing the token.\n    // if isSignedIn is false, then we need to sign-in.\n    // else (if isSignedIn is true), then we can show the list of playlists.\n\n    let playCoBody = isSignedIn ? /*#__PURE__*/_jsxDEV(PlayCoPlaylistList, {\n      playlistList: this.state.playlistData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : isSignedIn === false ? /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [\"\\uC774 \\uAE30\\uB2A5\\uC740 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD574\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n        onClick: () => navigate('/account/signin'),\n        variant: \"success\",\n        size: \"medium\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Oval, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 18\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"playCoMain\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PlayCO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C, \\uBA40\\uB9AC\\uC11C, \\uADF8\\uB7EC\\uB098 \\uAC19\\uC774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), playCoBody]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\n;\nexport { PlaycoMain };","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/main.jsx"],"names":["React","useState","useEffect","useNavigate","Oval","FrostAPI","FrostError","PHButton","Divider","PlayCoPlaylistList","Playlist","PlaylistItem","PlaylistListener","PlaylistDetail","PlaycoMain","Component","constructor","props","frostAPI","state","isSignedIn","playlistData","uuid","index","name","created_by_uuid","created_by_nick","public_accessable","public_modifiable","current_playing_item_index","items","data","added_by_uuid","added_by_nick","link","link_type","link_id","current_listener","componentDidMount","then","signedInResult","setState","render","navigate","playCoBody"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { Oval } from 'react-loader-spinner';\r\n\r\nimport FrostAPI from 'src/network/api';\r\nimport { FrostError } from 'src/common/error';\r\nimport { PHButton } from '@src/ui/common/element/muButton';\r\nimport { Divider } from '@src/ui/common/element/divider';\r\nimport './main.css';\r\n\r\nimport { PlayCoPlaylistList } from './playlistList';\r\nimport {\r\n  Playlist,\r\n  PlaylistItem,\r\n  PlaylistListener,\r\n  PlaylistDetail\r\n} from './playlistResource';\r\n\r\nclass PlaycoMain extends React.Component {\r\n  frostAPI = new FrostAPI();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isSignedIn: null, // Three state boolean\r\n      playlistData: [\r\n        new Playlist({\r\n          uuid: 0,\r\n          index: 0,\r\n          name: '테스트',\r\n          created_by_uuid: 0,\r\n          created_by_nick: '',\r\n          public_accessable: false,\r\n          public_modifiable: false,\r\n          current_playing_item_index: 1,\r\n          items: []\r\n        }),\r\n        new Playlist({\r\n          uuid: 0,\r\n          index: 0,\r\n          name: '테스트',\r\n          created_by_uuid: 0,\r\n          created_by_nick: '',\r\n          public_accessable: false,\r\n          public_modifiable: false,\r\n          current_playing_item_index: 1,\r\n          items: [\r\n            new PlaylistItem({\r\n              uuid: 0,\r\n              index: 0,\r\n              name: 'q',\r\n              data: {},\r\n              added_by_uuid: 0,\r\n              added_by_nick: '',\r\n              link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\r\n              link_type: 'youtube',\r\n              link_id: '2Dw7NFm1ZfY',\r\n              current_listener: [\r\n                new PlaylistListener({ uuid: 1, name: '123' }),\r\n                new PlaylistListener({ uuid: 2, name: '123' }),\r\n                new PlaylistListener({ uuid: 3, name: '123' })\r\n              ],\r\n            }),\r\n            new PlaylistItem({\r\n              uuid: 0,\r\n              index: 0,\r\n              name: 'q',\r\n              data: {},\r\n              added_by_uuid: 0,\r\n              added_by_nick: '',\r\n              link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\r\n              link_type: 'youtube',\r\n              link_id: '2Dw7NFm1ZfY',\r\n              current_listener: [\r\n                new PlaylistListener({ uuid: 4, name: '123' }),\r\n                new PlaylistListener({ uuid: 5, name: '123' }),\r\n                new PlaylistListener({ uuid: 6, name: '123' })\r\n              ],\r\n            }),\r\n          ],\r\n        }),\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.frostAPI.isSignedIn(true).then((signedInResult) => this.setState({ isSignedIn: signedInResult }));\r\n  }\r\n\r\n  render() {\r\n    let navigate = useNavigate();\r\n    const {isSignedIn, playlistData} = this.state;\r\n\r\n    // if isSignedIn is null, then frostAPI is refreshing the token.\r\n    // if isSignedIn is false, then we need to sign-in.\r\n    // else (if isSignedIn is true), then we can show the list of playlists.\r\n    let playCoBody = isSignedIn\r\n      ? <PlayCoPlaylistList playlistList={this.state.playlistData} />\r\n      : isSignedIn === false ? <aside>\r\n        이 기능은 로그인이 필요해요.<br />\r\n        <PHButton onClick={() => navigate('/account/signin')} variant='success' size='medium'>로그인</PHButton>\r\n      </aside> : <Oval />;\r\n\r\n    return <section className='playCoMain'>\r\n      <header>\r\n        <h2>PlayCO</h2>\r\n        <p>플레이리스트를, 멀리서, 그러나 같이</p>\r\n      </header>\r\n      <Divider style={{}} />\r\n      {playCoBody}\r\n    </section>\r\n  }\r\n};\r\n\r\nexport { PlaycoMain };\r\n"]},"metadata":{},"sourceType":"module"}