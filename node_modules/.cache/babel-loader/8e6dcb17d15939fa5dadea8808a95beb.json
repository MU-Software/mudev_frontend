{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\element\\\\playlistCreateModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { PHFormText } from 'src/ui/common/element/muFormText';\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton'; // import {\n//   ListRowLongTextType,\n//   L,\n//   ListRowInputType,\n//   ListRowButtonType,\n//   ListRow\n// } from 'src/ui/common/element/muListRow';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistCreateModal = props => {\n  _s();\n\n  const [playlistCreateModalState, setPlaylistCreateModalState] = useState({\n    isProcessing: false,\n    nameTextFieldValue: '',\n    nameNotUsableReason: '',\n    isPublicAccessable: false,\n    isPublicItemAppendable: false,\n    isPublicItemDeletable: false,\n    playlistCreationFailedReason: ''\n  });\n\n  const closeModalFunc = () => props.setModalShowState(false);\n\n  const handleInputChange = valueName => e => {\n    setPlaylistCreateModalState({ ...playlistCreateModalState,\n      [valueName]: e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    });\n  };\n\n  const tryPlaylistCreate = () => {\n    console.log(playlistCreateModalState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.modalShowState,\n    onHide: closeModalFunc,\n    backdrop: \"static\",\n    keyboard: false,\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            margin: 0\n          },\n          children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC0C8 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC758 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\uC0C8\\uB85C \\uB9CC\\uB4DC\\uC2E4 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC758 \\uC774\\uB984\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\",\n            disabled: playlistCreateModalState.isProcessing,\n            value: playlistCreateModalState.nameTextFieldValue,\n            onChange: event => setPlaylistCreateModalState({ ...playlistCreateModalState,\n              nameTextFieldValue: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n            children: playlistCreateModalState.nameNotUsableReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uC124\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Switch, {\n            onChange: handleInputChange('isPublicAccessable'),\n            value: playlistCreateModalState.isPublicAccessable // id='custom-switch'\n            ,\n            label: \"\\uB2E4\\uB978 \\uC0AC\\uB78C\\uC774 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC744 \\uBCFC \\uC218 \\uC788\\uC5B4\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Switch, {\n            onChange: handleInputChange('isPublicItemAppendable'),\n            value: playlistCreateModalState.isPublicItemAppendable // id='custom-switch'\n            ,\n            label: \"\\uB2E4\\uB978 \\uC0AC\\uB78C\\uC774 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uC601\\uC0C1\\uC744 \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uC5B4\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Switch, {\n            onChange: handleInputChange('isPublicItemDeletable'),\n            value: playlistCreateModalState.isPublicItemDeletable // id='custom-switch'\n            ,\n            label: \"\\uB2E4\\uB978 \\uC0AC\\uB78C\\uC774 \\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0\\uC11C \\uC601\\uC0C1\\uC744 \\uC0AD\\uC81C\\uD560 \\uC218 \\uC788\\uC5B4\\uC694.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n          children: playlistCreateModalState.playlistCreationFailedReason\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n        variant: \"secondary\",\n        size: false,\n        style: {\n          margin: undefined\n        },\n        onClick: closeModalFunc,\n        showSpinner: playlistCreateModalState.isProcessing,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHSpinnerButton, {\n        variant: \"primary\",\n        size: false,\n        style: {\n          margin: undefined\n        },\n        onClick: tryPlaylistCreate,\n        showSpinner: playlistCreateModalState.isProcessing,\n        children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PlaylistCreateModal, \"J48ZLVG8Jl/8StzH3ayL/GEv+zM=\");\n\n_c = PlaylistCreateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCreateModal\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/element/playlistCreateModal.jsx"],"names":["React","useState","Modal","Form","PHFormText","PHSpinnerButton","PlaylistCreateModal","props","playlistCreateModalState","setPlaylistCreateModalState","isProcessing","nameTextFieldValue","nameNotUsableReason","isPublicAccessable","isPublicItemAppendable","isPublicItemDeletable","playlistCreationFailedReason","closeModalFunc","setModalShowState","handleInputChange","valueName","e","target","type","checked","value","tryPlaylistCreate","console","log","modalShowState","margin","event","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport { PHSpinnerButton } from 'src/ui/common/element/muButton';\r\n// import {\r\n//   ListRowLongTextType,\r\n//   L,\r\n//   ListRowInputType,\r\n//   ListRowButtonType,\r\n//   ListRow\r\n// } from 'src/ui/common/element/muListRow';\r\n\r\ninterface PlaylistCreateModalPropTypes {\r\n  modalShowState: boolean;\r\n  setModalShowState: (boolean) => void;\r\n}\r\n\r\nexport const PlaylistCreateModal = (props: PlaylistCreateModalPropTypes) => {\r\n  const [playlistCreateModalState, setPlaylistCreateModalState] = useState({\r\n    isProcessing: false,\r\n\r\n    nameTextFieldValue: '',\r\n    nameNotUsableReason: '',\r\n    isPublicAccessable: false,\r\n    isPublicItemAppendable: false,\r\n    isPublicItemDeletable: false,\r\n\r\n    playlistCreationFailedReason: '',\r\n  });\r\n  const closeModalFunc = () => props.setModalShowState(false);\r\n  const handleInputChange = (valueName) => (e) => {\r\n    setPlaylistCreateModalState({\r\n      ...playlistCreateModalState,\r\n      [valueName]: (e.target.type === 'checkbox') ? e.target.checked : e.target.value,\r\n    });\r\n  }\r\n  const tryPlaylistCreate = () => {\r\n    console.log(playlistCreateModalState);\r\n  }\r\n\r\n  return <Modal\r\n    show={props.modalShowState}\r\n    onHide={closeModalFunc}\r\n    backdrop='static'\r\n    keyboard={false}\r\n    aria-labelledby='contained-modal-title-vcenter'\r\n    centered >\r\n    <Modal.Header closeButton>\r\n      <Modal.Title><h5 style={{ margin: 0, }}>재생목록 만들기</h5></Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>새 재생목록의 이름</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='새로 만드실 재생목록의 이름을 적어주세요'\r\n            disabled={playlistCreateModalState.isProcessing}\r\n            value={playlistCreateModalState.nameTextFieldValue}\r\n            onChange={\r\n              (event) => setPlaylistCreateModalState({\r\n                ...playlistCreateModalState,\r\n                nameTextFieldValue: event.target.value,\r\n              })}\r\n          />\r\n          <PHFormText>{playlistCreateModalState.nameNotUsableReason}</PHFormText>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>재생목록 설정</Form.Label>\r\n          <Form.Switch\r\n            onChange={handleInputChange('isPublicAccessable')}\r\n            value={playlistCreateModalState.isPublicAccessable}\r\n            // id='custom-switch'\r\n            label='다른 사람이 재생목록을 볼 수 있어요.' />\r\n          <Form.Switch\r\n            onChange={handleInputChange('isPublicItemAppendable')}\r\n            value={playlistCreateModalState.isPublicItemAppendable}\r\n            // id='custom-switch'\r\n            label='다른 사람이 재생목록에 영상을 추가할 수 있어요.' />\r\n          <Form.Switch\r\n            onChange={handleInputChange('isPublicItemDeletable')}\r\n            value={playlistCreateModalState.isPublicItemDeletable}\r\n            // id='custom-switch'\r\n            label='다른 사람이 재생목록에서 영상을 삭제할 수 있어요.' />\r\n        </Form.Group>\r\n        <PHFormText>{playlistCreateModalState.playlistCreationFailedReason}</PHFormText>\r\n      </Form>\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <PHSpinnerButton\r\n        variant='secondary'\r\n        size={false}\r\n        style={{ margin: undefined }}\r\n        onClick={closeModalFunc}\r\n        showSpinner={playlistCreateModalState.isProcessing}>\r\n        취소\r\n      </PHSpinnerButton>\r\n\r\n      <PHSpinnerButton\r\n        variant='primary'\r\n        size={false}\r\n        style={{ margin: undefined }}\r\n        onClick={tryPlaylistCreate}\r\n        showSpinner={playlistCreateModalState.isProcessing}>\r\n        재생목록 만들기\r\n      </PHSpinnerButton>\r\n    </Modal.Footer>\r\n  </Modal>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}