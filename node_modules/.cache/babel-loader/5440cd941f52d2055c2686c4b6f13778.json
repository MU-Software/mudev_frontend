{"ast":null,"code":"import _objectSpread from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/.yarn/cache/@babel-runtime-npm-7.12.1-b069f70b16-fb4b4c8f70.zip/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{Navbar,NavDropdown,Spinner,Form,FormCheck}from'react-bootstrap';import Icon from'@mdi/react';import{mdiAccountCircle}from'@mdi/js';import'./topbar.css';// import TopBarLogo from './logo_hanshin.svg';\nimport TopBarLogo from'./mu_logo.png';import{AccountInfo}from'src/redux/modules/account/model';import{refreshAccessTokenActionCreatorAsync,signOutActionCreatorAsync}from'src/redux/modules/account/action_creator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var TopBar=function TopBar(props){var navigate=useNavigate();var accountInfo=useSelector(function(state){return state.accountReducer;});var dispatch=useDispatch();var _useState=useState({shouldDropdownShow:false,darkModeState:'light',dummyVar:true}),_useState2=_slicedToArray(_useState,2),topBarState=_useState2[0],setTopBarState=_useState2[1];var isFirefox=navigator.userAgent.toLowerCase().indexOf('firefox')>-1;var navBarContainerStyle=_objectSpread({},!props.disableBlur?{backdropFilter:'blur(12px)'}:{});var toggleDropdownShown=function toggleDropdownShown(){setTopBarState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{shouldDropdownShow:!prevState.shouldDropdownShow});});};// Dark mode settings\nvar toggleDarkMode=function toggleDarkMode(evt){var _evt$target$checked,_evt$target;evt.stopPropagation();var currentState=(_evt$target$checked=evt===null||evt===void 0?void 0:(_evt$target=evt.target)===null||_evt$target===void 0?void 0:_evt$target.checked)!==null&&_evt$target$checked!==void 0?_evt$target$checked:topBarState.darkModeState==='dark';var darkModeValue=currentState?'dark':'light';localStorage.setItem('color-theme',darkModeValue);document.documentElement.setAttribute('color-theme',darkModeValue);setTopBarState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{darkModeState:darkModeValue});});};useEffect(function(){dispatch(refreshAccessTokenActionCreatorAsync());var isUserColorTheme=localStorage.getItem('color-theme');var isOsColorTheme=window.matchMedia('(prefers-color-scheme: dark)').matches?'dark':'light';var detectDarkMode=isUserColorTheme?isUserColorTheme:isOsColorTheme;localStorage.setItem('color-theme',detectDarkMode);document.documentElement.setAttribute('color-theme',detectDarkMode);setTopBarState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{darkModeState:detectDarkMode});});},[]);var goToSignIn=function goToSignIn(){return navigate('/account/signin');};var goToSignOut=function goToSignOut(){dispatch(signOutActionCreatorAsync());navigate('/');};return/*#__PURE__*/_jsx(\"div\",{className:\"muNavBarContainer\",style:navBarContainerStyle,children:/*#__PURE__*/_jsxs(Navbar,{className:\"muNavBar\",children:[/*#__PURE__*/_jsx(Navbar.Brand,{href:\"/\",className:\"muNavBarLogoContainer\",children:/*#__PURE__*/_jsx(\"img\",{src:TopBarLogo})}),/*#__PURE__*/_jsxs(NavDropdown,{align:\"end\",show:topBarState.shouldDropdownShow,onClick:toggleDropdownShown,title:/*#__PURE__*/_jsx(Icon,{path:mdiAccountCircle}),className:\"muNavBarDropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Header,{className:\"muNavBarDropdownItem\",children:accountInfo.isFetching?/*#__PURE__*/_jsxs(\"div\",{className:\"muNavBarDropdownAccountInfoLoadingContainer\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",size:\"sm\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"muNavBarDropdownAccountInfoLoadingText\",children:\"\\uACC4\\uC815 \\uC815\\uBCF4 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]}):accountInfo.isSignedIn?\"\\uC548\\uB155\\uD558\\uC138\\uC694, \".concat(accountInfo.nick,\"\\uB2D8!\"):'로그인을 해 주세요!'}),accountInfo.isSignedIn&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavDropdown.Divider,{className:\"muNavBarDropdownItem\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{className:\"muNavBarDropdownItem\",href:\"#\",onClick:function onClick(){return navigate('/account/setting');},children:\"\\uACC4\\uC815 \\uC124\\uC815\"})]}),/*#__PURE__*/_jsx(NavDropdown.Divider,{className:\"muNavBarDropdownItem\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{className:\"muNavBarDropdownItem\",href:\"#\",onClick:accountInfo.isSignedIn?goToSignOut:goToSignIn,children:accountInfo.isSignedIn?'로그아웃':'로그인'}),/*#__PURE__*/_jsx(NavDropdown.Divider,{className:\"muNavBarDropdownItem\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{as:\"div\",className:\"muNavBarDropdownItem\",onClick:toggleDarkMode,children:/*#__PURE__*/_jsx(FormCheck,{type:\"switch\"// className=\"muNavBarDarkmodeSwitch\"\n,id:\"muNavBarDarkModeSwitchID\",label:\"\\uB2E4\\uD06C\\uBAA8\\uB4DC \\uC124\\uC815\",onChange:toggleDarkMode,value:topBarState.darkModeState==='dark',checked:topBarState.darkModeState==='dark'})})]})]})});};","map":{"version":3,"sources":["C:/Users/MUsoftware/Documents/GitHub/mudev_frontend/src/ui/util/topbar.jsx"],"names":["React","useState","useEffect","useNavigate","useSelector","useDispatch","Navbar","NavDropdown","Spinner","Form","FormCheck","Icon","mdiAccountCircle","TopBarLogo","AccountInfo","refreshAccessTokenActionCreatorAsync","signOutActionCreatorAsync","TopBar","props","navigate","accountInfo","state","accountReducer","dispatch","shouldDropdownShow","darkModeState","dummyVar","topBarState","setTopBarState","isFirefox","navigator","userAgent","toLowerCase","indexOf","navBarContainerStyle","disableBlur","backdropFilter","toggleDropdownShown","prevState","toggleDarkMode","evt","stopPropagation","currentState","target","checked","darkModeValue","localStorage","setItem","document","documentElement","setAttribute","isUserColorTheme","getItem","isOsColorTheme","window","matchMedia","matches","detectDarkMode","goToSignIn","goToSignOut","isFetching","isSignedIn","nick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Navbar, NavDropdown, Spinner, Form, FormCheck } from 'react-bootstrap';\r\n\r\nimport Icon from '@mdi/react';\r\nimport { mdiAccountCircle } from '@mdi/js';\r\n\r\nimport './topbar.css';\r\n// import TopBarLogo from './logo_hanshin.svg';\r\nimport TopBarLogo from './mu_logo.png';\r\nimport { AccountInfo } from 'src/redux/modules/account/model';\r\nimport {\r\n  refreshAccessTokenActionCreatorAsync,\r\n  signOutActionCreatorAsync\r\n} from 'src/redux/modules/account/action_creator';\r\n\r\nexport const TopBar: React.FC = (props: { disableBlur?: boolean; }) => {\r\n\r\n  const navigate = useNavigate();\r\n  const accountInfo: AccountInfo = useSelector(state => state.accountReducer);\r\n  const dispatch = useDispatch();\r\n  const [topBarState, setTopBarState] = useState({\r\n    shouldDropdownShow: false,\r\n    darkModeState: 'light',\r\n    dummyVar: true,\r\n  });\r\n\r\n  const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\r\n  const navBarContainerStyle = {\r\n    ...(\r\n      !props.disableBlur\r\n        ? { backdropFilter: 'blur(12px)', } : {}),\r\n  };\r\n\r\n  const toggleDropdownShown = () => {\r\n    setTopBarState(prevState => ({\r\n      ...prevState,\r\n      shouldDropdownShow: !(prevState.shouldDropdownShow),\r\n    }));\r\n  };\r\n\r\n  // Dark mode settings\r\n  const toggleDarkMode = (evt) => {\r\n    evt.stopPropagation();\r\n    const currentState = evt?.target?.checked ?? topBarState.darkModeState === 'dark';\r\n    const darkModeValue = currentState ? 'dark' : 'light';\r\n    localStorage.setItem('color-theme', darkModeValue);\r\n    document.documentElement.setAttribute('color-theme', darkModeValue);\r\n    setTopBarState(prevState => ({ ...prevState, darkModeState: darkModeValue, }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshAccessTokenActionCreatorAsync());\r\n\r\n    const isUserColorTheme = localStorage.getItem('color-theme');\r\n    const isOsColorTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n    const detectDarkMode = isUserColorTheme ? isUserColorTheme : isOsColorTheme;\r\n    localStorage.setItem('color-theme', detectDarkMode);\r\n    document.documentElement.setAttribute('color-theme', detectDarkMode);\r\n    setTopBarState(prevState => ({ ...prevState, darkModeState: detectDarkMode, }));\r\n  }, []);\r\n\r\n  const goToSignIn = () => navigate('/account/signin');\r\n  const goToSignOut = () => {\r\n    dispatch(signOutActionCreatorAsync());\r\n    navigate('/');\r\n  };\r\n\r\n\r\n  return <div className='muNavBarContainer' style={navBarContainerStyle}>\r\n    <Navbar className='muNavBar'>\r\n      <Navbar.Brand href='/' className='muNavBarLogoContainer'>\r\n        <img src={TopBarLogo} />\r\n      </Navbar.Brand>\r\n\r\n      <NavDropdown\r\n        align='end'\r\n        show={topBarState.shouldDropdownShow}\r\n        onClick={toggleDropdownShown}\r\n        title={<Icon path={mdiAccountCircle} />}\r\n        className='muNavBarDropdown' >\r\n        <NavDropdown.Header className='muNavBarDropdownItem'>{\r\n          accountInfo.isFetching\r\n            ? <div className='muNavBarDropdownAccountInfoLoadingContainer'>\r\n              <Spinner animation='border' role='status' size='sm'>\r\n                <span className='visually-hidden'>Loading...</span>\r\n              </Spinner>\r\n              <div className='muNavBarDropdownAccountInfoLoadingText'>\r\n                계정 정보 불러오는 중...\r\n              </div>\r\n            </div>\r\n            : accountInfo.isSignedIn ? `안녕하세요, ${accountInfo.nick}님!` : '로그인을 해 주세요!'\r\n        }</NavDropdown.Header>\r\n        {\r\n          accountInfo.isSignedIn && <>\r\n            <NavDropdown.Divider className='muNavBarDropdownItem' />\r\n            <NavDropdown.Item\r\n              className='muNavBarDropdownItem'\r\n              href='#'\r\n              onClick={() => navigate('/account/setting')}>\r\n              계정 설정\r\n            </NavDropdown.Item>\r\n          </>\r\n        }\r\n        <NavDropdown.Divider className='muNavBarDropdownItem' />\r\n        <NavDropdown.Item\r\n          className='muNavBarDropdownItem'\r\n          href='#'\r\n          onClick={accountInfo.isSignedIn ? goToSignOut : goToSignIn}>\r\n          {accountInfo.isSignedIn ? '로그아웃' : '로그인'}\r\n        </NavDropdown.Item>\r\n\r\n        <NavDropdown.Divider className='muNavBarDropdownItem' />\r\n        <NavDropdown.Item as='div' className='muNavBarDropdownItem' onClick={toggleDarkMode}>\r\n          <FormCheck\r\n            type='switch'\r\n            // className=\"muNavBarDarkmodeSwitch\"\r\n            id='muNavBarDarkModeSwitchID'\r\n            label=\"다크모드 설정\"\r\n            onChange={toggleDarkMode}\r\n            value={topBarState.darkModeState === 'dark'}\r\n            checked={topBarState.darkModeState === 'dark'}\r\n          />\r\n        </NavDropdown.Item>\r\n      </NavDropdown>\r\n\r\n    </Navbar>\r\n  </div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}