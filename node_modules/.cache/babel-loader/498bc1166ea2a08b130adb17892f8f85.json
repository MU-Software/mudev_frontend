{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\playco\\\\playlistDetailPage.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\nimport ReactPlayer from 'react-player';\nimport Icon from '@mdi/react';\nimport { mdiPlus, mdiTools, mdiAccountCircle, mdiRefresh, mdiPlayCircle, mdiDelete } from '@mdi/js';\nimport { ListRow } from '../../common/element/muListRow';\nimport { Divider } from '../../common/element/divider';\nimport { PHButton } from '../../common/element/muButton';\nimport { PHFormText } from 'src/ui/common/element/muFormText';\nimport { PHAlertMessageBox } from 'src/ui/common/element/muAlertMsgBox';\nimport { YoutubeThumbnail } from '../../common/element/util/youtubeThumbnail';\nimport { PlaylistControlModal } from './element/playlistControlModal'; // import { PlayCoAPI } from './playco/api';\n\nimport { PlaylistListener, PlaylistItem, Playlist // PlaylistConfig\n} from './playco/model';\nimport './playlistDetailPage.css';\nimport { PlayCoAPI } from './playco/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isNumeric = val => /^\\d+$/.test(val);\n\nexport const PlaylistDetailDummyListener = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    height: '16pt'\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 60\n}, this);\n_c = PlaylistDetailDummyListener;\nexport const PlaylistDetailListener = props => {\n  return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n    placement: \"bottom\",\n    overlay: tooltipProps => /*#__PURE__*/_jsxDEV(Tooltip, { ...tooltipProps,\n      children: props.nick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 32\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Icon, {\n      path: mdiAccountCircle,\n      size: \"16pt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_c2 = PlaylistDetailListener;\nexport const PlaylistDetailItem = props => {\n  var _props$selected;\n\n  const isSelected = (_props$selected = props.selected) !== null && _props$selected !== void 0 ? _props$selected : false;\n  return /*#__PURE__*/_jsxDEV(ListRow, {\n    onClick: isSelected ? null : props.onClickFunc,\n    className: \"playCoPlaylistDetailListItem\",\n    itemWidth: [25, 70, 5],\n    style: {\n      // This cannot be moved to css,\n      // as we have to overwrite the element style of ListRow.\n      alignItems: 'center',\n      marginLeft: '0',\n      marginRight: '0',\n      borderRadius: '0.3rem',\n      ...(isSelected ? {\n        border: '1px solid rgba(255, 255, 255, 1)',\n        backgroundColor: 'rgba(0, 0, 0, 0.4)'\n      } : {\n        border: 'none'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetailListItemThumbnailContainer\",\n      children: /*#__PURE__*/_jsxDEV(YoutubeThumbnail, {\n        youtubeId: props.youtubeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetailListItemInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playCoPlaylistDetailListItemTitle\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playCoPlaylistDetailListItemListenerListContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playCoPlaylistDetailListItemListenerList\",\n          children: props.listeners.length ? props.listeners.map(value => {\n            return /*#__PURE__*/_jsxDEV(PlaylistDetailListener, {\n              uuid: value.uuid,\n              nick: value.name,\n              imgUrl: value.img_url\n            }, `playco-playlist-detail-listitem-listener-${value.uuid}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 20\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(PlaylistDetailDummyListener, {}, `playco-playlist-detail-listitem-listener-0`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        style: {\n          color: 'rgba(255, 255, 255, 1)'\n        },\n        onClick: e => {\n          e.stopPropagation();\n          props.onDeleteBtnClickFunc();\n        },\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiDelete,\n          size: \"1.75rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_c3 = PlaylistDetailItem;\nexport const PlaylistDetail = props => {\n  _s();\n\n  const [playlistDetailState, setPlaylistDetailState] = useState({\n    newItemUrlTextFieldValue: '',\n    newItemUrlNotUsableReason: ''\n  });\n\n  const onAddPlaylistItemBtnClick = () => props.addPlaylistItemFunc(playlistDetailState.newItemUrlTextFieldValue).then(result => setPlaylistDetailState({ ...playlistDetailState,\n    ...(result !== null && result !== void 0 ? result : {})\n  }));\n\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"playCoPlaylistDetailList\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"playCoPlaylistDetailListTitleContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playCoPlaylistDetailListTitle\",\n          children: props.playlistData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"rounded-circle playCoPlaylistDetailListRefreshButton\",\n          variant: \"info\",\n          style: {\n            padding: '0.05rem'\n          },\n          onClick: props.refreshPlaylistDataFunc,\n          children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n            placement: \"bottom\",\n            overlay: tooltipProps => /*#__PURE__*/_jsxDEV(Tooltip, { ...tooltipProps,\n              children: [\"\\uC7AC\\uC0DD\\uBAA9\\uB85D\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 71\n              }, this), \"\\uC0C8\\uB85C\\uACE0\\uCE68\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 40\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playCoPlaylistDetailListRefreshButtonIconContainer\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                path: mdiRefresh,\n                size: \"1.75rem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        margin: 'unset',\n        marginLeft: '0',\n        marginRight: '0',\n        marginTop: '1.25rem',\n        marginBottom: '1.25rem',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      title: \"Add item on playlist\",\n      placeholder: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uCD94\\uAC00\\uD560 URL\",\n      className: \"playCoPlaylistDetailAddTextField\",\n      value: playlistDetailState.newItemUrlTextFieldValue,\n      onChange: evt => setPlaylistDetailState({ ...playlistDetailState,\n        newItemUrlTextFieldValue: evt.target.value,\n        newItemUrlNotUsableReason: ''\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PHFormText, {\n      showOnlyNeeded: true,\n      children: playlistDetailState.newItemUrlNotUsableReason\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetailBtnGroup\",\n      children: [/*#__PURE__*/_jsxDEV(PHButton, {\n        smaller: true,\n        variant: \"outline-warning\",\n        onClick: () => props.setPlaylistModifyModalShowStateFunc(true),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiTools,\n          size: \"1.1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), \"\\xA0\\xA0\\uC7AC\\uC0DD\\uBAA9\\uB85D \\uC124\\uC815\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n        smaller: true,\n        variant: \"outline-info\",\n        onClick: onAddPlaylistItemBtnClick,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPlus,\n          size: \"1.1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), \"\\xA0\\xA0\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uCD94\\uAC00\\uD558\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        margin: 'unset',\n        marginLeft: '0',\n        marginRight: '0',\n        marginTop: '1.25rem',\n        marginBottom: '1.25rem',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.playlistData.items.length ? props.playlistData.items.map((value, index) => /*#__PURE__*/_jsxDEV(PlaylistDetailItem, {\n        onClickFunc: () => props.setPlaylistCurrentPlayingStateFunc(index),\n        onDeleteBtnClickFunc: () => props.deletePlaylistItemFunc(index),\n        youtubeId: value.link_id,\n        title: value.name,\n        listeners: value.current_listener,\n        selected: index === props.currentPlayingIndex\n      }, `playco-playlist-detail-listitem-${value.uuid}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 58\n      }, this)) : /*#__PURE__*/_jsxDEV(ListRow, {\n        style: {\n          width: '100%',\n          marginRight: '0',\n          marginLeft: '0'\n        },\n        children: \"\\uC7AC\\uC0DD\\uBAA9\\uB85D\\uC5D0 \\uC544\\uBB34 \\uAC83\\uB3C4 \\uC5C6\\uC5B4\\uC694...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PlaylistDetail, \"AHRKFDr6fiGaxekengYX4Z0qsE4=\");\n\n_c4 = PlaylistDetail;\nexport const PlaylistDetailPlayer = props => {\n  const playerConfig = {\n    youtube: {\n      playerVars: {\n        autoplay: props.autoplay ? 1 : 0,\n        loop: props.loopMode === 1 ? 1 : 0,\n        showinfo: 1,\n        controls: 1\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"playCoPlaylistDetailPlayerAside\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetailPlayerContainer\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        controls: true,\n        pip: true,\n        className: \"playCoPlaylistDetailPlayer\",\n        width: \"100%\",\n        height: \"100%\",\n        config: playerConfig,\n        url: props.targetUrl,\n        loop: props.loopMode === 1,\n        playing: props.autoplay,\n        onEnded: props.loopMode ? props.onPlayerEndedFunc : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetailPlayerBtnGroup\",\n      children: [/*#__PURE__*/_jsxDEV(PHButton, {\n        variant: props.autoplay ? 'info' : 'outline-info',\n        onClick: () => props.setAutoplayStateFunc(!props.autoplay),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiPlayCircle,\n          size: \"1.1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), \"\\xA0\\xA0\\uC790\\uB3D9 \\uC7AC\\uC0DD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PHButton, {\n        variant: props.loopMode === 0 ? 'outline-info' : 'info',\n        onClick: props.setLoopModeStateFunc,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          path: mdiRefresh,\n          size: \"1.1rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), \"\\xA0\\xA0\", props.loopMode === 0 ? '반복  해제됨' // loopMode === 0\n        : props.loopMode === 1 ? '한곡 반복 중' // loopMode === 1\n        : props.loopMode === 2 ? '전곡 반복 중' // loopMode === 2\n        : '전곡 한번만 재생 중' // loopMode === 3\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 10\n  }, this);\n};\n_c5 = PlaylistDetailPlayer;\nexport const PlayCoPlaylistDetail = () => {\n  _s2();\n\n  var _playlistDetailRootSt;\n\n  const params = useParams();\n  const navigate = useNavigate();\n  const [playlistDetailRootState, setPlaylistDetailRootState] = useState({\n    playlistData: new Playlist({\n      uuid: -1,\n      index: 0,\n      name: '정보를 불러오는 중...',\n      public_accessable: false,\n      public_modifiable: false,\n      public_item_appendable: false,\n      public_item_orderable: false,\n      public_item_deletable: false,\n      allow_duplicate: false,\n      items: [new PlaylistItem({\n        uuid: -1,\n        index: 0,\n        name: '정보를 불러오는 중이에요, 잠시만 기다려주세요...',\n        data: {},\n        added_by_uuid: -1,\n        added_by_nick: '',\n        link: '',\n        link_type: '',\n        link_id: '',\n        current_listener: []\n      })]\n    }),\n    showPlaylistModifyModal: false,\n    showAlertMessageBoxModal: false,\n    alertMessageBoxModalData: {\n      title: '',\n      body: '',\n      onAcceptBtnClick: () => {\n        /* */\n      }\n    },\n    autoplay: true,\n    // 0: loop disabled\n    // 1: loop one item\n    // 2: loop all items in playlist, and loop again if the last item in playlist played.\n    // 3: loop all items in playlist, and stop if the last item in playlist played.\n    loopMode: 3,\n    currentPlayingIndex: 0,\n    currentPlayingUrl: '',\n    isAccountFetching: false,\n    isPlaylistFetching: false\n  });\n\n  const refreshPlaylistData = () => {\n    PlayCoAPI.getPlaylistInfo();\n    const dummyPlaylistData = new Playlist({\n      uuid: 1,\n      index: 0,\n      name: '테스트',\n      created_by_uuid: 0,\n      created_by_nick: '',\n      public_accessable: true,\n      public_modifiable: false,\n      public_item_appendable: false,\n      public_item_orderable: false,\n      public_item_deletable: false,\n      allow_duplicate: false,\n      items: [new PlaylistItem({\n        uuid: 0,\n        index: 0,\n        name: 'q',\n        data: {},\n        added_by_uuid: 0,\n        added_by_nick: '',\n        link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\n        link_type: 'youtube',\n        link_id: '2Dw7NFm1ZfY',\n        current_listener: [new PlaylistListener({\n          uuid: 0,\n          name: '123'\n        }), new PlaylistListener({\n          uuid: 1,\n          name: '345'\n        }), new PlaylistListener({\n          uuid: 2,\n          name: '2234'\n        })]\n      }), new PlaylistItem({\n        uuid: 1,\n        index: 1,\n        name: 'w',\n        data: {},\n        added_by_uuid: 0,\n        added_by_nick: '',\n        link: 'https://www.youtube.com/watch?v=AH1tszKHCH4',\n        link_type: 'youtube',\n        link_id: 'AH1tszKHCH4',\n        current_listener: [new PlaylistListener({\n          uuid: 3,\n          name: '123'\n        }), new PlaylistListener({\n          uuid: 4,\n          name: '123'\n        }), new PlaylistListener({\n          uuid: 5,\n          name: '123'\n        })]\n      }), new PlaylistItem({\n        uuid: 2,\n        index: 2,\n        name: 'e',\n        data: {},\n        added_by_uuid: 0,\n        added_by_nick: '',\n        link: 'https://www.youtube.com/watch?v=PfJs7JeeAQU',\n        link_type: 'youtube',\n        link_id: 'PfJs7JeeAQU',\n        current_listener: [new PlaylistListener({\n          uuid: 6,\n          name: '123'\n        }), new PlaylistListener({\n          uuid: 7,\n          name: '123'\n        }), new PlaylistListener({\n          uuid: 8,\n          name: '123'\n        })]\n      })]\n    });\n    setPlaylistDetailRootState({ ...playlistDetailRootState,\n      showPlaylistModifyModal: false,\n      playlistData: dummyPlaylistData,\n      currentPlayingUrl: dummyPlaylistData.items[0].link\n    });\n  };\n\n  const setPlaylistLoopModeState = () => {\n    setPlaylistDetailRootState({ ...playlistDetailRootState,\n      loopMode: playlistDetailRootState.loopMode <= 0 ? 3 : playlistDetailRootState.loopMode - 1\n    });\n  };\n\n  const setPlaylistModifyModalShowState = newState => {\n    if (!playlistDetailRootState.playlistData || playlistDetailRootState.playlistData.uuid <= 0) return;\n    setPlaylistDetailRootState({ ...playlistDetailRootState,\n      showPlaylistModifyModal: newState\n    });\n    if (!newState) refreshPlaylistData();\n  };\n\n  const setPlaylistCurrentPlayingState = newIndex => {\n    if (0 > newIndex || newIndex > playlistDetailRootState.playlistData.items.length) return;\n    setPlaylistDetailRootState({ ...playlistDetailRootState,\n      currentPlayingIndex: newIndex,\n      currentPlayingUrl: playlistDetailRootState.playlistData.items[newIndex].link\n    });\n  };\n\n  const setPlaylistCurrentPlayingStateToNext = () => {\n    if (playlistDetailRootState.currentPlayingIndex + 1 >= playlistDetailRootState.playlistData.items.length) {\n      if (playlistDetailRootState.loopMode === 2) setPlaylistCurrentPlayingState(0);\n      return;\n    }\n\n    setPlaylistCurrentPlayingState(playlistDetailRootState.currentPlayingIndex + 1);\n  };\n\n  const addPlaylistItem = newItemUrl => {\n    var _newItemUrl;\n\n    if (!playlistDetailRootState.playlistData || playlistDetailRootState.playlistData.uuid <= 0) return;\n    newItemUrl = ((_newItemUrl = newItemUrl) !== null && _newItemUrl !== void 0 ? _newItemUrl : '').trim();\n    if (!newItemUrl) return new Promise(resolve => resolve({\n      newItemUrlTextFieldValue: newItemUrl,\n      newItemUrlNotUsableReason: '재생목록에 추가할 URL을 적어주세요!'\n    }));\n    return PlayCoAPI.insertPlaylistItem(playlistDetailRootState.uuid, newItemUrl).then(result => {//\n    }, reason => {//\n    }); // TODO: Do a API call here!\n\n    return new Promise(resolve => resolve({\n      newItemUrlTextFieldValue: '',\n      newItemUrlNotUsableReason: ''\n    }));\n  };\n\n  const deletePlaylistItem = index => {\n    if (playlistDetailRootState.currentPlayingIndex >= index) {// Fetch playlist items after deleting item,\n      // and set playlist data while doing minus 1 on currentPlayingIndex not to change currentPlayingUrl,\n      // as \"one item before current playing item\" or \"current playing item\" is gone, and we don't want to refresh player.\n    } else {// Update playlist data state after deleting item and ignore it.\n        // Deleting item after current playing item won't affect our player.\n      }\n  };\n\n  useEffect(() => {\n    const defaultAlertMsgModalData = {\n      title: '재생목록을 불러올 수 없어요...',\n      body: '',\n      onAcceptBtnClick: () => navigate('/playco')\n    }; // Check if params.playlistId is a valid numeric value\n\n    if (!isNumeric(params.playlistId)) {\n      setPlaylistDetailRootState({ ...playlistDetailRootState,\n        showAlertMessageBoxModal: true,\n        alertMessageBoxModalData: { ...defaultAlertMsgModalData,\n          body: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\uC62C\\uBC14\\uB974\\uC9C0 \\uC54A\\uC740 \\uC7AC\\uC0DD\\uBAA9\\uB85D ID\\uC785\\uB2C8\\uB2E4,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 39\n            }, this), \"ID\\uB97C \\uD655\\uC778 \\uD6C4 \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"]\n          }, void 0, true)\n        }\n      });\n    } // Fetch playlist from API\n\n\n    PlayCoAPI.getPlaylistInfo(params.playlistId).then(result => {\n      console.log(result);\n    }, reason => {\n      console.log(reason);\n      setPlaylistDetailRootState({ ...playlistDetailRootState,\n        showAlertMessageBoxModal: true,\n        alertMessageBoxModalData: { ...defaultAlertMsgModalData,\n          body: reason.message\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playCoPlaylistDetailPage\",\n    children: [/*#__PURE__*/_jsxDEV(PHAlertMessageBox, {\n      modalShowState: playlistDetailRootState.showAlertMessageBoxModal,\n      setModalShowState: newState => setPlaylistDetailRootState({ ...playlistDetailRootState,\n        showAlertMessageBoxModal: newState\n      }),\n      ...((_playlistDetailRootSt = playlistDetailRootState.alertMessageBoxModalData) !== null && _playlistDetailRootSt !== void 0 ? _playlistDetailRootSt : {})\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"PlayCO\", /*#__PURE__*/_jsxDEV(\"sup\", {\n          className: \"playCoTitleHeaderSup\",\n          children: \"Alpha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD50C\\uB808\\uC774\\uB9AC\\uC2A4\\uD2B8\\uB97C, \\uBA40\\uB9AC\\uC11C, \\uB2E4 \\uAC19\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playCoPlaylistDetail\",\n      children: [/*#__PURE__*/_jsxDEV(PlaylistControlModal, {\n        initialModalState: playlistDetailRootState.playlistData,\n        modalShowState: playlistDetailRootState.showPlaylistModifyModal,\n        setModalShowState: setPlaylistModifyModalShowState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PlaylistDetail, {\n        playlistData: playlistDetailRootState.playlistData,\n        currentPlayingIndex: playlistDetailRootState.currentPlayingIndex,\n        setPlaylistModifyModalShowStateFunc: setPlaylistModifyModalShowState,\n        setPlaylistCurrentPlayingStateFunc: setPlaylistCurrentPlayingState,\n        addPlaylistItemFunc: addPlaylistItem,\n        deletePlaylistItemFunc: deletePlaylistItem,\n        refreshPlaylistDataFunc: refreshPlaylistData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PlaylistDetailPlayer, {\n        targetUrl: playlistDetailRootState.currentPlayingUrl,\n        loopMode: playlistDetailRootState.loopMode,\n        setLoopModeStateFunc: setPlaylistLoopModeState,\n        autoplay: playlistDetailRootState.autoplay,\n        setAutoplayStateFunc: newState => setPlaylistDetailRootState({ ...playlistDetailRootState,\n          autoplay: newState\n        }),\n        onPlayerEndedFunc: setPlaylistCurrentPlayingStateToNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(PlayCoPlaylistDetail, \"fY1fZe7LshFwC9LVm7eARfAteUk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c6 = PlayCoPlaylistDetail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PlaylistDetailDummyListener\");\n$RefreshReg$(_c2, \"PlaylistDetailListener\");\n$RefreshReg$(_c3, \"PlaylistDetailItem\");\n$RefreshReg$(_c4, \"PlaylistDetail\");\n$RefreshReg$(_c5, \"PlaylistDetailPlayer\");\n$RefreshReg$(_c6, \"PlayCoPlaylistDetail\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/playco/playlistDetailPage.tsx"],"names":["React","useState","useEffect","useParams","useNavigate","OverlayTrigger","Tooltip","Button","ReactPlayer","Icon","mdiPlus","mdiTools","mdiAccountCircle","mdiRefresh","mdiPlayCircle","mdiDelete","ListRow","Divider","PHButton","PHFormText","PHAlertMessageBox","YoutubeThumbnail","PlaylistControlModal","PlaylistListener","PlaylistItem","Playlist","PlayCoAPI","isNumeric","val","test","PlaylistDetailDummyListener","height","PlaylistDetailListener","props","tooltipProps","nick","PlaylistDetailItem","isSelected","selected","onClickFunc","alignItems","marginLeft","marginRight","borderRadius","border","backgroundColor","youtubeId","title","listeners","length","map","value","uuid","name","img_url","color","e","stopPropagation","onDeleteBtnClickFunc","PlaylistDetail","playlistDetailState","setPlaylistDetailState","newItemUrlTextFieldValue","newItemUrlNotUsableReason","onAddPlaylistItemBtnClick","addPlaylistItemFunc","then","result","playlistData","padding","refreshPlaylistDataFunc","margin","marginTop","marginBottom","width","evt","target","setPlaylistModifyModalShowStateFunc","items","index","setPlaylistCurrentPlayingStateFunc","deletePlaylistItemFunc","link_id","current_listener","currentPlayingIndex","PlaylistDetailPlayer","playerConfig","youtube","playerVars","autoplay","loop","loopMode","showinfo","controls","targetUrl","onPlayerEndedFunc","setAutoplayStateFunc","setLoopModeStateFunc","PlayCoPlaylistDetail","params","navigate","playlistDetailRootState","setPlaylistDetailRootState","public_accessable","public_modifiable","public_item_appendable","public_item_orderable","public_item_deletable","allow_duplicate","data","added_by_uuid","added_by_nick","link","link_type","showPlaylistModifyModal","showAlertMessageBoxModal","alertMessageBoxModalData","body","onAcceptBtnClick","currentPlayingUrl","isAccountFetching","isPlaylistFetching","refreshPlaylistData","getPlaylistInfo","dummyPlaylistData","created_by_uuid","created_by_nick","setPlaylistLoopModeState","setPlaylistModifyModalShowState","newState","setPlaylistCurrentPlayingState","newIndex","setPlaylistCurrentPlayingStateToNext","addPlaylistItem","newItemUrl","trim","Promise","resolve","insertPlaylistItem","reason","deletePlaylistItem","defaultAlertMsgModalData","playlistId","console","log","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player';\r\nimport Icon from '@mdi/react';\r\nimport { mdiPlus, mdiTools, mdiAccountCircle, mdiRefresh, mdiPlayCircle, mdiDelete } from '@mdi/js';\r\n\r\nimport { ListRow } from '../../common/element/muListRow';\r\nimport { Divider } from '../../common/element/divider';\r\nimport { PHButton } from '../../common/element/muButton';\r\nimport { PHFormText } from 'src/ui/common/element/muFormText';\r\nimport { PHAlertMessageBox } from 'src/ui/common/element/muAlertMsgBox';\r\nimport { YoutubeThumbnail } from '../../common/element/util/youtubeThumbnail';\r\n\r\nimport { PlaylistControlModal } from './element/playlistControlModal';\r\n// import { PlayCoAPI } from './playco/api';\r\nimport {\r\n  PlaylistListener,\r\n  PlaylistItem,\r\n  Playlist,\r\n  // PlaylistConfig\r\n} from './playco/model';\r\nimport './playlistDetailPage.css';\r\nimport { PlayCoAPI } from './playco/api';\r\n\r\nconst isNumeric = (val) => (/^\\d+$/.test(val));\r\n\r\nexport const PlaylistDetailDummyListener: React.FC = () => <div style={{ height: '16pt' }} />;\r\nexport const PlaylistDetailListener: React.FC = (props: {\r\n  uuid: number;\r\n  nick: string;\r\n  imgUrl?: string | null;\r\n}) => {\r\n  return <OverlayTrigger\r\n    placement='bottom'\r\n    overlay={(tooltipProps) => <Tooltip {...tooltipProps}>{props.nick}</Tooltip>} >\r\n    <Icon path={mdiAccountCircle} size='16pt' />\r\n  </OverlayTrigger>;\r\n};\r\n\r\nexport const PlaylistDetailItem: React.FC = (props: {\r\n  youtubeId: string;\r\n  title: string;\r\n  listeners: PlaylistListener[];\r\n  onClickFunc: () => void;\r\n  onDeleteBtnClickFunc: () => void;\r\n  selected?: boolean;\r\n}) => {\r\n  const isSelected = props.selected ?? false;\r\n  return <ListRow\r\n    onClick={isSelected ? null : props.onClickFunc}\r\n    className='playCoPlaylistDetailListItem'\r\n    itemWidth={[25, 70, 5]}\r\n    style={{\r\n      // This cannot be moved to css,\r\n      // as we have to overwrite the element style of ListRow.\r\n      alignItems: 'center',\r\n      marginLeft: '0',\r\n      marginRight: '0',\r\n      borderRadius: '0.3rem',\r\n      ...(isSelected ? {\r\n        border: '1px solid rgba(255, 255, 255, 1)',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n      } : {\r\n        border: 'none',\r\n      })\r\n    }}>\r\n    <div className='playCoPlaylistDetailListItemThumbnailContainer'>\r\n      <YoutubeThumbnail youtubeId={props.youtubeId} />\r\n    </div>\r\n    <div className='playCoPlaylistDetailListItemInfoContainer'>\r\n      <div className='playCoPlaylistDetailListItemTitle'>{props.title}</div>\r\n      <div className='playCoPlaylistDetailListItemListenerListContainer'>\r\n        <div className='playCoPlaylistDetailListItemListenerList'>\r\n          {(props.listeners.length) ? (props.listeners.map(value => {\r\n            return <PlaylistDetailListener\r\n              key={`playco-playlist-detail-listitem-listener-${value.uuid}`}\r\n              uuid={value.uuid}\r\n              nick={value.name}\r\n              imgUrl={value.img_url} />\r\n          })) : <PlaylistDetailDummyListener\r\n            key={`playco-playlist-detail-listitem-listener-0`} />}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <Button\r\n        variant='link'\r\n        style={{ color: 'rgba(255, 255, 255, 1)' }}\r\n        onClick={(e) => { e.stopPropagation(); props.onDeleteBtnClickFunc(); }} >\r\n        <Icon path={mdiDelete} size='1.75rem' />\r\n      </Button>\r\n    </div>\r\n  </ListRow>;\r\n};\r\nexport const PlaylistDetail: React.FC = (props: {\r\n  setPlaylistModifyModalShowStateFunc: (boolean) => void;\r\n  setPlaylistCurrentPlayingStateFunc: (number) => void;\r\n  addPlaylistItemFunc: (string) => Promise<{ newItemUrlTextFieldValue: string, newItemUrlNotUsableReason: string } | undefined>;\r\n  deletePlaylistItemFunc: (number) => void;\r\n  refreshPlaylistDataFunc: () => void;\r\n  playlistData: Playlist;\r\n  currentPlayingIndex: number;\r\n}) => {\r\n  const [playlistDetailState, setPlaylistDetailState] = useState({\r\n    newItemUrlTextFieldValue: '',\r\n    newItemUrlNotUsableReason: '',\r\n  });\r\n  const onAddPlaylistItemBtnClick = () =>\r\n    props.addPlaylistItemFunc(playlistDetailState.newItemUrlTextFieldValue)\r\n      .then((result) => setPlaylistDetailState({ ...playlistDetailState, ...(result ?? {}) }));\r\n\r\n  return <aside className='playCoPlaylistDetailList'>\r\n    <header>\r\n      <h5 className='playCoPlaylistDetailListTitleContainer'>\r\n        <div className='playCoPlaylistDetailListTitle'>\r\n          {props.playlistData.name}\r\n        </div>\r\n        <Button\r\n          className='rounded-circle playCoPlaylistDetailListRefreshButton'\r\n          variant='info'\r\n          style={{ padding: '0.05rem' }}\r\n          onClick={props.refreshPlaylistDataFunc}>\r\n          <OverlayTrigger\r\n            placement='bottom'\r\n            overlay={(tooltipProps) => <Tooltip {...tooltipProps}>재생목록<br />새로고침</Tooltip>} >\r\n            <div className='playCoPlaylistDetailListRefreshButtonIconContainer'>\r\n              <Icon path={mdiRefresh} size='1.75rem' />\r\n            </div>\r\n          </OverlayTrigger>\r\n        </Button>\r\n      </h5>\r\n    </header>\r\n    <Divider style={{ margin: 'unset', marginLeft: '0', marginRight: '0', marginTop: '1.25rem', marginBottom: '1.25rem', width: '100%' }} />\r\n    <input\r\n      title='Add item on playlist'\r\n      placeholder='재생목록에 추가할 URL'\r\n      className='playCoPlaylistDetailAddTextField'\r\n      value={playlistDetailState.newItemUrlTextFieldValue}\r\n      onChange={(evt) => setPlaylistDetailState({\r\n        ...playlistDetailState,\r\n        newItemUrlTextFieldValue: evt.target.value,\r\n        newItemUrlNotUsableReason: '',\r\n      })}\r\n    ></input>\r\n    <PHFormText showOnlyNeeded>{playlistDetailState.newItemUrlNotUsableReason}</PHFormText>\r\n    <div className='playCoPlaylistDetailBtnGroup'>\r\n      <PHButton\r\n        smaller\r\n        variant='outline-warning'\r\n        onClick={() => props.setPlaylistModifyModalShowStateFunc(true)}>\r\n        <Icon path={mdiTools} size='1.1rem' />&nbsp;&nbsp;재생목록 설정\r\n      </PHButton>\r\n      <PHButton\r\n        smaller\r\n        variant='outline-info'\r\n        onClick={onAddPlaylistItemBtnClick} >\r\n        <Icon path={mdiPlus} size='1.1rem' />&nbsp;&nbsp;재생목록에 추가하기\r\n      </PHButton>\r\n    </div>\r\n    <Divider style={{ margin: 'unset', marginLeft: '0', marginRight: '0', marginTop: '1.25rem', marginBottom: '1.25rem', width: '100%' }} />\r\n    <div>\r\n      {(props.playlistData.items.length)\r\n        ? props.playlistData.items.map((value, index) => <PlaylistDetailItem\r\n          key={`playco-playlist-detail-listitem-${value.uuid}`}\r\n          onClickFunc={() => props.setPlaylistCurrentPlayingStateFunc(index)}\r\n          onDeleteBtnClickFunc={() => props.deletePlaylistItemFunc(index)}\r\n          youtubeId={value.link_id}\r\n          title={value.name}\r\n          listeners={value.current_listener}\r\n          selected={index === props.currentPlayingIndex} />)\r\n        : <ListRow style={{ width: '100%', marginRight: '0', marginLeft: '0' }}>재생목록에 아무 것도 없어요...</ListRow>}\r\n    </div>\r\n  </aside>;\r\n};\r\n\r\nexport const PlaylistDetailPlayer: React.FC = (props: {\r\n  targetUrl: string;\r\n  autoplay: boolean;\r\n  loopMode: number;\r\n  setAutoplayStateFunc: (boolean) => void;\r\n  setLoopModeStateFunc: () => void;\r\n  onPlayerEndedFunc?: () => void;\r\n}) => {\r\n  const playerConfig = {\r\n    youtube: {\r\n      playerVars: {\r\n        autoplay: props.autoplay ? 1 : 0,\r\n        loop: props.loopMode === 1 ? 1 : 0,\r\n        showinfo: 1,\r\n        controls: 1,\r\n      }\r\n    }\r\n  };\r\n\r\n  return <aside className='playCoPlaylistDetailPlayerAside'>\r\n    <div className='playCoPlaylistDetailPlayerContainer'>\r\n      <ReactPlayer\r\n        controls pip\r\n        className='playCoPlaylistDetailPlayer'\r\n        width='100%' height='100%'\r\n        config={playerConfig}\r\n\r\n        url={props.targetUrl}\r\n        loop={props.loopMode === 1}\r\n        playing={props.autoplay}\r\n        onEnded={(props.loopMode) ? props.onPlayerEndedFunc : null} />\r\n    </div>\r\n    <br />\r\n    <div className='playCoPlaylistDetailPlayerBtnGroup'>\r\n      <PHButton\r\n        variant={(props.autoplay) ? 'info' : 'outline-info'}\r\n        onClick={() => props.setAutoplayStateFunc(!props.autoplay)} >\r\n        <Icon path={mdiPlayCircle} size='1.1rem' />&nbsp;&nbsp;자동 재생\r\n      </PHButton>\r\n\r\n      <PHButton\r\n        variant={(props.loopMode === 0) ? 'outline-info' : 'info'}\r\n        onClick={props.setLoopModeStateFunc} >\r\n        <Icon path={mdiRefresh} size='1.1rem' />\r\n        &nbsp;&nbsp;{\r\n          (props.loopMode === 0)\r\n            ? '반복  해제됨' // loopMode === 0\r\n            : (props.loopMode === 1)\r\n              ? '한곡 반복 중' // loopMode === 1\r\n              : (props.loopMode === 2)\r\n                ? '전곡 반복 중' // loopMode === 2\r\n                : '전곡 한번만 재생 중' // loopMode === 3\r\n        }\r\n      </PHButton>\r\n    </div>\r\n  </aside>;\r\n};\r\n\r\nexport const PlayCoPlaylistDetail: React.FC = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [playlistDetailRootState, setPlaylistDetailRootState] = useState({\r\n    playlistData: new Playlist({\r\n      uuid: -1,\r\n      index: 0,\r\n      name: '정보를 불러오는 중...',\r\n\r\n      public_accessable: false,\r\n      public_modifiable: false,\r\n      public_item_appendable: false,\r\n      public_item_orderable: false,\r\n      public_item_deletable: false,\r\n      allow_duplicate: false,\r\n\r\n      items: [\r\n        new PlaylistItem({\r\n          uuid: -1,\r\n          index: 0,\r\n          name: '정보를 불러오는 중이에요, 잠시만 기다려주세요...',\r\n          data: {},\r\n\r\n          added_by_uuid: -1,\r\n          added_by_nick: '',\r\n\r\n          link: '',\r\n          link_type: '',\r\n          link_id: '',\r\n          current_listener: [],\r\n        }),\r\n      ],\r\n    }),\r\n    showPlaylistModifyModal: false,\r\n    showAlertMessageBoxModal: false,\r\n    alertMessageBoxModalData: { title: '', body: '', onAcceptBtnClick: () => { /* */ }, },\r\n\r\n    autoplay: true,\r\n    // 0: loop disabled\r\n    // 1: loop one item\r\n    // 2: loop all items in playlist, and loop again if the last item in playlist played.\r\n    // 3: loop all items in playlist, and stop if the last item in playlist played.\r\n    loopMode: 3,\r\n    currentPlayingIndex: 0,\r\n    currentPlayingUrl: '',\r\n\r\n    isAccountFetching: false,\r\n    isPlaylistFetching: false,\r\n\r\n  });\r\n\r\n  const refreshPlaylistData = () => {\r\n    PlayCoAPI.getPlaylistInfo()\r\n\r\n    const dummyPlaylistData = new Playlist({\r\n      uuid: 1,\r\n      index: 0,\r\n      name: '테스트',\r\n      created_by_uuid: 0,\r\n      created_by_nick: '',\r\n      public_accessable: true,\r\n      public_modifiable: false,\r\n      public_item_appendable: false,\r\n      public_item_orderable: false,\r\n      public_item_deletable: false,\r\n      allow_duplicate: false,\r\n      items: [\r\n        new PlaylistItem({\r\n          uuid: 0,\r\n          index: 0,\r\n          name: 'q',\r\n          data: {},\r\n          added_by_uuid: 0,\r\n          added_by_nick: '',\r\n          link: 'https://www.youtube.com/watch?v=2Dw7NFm1ZfY',\r\n          link_type: 'youtube',\r\n          link_id: '2Dw7NFm1ZfY',\r\n          current_listener: [\r\n            new PlaylistListener({ uuid: 0, name: '123' }),\r\n            new PlaylistListener({ uuid: 1, name: '345' }),\r\n            new PlaylistListener({ uuid: 2, name: '2234' })\r\n          ],\r\n        }),\r\n        new PlaylistItem({\r\n          uuid: 1,\r\n          index: 1,\r\n          name: 'w',\r\n          data: {},\r\n          added_by_uuid: 0,\r\n          added_by_nick: '',\r\n          link: 'https://www.youtube.com/watch?v=AH1tszKHCH4',\r\n          link_type: 'youtube',\r\n          link_id: 'AH1tszKHCH4',\r\n          current_listener: [\r\n            new PlaylistListener({ uuid: 3, name: '123' }),\r\n            new PlaylistListener({ uuid: 4, name: '123' }),\r\n            new PlaylistListener({ uuid: 5, name: '123' })\r\n          ],\r\n        }),\r\n        new PlaylistItem({\r\n          uuid: 2,\r\n          index: 2,\r\n          name: 'e',\r\n          data: {},\r\n          added_by_uuid: 0,\r\n          added_by_nick: '',\r\n          link: 'https://www.youtube.com/watch?v=PfJs7JeeAQU',\r\n          link_type: 'youtube',\r\n          link_id: 'PfJs7JeeAQU',\r\n          current_listener: [\r\n            new PlaylistListener({ uuid: 6, name: '123' }),\r\n            new PlaylistListener({ uuid: 7, name: '123' }),\r\n            new PlaylistListener({ uuid: 8, name: '123' })\r\n          ],\r\n        }),\r\n      ],\r\n    });\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      showPlaylistModifyModal: false,\r\n      playlistData: dummyPlaylistData,\r\n      currentPlayingUrl: dummyPlaylistData.items[0].link,\r\n    });\r\n  }\r\n  const setPlaylistLoopModeState = () => {\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      loopMode: (playlistDetailRootState.loopMode <= 0) ? 3 : playlistDetailRootState.loopMode - 1,\r\n    });\r\n  }\r\n  const setPlaylistModifyModalShowState = (newState: boolean) => {\r\n    if (!playlistDetailRootState.playlistData || playlistDetailRootState.playlistData.uuid <= 0)\r\n      return;\r\n\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      showPlaylistModifyModal: newState,\r\n    });\r\n\r\n    if (!newState) refreshPlaylistData();\r\n  };\r\n  const setPlaylistCurrentPlayingState = (newIndex: number) => {\r\n    if (0 > newIndex || newIndex > playlistDetailRootState.playlistData.items.length)\r\n      return;\r\n\r\n    setPlaylistDetailRootState({\r\n      ...playlistDetailRootState,\r\n      currentPlayingIndex: newIndex,\r\n      currentPlayingUrl: playlistDetailRootState.playlistData.items[newIndex].link,\r\n    });\r\n  }\r\n  const setPlaylistCurrentPlayingStateToNext = () => {\r\n    if (playlistDetailRootState.currentPlayingIndex + 1 >= playlistDetailRootState.playlistData.items.length) {\r\n      if (playlistDetailRootState.loopMode === 2)\r\n        setPlaylistCurrentPlayingState(0);\r\n      return;\r\n    }\r\n    setPlaylistCurrentPlayingState(playlistDetailRootState.currentPlayingIndex + 1);\r\n  }\r\n  const addPlaylistItem = (newItemUrl: string) => {\r\n    if (!playlistDetailRootState.playlistData || playlistDetailRootState.playlistData.uuid <= 0)\r\n      return;\r\n\r\n    newItemUrl = (newItemUrl ?? '').trim();\r\n    if (!newItemUrl)\r\n      return new Promise((resolve) => resolve({\r\n        newItemUrlTextFieldValue: newItemUrl,\r\n        newItemUrlNotUsableReason: '재생목록에 추가할 URL을 적어주세요!',\r\n      }));\r\n\r\n    return PlayCoAPI.insertPlaylistItem(playlistDetailRootState.uuid, newItemUrl)\r\n      .then((result) => {\r\n        //\r\n      }, (reason: FrostError) => {\r\n        //\r\n      })\r\n\r\n    // TODO: Do a API call here!\r\n    return new Promise((resolve) => resolve({\r\n      newItemUrlTextFieldValue: '',\r\n      newItemUrlNotUsableReason: '',\r\n    }));\r\n  }\r\n  const deletePlaylistItem = (index: number) => {\r\n    if (playlistDetailRootState.currentPlayingIndex >= index) {\r\n      // Fetch playlist items after deleting item,\r\n      // and set playlist data while doing minus 1 on currentPlayingIndex not to change currentPlayingUrl,\r\n      // as \"one item before current playing item\" or \"current playing item\" is gone, and we don't want to refresh player.\r\n\r\n    } else {\r\n      // Update playlist data state after deleting item and ignore it.\r\n      // Deleting item after current playing item won't affect our player.\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const defaultAlertMsgModalData = {\r\n      title: '재생목록을 불러올 수 없어요...',\r\n      body: '',\r\n      onAcceptBtnClick: () => navigate('/playco'),\r\n    }\r\n\r\n    // Check if params.playlistId is a valid numeric value\r\n    if (!isNumeric(params.playlistId)) {\r\n      setPlaylistDetailRootState({\r\n        ...playlistDetailRootState,\r\n        showAlertMessageBoxModal: true,\r\n        alertMessageBoxModalData: {\r\n          ...defaultAlertMsgModalData,\r\n          body: (<>올바르지 않은 재생목록 ID입니다,<br />ID를 확인 후 다시 시도해주세요.</>),\r\n        },\r\n      });\r\n    }\r\n\r\n    // Fetch playlist from API\r\n    PlayCoAPI\r\n      .getPlaylistInfo(params.playlistId)\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n        },\r\n        (reason: FrostError) => {\r\n          console.log(reason);\r\n          setPlaylistDetailRootState({\r\n            ...playlistDetailRootState,\r\n            showAlertMessageBoxModal: true,\r\n            alertMessageBoxModalData: {\r\n              ...defaultAlertMsgModalData,\r\n              body: reason.message,\r\n            },\r\n          });\r\n        }\r\n      )\r\n  }, []);\r\n\r\n  return <section className='playCoPlaylistDetailPage'>\r\n    <PHAlertMessageBox\r\n      modalShowState={playlistDetailRootState.showAlertMessageBoxModal}\r\n      setModalShowState={(newState: boolean) => setPlaylistDetailRootState({ ...playlistDetailRootState, showAlertMessageBoxModal: newState })}\r\n      {...(playlistDetailRootState.alertMessageBoxModalData ?? {})} />\r\n    <header>\r\n      <h2>PlayCO<sup className='playCoTitleHeaderSup'>Alpha</sup></h2>\r\n      <p>플레이리스트를, 멀리서, 다 같이</p>\r\n    </header>\r\n    <div className='playCoPlaylistDetail'>\r\n      <PlaylistControlModal\r\n        initialModalState={playlistDetailRootState.playlistData}\r\n        modalShowState={playlistDetailRootState.showPlaylistModifyModal}\r\n        setModalShowState={setPlaylistModifyModalShowState} />\r\n      <PlaylistDetail\r\n        playlistData={playlistDetailRootState.playlistData}\r\n        currentPlayingIndex={playlistDetailRootState.currentPlayingIndex}\r\n        setPlaylistModifyModalShowStateFunc={setPlaylistModifyModalShowState}\r\n        setPlaylistCurrentPlayingStateFunc={setPlaylistCurrentPlayingState}\r\n        addPlaylistItemFunc={addPlaylistItem}\r\n        deletePlaylistItemFunc={deletePlaylistItem}\r\n        refreshPlaylistDataFunc={refreshPlaylistData} />\r\n      <PlaylistDetailPlayer\r\n        targetUrl={playlistDetailRootState.currentPlayingUrl}\r\n        loopMode={playlistDetailRootState.loopMode}\r\n        setLoopModeStateFunc={setPlaylistLoopModeState}\r\n        autoplay={playlistDetailRootState.autoplay}\r\n        setAutoplayStateFunc={(newState) => setPlaylistDetailRootState({ ...playlistDetailRootState, autoplay: newState })}\r\n        onPlayerEndedFunc={setPlaylistCurrentPlayingStateToNext} />\r\n    </div>\r\n  </section>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}