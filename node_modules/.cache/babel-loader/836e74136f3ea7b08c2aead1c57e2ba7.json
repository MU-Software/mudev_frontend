{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MUsoftware\\\\Desktop\\\\project\\\\MUsoftware\\\\mudev.cc\\\\src\\\\ui\\\\page\\\\home\\\\home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SIDEBAR, setSidebarActive } from '@ui/util/sidebar';\nimport { CanvasTemplate } from '@ui/common/canvasTemplate';\nimport { PageTemplate } from '@ui/common/pageTemplate';\nimport { PHButton } from '@ui/common/element/page/muButton';\nimport { ListRowInputType, ListRowButtonType, ListRow } from '@ui/common/element/page/muListRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlowHome = () => {\n  _s();\n\n  setSidebarActive(SIDEBAR.HOME);\n  const navigate = useNavigate();\n\n  const goToProjectList = () => navigate('/projects');\n\n  const goToContainerList = () => navigate('/containers');\n\n  const [demoData, setDemoData] = useState({\n    demoStr: '',\n    demoNumeric: 0,\n    demoChecked: true,\n    demoRadio: undefined\n  });\n\n  const onInputChange = valueName => e => {\n    if (e.target.type === 'reset') {\n      setDemoData({\n        demoStr: '',\n        demoNumeric: 0,\n        demoChecked: true,\n        demoRadio: undefined\n      });\n    }\n\n    if (valueName) {\n      let newDemoData = { ...demoData\n      }; // TODO: e.target.checked도 받을 수 있도록\n\n      if (e.target.type === 'checkbox') {\n        newDemoData[valueName] = e.target.checked;\n      } else {\n        newDemoData[valueName] = e.target.value;\n      }\n\n      console.log(newDemoData);\n      setDemoData(newDemoData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CanvasTemplate, {\n    title: '프로젝트 홈',\n    children: [/*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: '현재 참여 중인 프로젝트',\n      actionButton: [/*#__PURE__*/_jsxDEV(PHButton, {\n        smaller: true,\n        onClick: goToProjectList,\n        children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(ListRow, {\n        header: true,\n        children: ['테스트1', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"qweqwe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        noLabel: true,\n        children: ['테스트1', 213124]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트1', null]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트1', ListRowInputType.n({\n          name: 'demoStr',\n          placeholder: 'Place홀더',\n          onChange: onInputChange,\n          state: demoData\n        }), ListRowInputType.n({\n          name: 'demoChecked',\n          type: 'checkbox',\n          placeholder: 'Place홀더',\n          onChange: onInputChange,\n          state: demoData\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:value:1', ListRowInputType.n({\n          name: 'demoRadio',\n          type: 'radio',\n          onChange: onInputChange,\n          state: demoData,\n          radioValue: 1\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:value:2', ListRowInputType.n({\n          name: 'demoRadio',\n          type: 'radio',\n          onChange: onInputChange,\n          state: demoData,\n          radioValue: 2\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:number', ListRowInputType.n({\n          name: 'demoNumeric',\n          type: 'number',\n          onChange: onInputChange,\n          state: demoData,\n          min: 5,\n          max: 15,\n          step: 2\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:button', ListRowInputType.n({\n          innerValue: 'qwe',\n          type: 'reset',\n          onChange: onInputChange\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:button', ListRowInputType.n({\n          innerValue: 'qwe',\n          type: 'button',\n          size: 'lt',\n          variant: 'secondary',\n          onChange: onInputChange\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        children: ['테스트:button', ListRowInputType.n({\n          innerValue: 'qwe',\n          type: 'button',\n          size: 'sm',\n          variant: 'success',\n          onChange: onInputChange\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ListRow, {\n        label: \"1\",\n        itemWidth: [10, 80, 10],\n        children: ['테스트:button', ListRowInputType.n({\n          innerValue: 'qwe',\n          type: 'button',\n          size: 'extra-sm',\n          variant: 'danger',\n          onChange: onInputChange\n        })]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PageTemplate, {\n      title: '접근 가능한 컨테이너',\n      actionButton: [/*#__PURE__*/_jsxDEV(PHButton, {\n        smaller: true,\n        onClick: goToContainerList,\n        children: \"+ \\uC790\\uC138\\uD788 \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GlowHome, \"ZaWIURNY0sKj/yuQxmPD5ZxcY3k=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GlowHome;\nexport { GlowHome };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlowHome\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/page/home/home.jsx"],"names":["React","useEffect","useState","useCallback","useNavigate","SIDEBAR","setSidebarActive","CanvasTemplate","PageTemplate","PHButton","ListRowInputType","ListRowButtonType","ListRow","GlowHome","HOME","navigate","goToProjectList","goToContainerList","demoData","setDemoData","demoStr","demoNumeric","demoChecked","demoRadio","undefined","onInputChange","valueName","e","target","type","newDemoData","checked","value","console","log","n","name","placeholder","onChange","state","radioValue","min","max","step","innerValue","size","variant"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { SIDEBAR, setSidebarActive } from '@ui/util/sidebar';\nimport { CanvasTemplate } from '@ui/common/canvasTemplate';\nimport { PageTemplate } from '@ui/common/pageTemplate';\nimport { PHButton } from '@ui/common/element/page/muButton';\nimport { ListRowInputType, ListRowButtonType, ListRow } from '@ui/common/element/page/muListRow';\n\n\nconst GlowHome = () => {\n  setSidebarActive(SIDEBAR.HOME);\n\n  const navigate = useNavigate();\n  const goToProjectList = () => navigate('/projects');\n  const goToContainerList = () => navigate('/containers');\n\n  const [demoData, setDemoData] = useState({\n    demoStr: '',\n    demoNumeric: 0,\n    demoChecked: true,\n    demoRadio: undefined,\n  });\n  const onInputChange = (valueName) => (e) => {\n    if (e.target.type === 'reset') {\n      setDemoData({\n        demoStr: '',\n        demoNumeric: 0,\n        demoChecked: true,\n        demoRadio: undefined,\n      });\n    } if (valueName) {\n      let newDemoData = { ...demoData };\n      // TODO: e.target.checked도 받을 수 있도록\n      if (e.target.type === 'checkbox') {\n        newDemoData[valueName] = e.target.checked;\n      } else {\n        newDemoData[valueName] = e.target.value;\n      }\n      console.log(newDemoData);\n      setDemoData(newDemoData);\n    }\n  }\n\n\n\n\n\n  return <CanvasTemplate title={'프로젝트 홈'}>\n    <PageTemplate title={'현재 참여 중인 프로젝트'} actionButton={[\n      <PHButton smaller onClick={goToProjectList}>자세히 보기</PHButton>\n    ]}>\n      <ListRow header>{['테스트1', <div>qweqwe</div>]}</ListRow>\n      <ListRow noLabel>{['테스트1', 213124]}</ListRow>\n      <ListRow label='1'>{['테스트1', null]}</ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트1',\n          ListRowInputType.n({ name: 'demoStr', placeholder: 'Place홀더', onChange: onInputChange, state: demoData }),\n          ListRowInputType.n({ name: 'demoChecked', type: 'checkbox', placeholder: 'Place홀더', onChange: onInputChange, state: demoData }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:value:1',\n          ListRowInputType.n({ name: 'demoRadio', type: 'radio', onChange: onInputChange, state: demoData, radioValue: 1 }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:value:2',\n          ListRowInputType.n({ name: 'demoRadio', type: 'radio', onChange: onInputChange, state: demoData, radioValue: 2 }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:number',\n          ListRowInputType.n({ name: 'demoNumeric', type: 'number', onChange: onInputChange, state: demoData, min: 5, max: 15, step: 2, }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'reset', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'lt', variant: 'secondary', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1'>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'sm', variant: 'success', onChange: onInputChange }),\n        ]}\n      </ListRow>\n      <ListRow label='1' itemWidth={[10, 80, 10]}>\n        {[\n          '테스트:button',\n          ListRowInputType.n({ innerValue: 'qwe', type: 'button', size: 'extra-sm', variant: 'danger', onChange: onInputChange }),\n        ]}\n      </ListRow>\n    </PageTemplate>\n\n    <PageTemplate title={'접근 가능한 컨테이너'} actionButton={[\n      <PHButton smaller onClick={goToContainerList}>+ 자세히 보기</PHButton>\n    ]}>\n    </PageTemplate>\n  </CanvasTemplate>\n};\n\nexport {\n  GlowHome\n};\n"]},"metadata":{},"sourceType":"module"}