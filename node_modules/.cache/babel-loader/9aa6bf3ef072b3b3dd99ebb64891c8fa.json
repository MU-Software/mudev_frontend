{"ast":null,"code":"import { mdiHome, mdiBriefcase, mdiDocker } from '@mdi/js'; // Tooltip enabler\n\nconst tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nconst tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n\nconst gotoMenu = suburl => {\n  // Go to route\n  window.history.pushState({}, '', suburl); // Remove all tooltip\n\n  for (var tooltipElement of document.getElementsByClassName('tooltip')) tooltipElement.remove();\n};\n\nconst SIDEBAR = {\n  HOME: {\n    targetId: 'sidebarHomeBtn',\n    route: '/',\n    icon: mdiHome\n  },\n  PROJECT: {\n    targetId: 'sidebarProjectBtn',\n    route: '/projects',\n    icon: mdiBriefcase\n  },\n  CONTAINER: {\n    targetId: 'sidebarContainerBtn',\n    route: '/containers',\n    icon: mdiDocker\n  }\n};\nconst SIDEBAR_ELEMENT = Object.entries(SIDEBAR).map(_c = ([k, v]) => {\n  var sElement = document.getElementById(v.targetId);\n  sElement.addEventListener('click', () => gotoMenu(v.route));\n  return sElement;\n});\n_c2 = SIDEBAR_ELEMENT;\n\nfunction setSidebarActive(sidebarId) {\n  SIDEBAR_ELEMENT.forEach(e => {\n    if (e.id === sidebarId.targetId) {\n      if (!e.classList.contains('active')) e.classList.add('active');\n    } else {\n      if (e.classList.contains('active')) e.classList.remove('active');\n    }\n  });\n}\n\nexport { SIDEBAR, SIDEBAR_ELEMENT, setSidebarActive };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SIDEBAR_ELEMENT$Object.entries(SIDEBAR).map\");\n$RefreshReg$(_c2, \"SIDEBAR_ELEMENT\");","map":{"version":3,"sources":["C:/Users/MUsoftware/Desktop/project/MUsoftware/mudev.cc/src/ui/util/sidebar.js"],"names":["mdiHome","mdiBriefcase","mdiDocker","tooltipTriggerList","slice","call","document","querySelectorAll","tooltipList","map","tooltipTriggerEl","bootstrap","Tooltip","gotoMenu","suburl","window","history","pushState","tooltipElement","getElementsByClassName","remove","SIDEBAR","HOME","targetId","route","icon","PROJECT","CONTAINER","SIDEBAR_ELEMENT","Object","entries","k","v","sElement","getElementById","addEventListener","setSidebarActive","sidebarId","forEach","e","id","classList","contains","add"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,YAAlB,EAAgCC,SAAhC,QAAiD,SAAjD,C,CAEA;;AACA,MAAMC,kBAAkB,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,QAAQ,CAACC,gBAAT,CAA0B,4BAA1B,CAAd,CAA3B;AACA,MAAMC,WAAW,GAAGL,kBAAkB,CAACM,GAAnB,CAAuB,UAAUC,gBAAV,EAA4B;AACrE,SAAO,IAAIC,SAAS,CAACC,OAAd,CAAsBF,gBAAtB,CAAP;AACD,CAFmB,CAApB;;AAIA,MAAMG,QAAQ,GAAIC,MAAD,IAAY;AAC3B;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeC,SAAf,CAAyB,EAAzB,EAA6B,EAA7B,EAAiCH,MAAjC,EAF2B,CAI3B;;AACA,OAAK,IAAII,cAAT,IAA2BZ,QAAQ,CAACa,sBAAT,CAAgC,SAAhC,CAA3B,EACED,cAAc,CAACE,MAAf;AACH,CAPD;;AASA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AAACC,IAAAA,QAAQ,EAAE,gBAAX;AAA6BC,IAAAA,KAAK,EAAE,GAApC;AAAyCC,IAAAA,IAAI,EAAEzB;AAA/C,GADQ;AAEd0B,EAAAA,OAAO,EAAE;AAACH,IAAAA,QAAQ,EAAE,mBAAX;AAAgCC,IAAAA,KAAK,EAAE,WAAvC;AAAoDC,IAAAA,IAAI,EAAExB;AAA1D,GAFK;AAGd0B,EAAAA,SAAS,EAAE;AAACJ,IAAAA,QAAQ,EAAE,qBAAX;AAAkCC,IAAAA,KAAK,EAAE,aAAzC;AAAwDC,IAAAA,IAAI,EAAEvB;AAA9D;AAHG,CAAhB;AAMA,MAAM0B,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeT,OAAf,EAAwBZ,GAAxB,MAA4B,CAAC,CAACsB,CAAD,EAAIC,CAAJ,CAAD,KAAY;AAC9D,MAAIC,QAAQ,GAAG3B,QAAQ,CAAC4B,cAAT,CAAwBF,CAAC,CAACT,QAA1B,CAAf;AACAU,EAAAA,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,EAAmC,MAAMtB,QAAQ,CAACmB,CAAC,CAACR,KAAH,CAAjD;AACA,SAAOS,QAAP;AACD,CAJuB,CAAxB;MAAML,e;;AAMN,SAASQ,gBAAT,CAA0BC,SAA1B,EAAqC;AACnCT,EAAAA,eAAe,CAACU,OAAhB,CAAwBC,CAAC,IAAI;AAC3B,QAAIA,CAAC,CAACC,EAAF,KAASH,SAAS,CAACd,QAAvB,EAAiC;AAC/B,UAAI,CAACgB,CAAC,CAACE,SAAF,CAAYC,QAAZ,CAAqB,QAArB,CAAL,EACEH,CAAC,CAACE,SAAF,CAAYE,GAAZ,CAAgB,QAAhB;AACH,KAHD,MAGO;AACL,UAAIJ,CAAC,CAACE,SAAF,CAAYC,QAAZ,CAAqB,QAArB,CAAJ,EACEH,CAAC,CAACE,SAAF,CAAYrB,MAAZ,CAAmB,QAAnB;AACH;AACF,GARD;AASD;;AAED,SAASC,OAAT,EAAkBO,eAAlB,EAAmCQ,gBAAnC","sourcesContent":["import { mdiHome, mdiBriefcase, mdiDocker } from '@mdi/js';\n\n// Tooltip enabler\nconst tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\nconst tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n  return new bootstrap.Tooltip(tooltipTriggerEl);\n});\n\nconst gotoMenu = (suburl) => {\n  // Go to route\n  window.history.pushState({}, '', suburl);\n\n  // Remove all tooltip\n  for (var tooltipElement of document.getElementsByClassName('tooltip'))\n    tooltipElement.remove();\n};\n\nconst SIDEBAR = {\n  HOME: {targetId: 'sidebarHomeBtn', route: '/', icon: mdiHome},\n  PROJECT: {targetId: 'sidebarProjectBtn', route: '/projects', icon: mdiBriefcase},\n  CONTAINER: {targetId: 'sidebarContainerBtn', route: '/containers', icon: mdiDocker},\n};\n\nconst SIDEBAR_ELEMENT = Object.entries(SIDEBAR).map(([k, v]) => {\n  var sElement = document.getElementById(v.targetId);\n  sElement.addEventListener('click', () => gotoMenu(v.route));\n  return sElement;\n});\n\nfunction setSidebarActive(sidebarId) {\n  SIDEBAR_ELEMENT.forEach(e => {\n    if (e.id === sidebarId.targetId) {\n      if (!e.classList.contains('active'))\n        e.classList.add('active');\n    } else {\n      if (e.classList.contains('active'))\n        e.classList.remove('active');\n    }\n  });\n}\n\nexport { SIDEBAR, SIDEBAR_ELEMENT, setSidebarActive };\n"]},"metadata":{},"sourceType":"module"}